MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:25:53" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 30, 2015
Time:                15:25:53
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0VJTPQX "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0VJTPQX new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:25:53" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:25:53" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21286      proc freq data=EMWS1.Prof_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_VariableSet noprint;
21287      table ROLE*LEVEL/out=WORK.ProfMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ProfMETA;
21288      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set WORK.PROFMETA has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

21289      proc print data=WORK.ProfMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ProfMETA label noobs;
21290      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21291      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21292      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21293      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21294      run;

NOTE: There were 8 observations read from the data set WORK.PROFMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21295      title10;
MPRINT(EM_DIAGRAM):   title10;
21296      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'insurance_segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'insurance segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21641      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21642      * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
21643      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
21644      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

21645      %let EMEXCEPTIONSTRING=;
21646      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21647      * TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof;
21648      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21649      %let EM_ACTION = TRAIN;
21650      %let syscc = 0;
21651      %macro main;
21652         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
21653             options MPRINT;
21654         %end;
21655      
21656         filename temp catalog 'sashelp.emexpl.profile_macros.source';
21657         %include temp;
21658         filename temp;
21659      
21660         /* Initialize property macro variables */
21661         %SetProperties;
21662      
21663         %if %upcase(&EM_ACTION) = CREATE %then %do;
21664      
21665             filename temp catalog 'sashelp.emexpl.profile_create.source';
21666             %include temp;
21667             filename temp;
21668             %create;
21669         %end;
21670         %else
21671         %if %upcase(&EM_ACTION) = TRAIN %then %do;
21672      
21673             filename temp catalog 'sashelp.emexpl.profile_train.source';
21674             %include temp;
21675             filename temp;
21676             %train;
21677         %end;
21678      %mend main;
21679      
21680      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
21681     +%macro SetProperties;
21682     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
21683     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
21684     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
21685     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
21686     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
21687     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
21688     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
21689     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
21690     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
21691     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
21692     +%mend SetProperties;
21695     +%macro makeVarMacros(level= );
21697     +    %let numvars = 0;
21698     +    %let where   = '';
21700     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21701     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
21702     +    %else
21703     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
21705     +    %if &level = INTERVAL %then %do;
21706     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21707     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21708     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
21709     +    %end;
21710     +    %else %do;
21711     +        %if &level = NOMINAL %then %do;
21712     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21713     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21714     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21715     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
21716     +             %end;
21717     +             %else
21718     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
21720     +        %end;
21721     +        %else %do;
21722     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21723     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21724     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
21725     +        %end;
21726     +    %end;
21728     +    %if &numvars>0 %then %do;
21729     +         %let numloop = %sysfunc(ceil(&numvars/10000));
21730     +         %let loopcount = 0;
21732     +         %do %while((&numloop - &loopcount) > 0);
21733     +             %let first = %eval((&loopcount*10000) + 1);
21734     +             %let last  = %eval(&first + 10000);
21735     +             %let loopcount = %eval(&loopcount +1);
21736     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
21737     +             filename X catalog "&centry";
21738     +             data _null_;
21739     +                length _STRING_ $80;
21740     +                retain _STRING_ ;
21741     +                file X;
21742     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
21744     +                where &where;
21746     +                if _N_=1 then
21747     +                   put '%macro _PROFVAR;';
21749     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
21750     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
21751     +                   if eof then do;
21752     +                      put _STRING_;
21753     +                      put '%mend _PROFVAR;';
21754     +                   end;
21755     +                end;
21756     +                else do;
21757     +                   put _STRING_;
21758     +                  _string_ = TRIM(NAME);
21759     +                   if eof then do;
21760     +                      put _string_;
21761     +                      put '%mend _PROFVAR;';
21762     +                   end;
21763     +                end;
21764     +             run;
21765     +             filename X;
21766     +         %end;
21767     +    %end;
21769     +%mend makeVarMacros;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
21772     +%macro _looparbor(level=, target=, rules=);
21773     +    %local where;
21775     +    %if (&level eq or &target eq ) %then %goto doenda;
21776     +    %if &rules eq %then &rules = _TEMPRULE;
21778     +    %let lnumvars = 0;
21779     +    %let where   = '';
21781     +    %if &level = INTERVAL %then %do;
21782     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21783     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21784     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
21785     +    %end;
21786     +    %else %do;
21787     +        %if &level = NOMINAL %then %do;
21788     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21789     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21790     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21791     +        %end;
21792     +        %else %do;
21793     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21794     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21795     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
21796     +        %end;
21797     +    %end;
21799     +    %if &lnumvars>0 %then %do;
21800     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
21801     +         %let loopcount = 0;
21803     +         %do %while((&numloop - &loopcount) > 0);
21804     +             %let loopcount = %eval(&loopcount +1);
21805     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
21806     +             filename X catalog "&centry";
21807     +             %inc X;
21809     +             proc arbor data=&EM_NODEID._TMP
21811     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
21812     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
21813     +                 Maxbranch=5 Maxdepth=1
21814     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
21815     +             %end;
21816     +             %else %do;
21817     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
21818     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
21819     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
21820     +             %end;
21822     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
21824     +                input %_PROFVAR
21826     +                    / level = &level;
21827     +                target _SEG / level=binary;
21829     +                Performance Disk NodeSize=10000;
21830     +                Assess NoValidata measure=MISC;
21831     +                SUBTREE BEST;
21833     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
21834     +                    save IMPORTANCE=_LOOPTEMPRULE;
21835     +                %end;
21836     +                %else %do;
21837     +                    save RULES=_LOOPTEMPRULE;
21838     +                %end;
21839     +             run;
21840     +             quit;
21842     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
21843     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
21844     +                 run;
21845     +                 proc datasets lib=work nolist mt=(DATA VIEW);
21846     +                    delete _LOOPTEMPRULE;
21847     +                 run;
21848     +                 quit;
21849     +             %end;
21852     +             filename X;
21853     +         %end;
21854     +     %end;
21856     +   %doenda:
21858     +%mend _looparbor;
21860     +%macro _arbor(target=, rules=, fit=);
21861     +   %local _numnomvars _numordvars _numintvars;
21863     +   %if &target eq  %then %goto doendc;
21864     +   %if &rules eq %then &rules = _TEMPRULE;
21865     +   %if &fit   eq %then &fit   = _FIT;
21867     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21868     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21869     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
21872     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21873     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21874     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21876     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21877     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21878     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
21880     +   proc arbor data=&EM_NODEID._TMP
21882     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
21883     +      Criterion=GINI Leafsize=5 Mincatsize = 5
21884     +      Maxbranch=5 Maxdepth=1
21885     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
21886     +   %end;
21887     +   %else %do;
21888     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
21889     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
21890     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
21891     +   %end;
21893     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
21895     +      %if &_numintvars %then %do;
21896     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
21898     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21899     +              %EM_INTERVAL_TARGET
21900     +          %end;
21902     +              / level = interval;
21903     +      %end;
21906     +      %if &_numnomvars %then %do;
21907     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
21909     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21910     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
21911     +          %end;
21913     +              / level = nominal;
21914     +      %end;
21916     +      %if &_numordvars %then %do;
21917     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
21919     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21920     +              %EM_ORDINAL_TARGET
21921     +         %end;
21923     +             / level = ordinal;
21924     +      %end;
21926     +      target _SEG / level=binary;
21928     +      Performance Disk NodeSize=10000;
21929     +      Assess
21931     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
21932     +          Validata=&EM_NODEID._VALIDTMP
21933     +      %end;
21934     +      %else %do;
21935     +          NoValidata
21936     +      %end;
21938     +      measure=MISC;
21939     +      SUBTREE BEST;
21941     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
21942     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
21943     +                role=TRAIN;
21944     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
21945     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
21946     +                role=VALID;
21947     +          %end;
21949     +          save IMPORTANCE=_RULE;
21950     +      %end;
21951     +      %else %do;
21952     +          save RULES=_RULE;
21953     +      %end;
21955     +      ;
21956     +   run;
21957     +   quit;
21959     +   %if %sysfunc(exist(_RULE)) %then %do;
21960     +       proc append base=&RULES data=_RULE force;
21961     +       run;
21962     +       proc datasets lib=work nolist mt=(DATA VIEW);
21963     +          delete _RULE;
21964     +       run;
21965     +       quit;
21966     +   %end;
21968     +   %doendc:
21970     +%mend _arbor;
21972     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
21973     +   %put &EM_CODEBAR;
21974     +   %put * Filtering input variables ;
21975     +   %put * SEGMENT= &segment;
21976     +   %put &EM_CODEBAR;
21978     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
21979     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
21980     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
21982     +  %let _SEGMENT = &SEGMENT;
21984     +  proc freq data=&EM_IMPORT_DATA noprint ;
21985     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
21987     +    %if %EM_FREQ ne %then %do;
21988     +        weight %EM_FREQ;
21989     +        where %EM_FREQ>=0;
21990     +    %end;
21992     +  run ;
21993     +  proc sort data=&_segment;
21994     +     by descending count ;
21995     +  run ;
21997     +  %let dsid       = %sysfunc(open(&_segment));
21998     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
21999     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
22000     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
22002     +  %let dsid=%sysfunc(close(&dsid));
22004     +  %let SEGMENTS=;
22005     +  %let COUNTS=;
22006     +  %let OTHERWHERE=;
22007     +  %let numLevels=;
22008     +  data _segs;
22009     +     length SegmentVariable $32 SegmentValue $200;
22010     +     retain SegmentVariable "&_Segment";
22011     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22012     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
22013     +     drop &_segment cum othercount otherpct numLevels;
22014     +     retain cum othercount otherpct numLevels 0;
22015     +     format Count 8.;
22016     +     set &_segment end=eof;
22018     +     %if &_segformat ne %then %do;
22019     +         SegmentValue= left(put(&_segment, &_segformat));
22020     +     %end;
22021     +     %else %do;
22022     +        %if &_segtype = N %then %do;
22023     +            SegmentValue= left(put(&_segment, best12.));
22024     +        %end;
22025     +        %else %do;
22026     +            SegmentValue = &_segment;
22027     +        %end;
22028     +     %end;
22030     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
22031     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22032     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22033     +        numLevels + 1;
22034     +        output;
22035     +     %end;
22036     +     %else %do;
22037     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
22038     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22039     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22040     +            numLevels + 1;
22041     +            output;
22042     +         end;
22043     +         else do;
22044     +            %if &_segtype = C or &_segformat ne %then %do;
22045     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
22046     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
22047     +            %end;
22048     +            %else %do;
22049     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
22050     +            %end;
22051     +            othercount = othercount + count;
22052     +            otherpct   = otherpct + percent;
22053     +            if eof then do;
22054     +               SegmentValue = '_OTHER_';
22055     +               count   = othercount;
22056     +               percent = otherpct;
22057     +               numLevels + 1;
22058     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
22059     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
22060     +               output;
22061     +            end;
22062     +         end;
22063     +         cum = cum + percent;
22064     +     %end;
22065     +     if eof then
22066     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
22067     +  run ;
22069     +  title9 " " ;
22070     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
22071     +  proc print data=_segs noobs label ;
22072     +  run ;
22073     +  title9;
22074     +  title10;
22076     +  proc append base=&_sizeDs data=_segs force;
22077     +  run;
22079     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
22080     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
22081     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
22083     +  /* Loop over segments */
22084     +  %do i=1 %to &numLevels;
22085     +     %if ^&numvars %then %do;
22086     +         %if %sysfunc(exist(&_reportDs)) %then %do;
22087     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
22088     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22089     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22090     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22091     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
22092     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
22093     +                length SegmentVariable $32 SegmentValue $200;
22094     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
22095     +                set &_reportDs;
22096     +                Rank = _N_;
22097     +             run;
22098     +             proc append base=&_varsDs data=_TEMPRULE force;
22099     +             run;
22100     +         %end;
22101     +         %goto doskip;
22102     +     %end;
22104     +     %if &_segformat ne %then %do;
22105     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
22106     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
22107     +         %else
22108     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
22109     +     %end;
22110     +     %else %do;
22111     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
22112     +                 %let where= &_segment in(&OTHERWHERE);
22113     +         %else %do;
22114     +             %if &_segtype eq N %then
22115     +                 %let where= &_segment = &&segments&i;
22116     +             %else
22117     +                 %let where= &_segment = "&&segments&i";
22118     +         %end;
22119     +     %end;
22121     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
22122     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
22123     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
22124     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
22125     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
22126     +        if &where then
22127     +           _seg= 1 ;
22128     +        else
22129     +           _seg= 0 ;
22130     +     run ;
22132     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
22133     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
22134     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
22135     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
22136     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
22137     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
22139     +             if &where then
22140     +                _seg= 1 ;
22141     +              else
22142     +                 _seg= 0 ;
22143     +          run ;
22144     +      %end;
22146     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
22147     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
22148     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
22149     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
22150     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
22151     +     %end;
22152     +     %else %do;
22153     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
22154     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
22155     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
22156     +     %end;
22158     +     /* Keeping the important variables */
22159     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22160     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
22161     +            length Name $32;
22162     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
22163     +            retain Name;
22165     +            set _temprule;
22167     +            where stat in('VARIABLE','WORTH');
22169     +            if stat = 'VARIABLE' then
22170     +               Name = character_value;
22171     +            else
22172     +               output;
22173     +         run;
22175     +         proc sort data=_TEMPRULE;
22176     +            by descending Worth;
22177     +         run;
22179     +         %if %sysfunc(exist(&_reportDs)) %then %do;
22180     +             data _TEMPRULE;
22181     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
22182     +             run;
22183     +             proc sort data= _TEMPRULE nodupkey;
22184     +                by variable;
22185     +             run;
22186     +             proc sort data=_TEMPRULE;
22187     +                by descending Worth;
22188     +             run;
22189     +         %end;
22190     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
22191     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22192     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22193     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22194     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
22195     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
22196     +            length SegmentVariable $32 SegmentValue $200;
22197     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
22198     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
22199     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
22200     +            %end;
22201     +            %else %do;
22202     +                set _TEMPRULE;
22203     +            %end;
22204     +            Rank = _N_;
22205     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
22206     +               put "&EM_CODEBAR";
22207     +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
22208     +               put "* You may identify profile variables by lowering this threshold, ";
22209     +               put "* or by increasing the maximum depth of the decision tree used.";
22210     +               put "&EM_CODEBAR";
22211     +            end;
22212     +         run;
22213     +     %end;
22214     +     %else %do;
22215     +         %if %sysfunc(exist(&_reportDs)) %then %do;
22216     +             data _TEMPRULE;
22217     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
22218     +             run;
22219     +             proc sort data= _TEMPRULE nodupkey;
22220     +                by variable;
22221     +             run;
22222     +             proc sort data=_TEMPRULE;
22223     +                by descending Importance;
22224     +             run;
22225     +         %end;
22226     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
22227     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22228     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22229     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22230     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
22231     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
22232     +            length SegmentVariable $32 SegmentValue $200;
22233     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
22234     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
22235     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
22236     +            %end;
22237     +            %else %do;
22238     +                set _TEMPRULE;
22239     +            %end;
22240     +            Rank = _N_;
22241     +         run;
22242     +     %end;
22244     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, &&segments&i, &&counts&i))";
22245     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
22247     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
22248     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22249     +             proc print data=_TEMPRULE noobs label ;
22250     +                var Variable Worth Rank;
22251     +                where worth ne .;
22252     +             run ;
22253     +             data _TEMPRULE;
22254     +                set _TEMPRULE;
22255     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
22256     +             run;
22257     +         %end;
22258     +         %else %do;
22259     +             proc print data=_TEMPRULE noobs label ;
22260     +                var Variable Importance Rank;
22261     +                where importance ne .;
22262     +             run ;
22263     +         %end;
22265     +     %end ;
22267     +     title9;
22268     +     title10;
22270     +     proc append base=&_varsDs data=_TEMPRULE force;
22271     +     run;
22273     +     %if %sysfunc(exist(_FIT)) %then %do;
22274     +         data _FIT;
22275     +            length SegmentVariable $32 SegmentValue $200;
22276     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
22278     +            %if %sysfunc(exist(_FIT2)) %then %do;
22279     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
22280     +            %end;
22281     +            %else %do;
22282     +                set _FIT(keep=_MISC_);
22283     +            %end;
22285     +         run;
22286     +         proc append base=&_fitDs data=_FIT force;
22287     +         run;
22288     +     %end;
22290     +     %doskip:
22292     +     proc datasets lib=work nolist mt=(DATA VIEW);
22293     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
22295     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
22296     +            _TEMPRULE
22297     +        %end;
22298     +        %if %sysfunc(exist(_FIT))>0 %then %do;
22299     +            _FIT
22300     +        %end;
22301     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
22302     +            _FIT2
22303     +        %end;
22304     +     ;
22305     +     run;
22306     +     quit;
22307     +  %end ;
22308     +%mend tree_profile;
22310     +/* This macro loops over segment variables and determines important variables */
22311     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
22312     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
22314     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
22315     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
22316     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
22318     +    %if _segmentvar eq %then %do;
22319     +        %put &EM_CODEBAR;
22320     +        %put * No segment variable defined ;
22321     +        %put &EM_CODEBAR;
22322     +        %goto doendep;
22323     +    %end;
22325     +    %let sndx = 0;
22327     +    %let svar = &_segmentvar;
22328     +    %if &svar ne %then %do;
22329     +        %makeVarMacros(LEVEL=INTERVAL);
22330     +        %makeVarMacros(LEVEL=NOMINAL);
22331     +        %makeVarMacros(LEVEL=ORDINAL);
22332     +    %end;
22334     +    %do %while(&svar ne );
22335     +        %let sndx= %eval(&sndx+1);
22336     +        %let svar = %scan(&_segmentvar, &sndx,' ');
22337     +        %if &svar ne %then
22338     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
22339     +    %end ;
22341     +    proc datasets lib=&EM_LIB nolist;
22342     +       delete &EM_NODEID._MACS(mt=catalog);
22343     +    run;
22345     +    %doendep:
22346     +%mend em_profile;
22348     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
22349     +   %put &EM_CODEBAR;
22350     +   %put * Summarizing variables ;
22351     +   %put * SEGMENT= &segment;
22352     +   %put &EM_CODEBAR;
22354     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
22356     +  %let _SEGMENT = &SEGMENT;
22358     +  %let dsid       = %sysfunc(open(&_segment));
22359     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
22360     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
22361     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
22363     +  %let dsid=%sysfunc(close(&dsid));
22365     +  %let SEGMENTS=;
22366     +  %let COUNTS=;
22367     +  %let OTHERWHERE=;
22368     +  %let numLevels=;
22369     +  data _null_;
22370     +     retain cum othercount otherpct  numLevels 0;
22371     +     format Count 8.;
22372     +     set &_segment end=eof;
22374     +     %if &_segformat ne %then %do;
22375     +         SegmentValue= strip(put(&_segment, &_segformat));
22376     +     %end;
22377     +     %else %do;
22378     +        %if &_segtype = N %then %do;
22379     +            SegmentValue= strip(put(&_segment, best12.));
22380     +        %end;
22381     +        %else %do;
22382     +            SegmentValue = &_segment;
22383     +        %end;
22384     +     %end;
22386     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
22387     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22388     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22389     +         numLevels + 1;
22390     +         output;
22391     +     %end;
22392     +     %else %do;
22393     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
22394     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22395     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22396     +            numLevels + 1;
22397     +            output;
22398     +         end;
22399     +         else do;
22400     +            %if &_segtype = C or &_segformat ne %then %do;
22401     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
22402     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
22403     +            %end;
22404     +            %else %do;
22405     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
22406     +            %end;
22407     +            othercount = othercount + count;
22408     +            otherpct   = otherpct + percent;
22409     +            if eof then do;
22410     +               SegmentValue = '_OTHER_';
22411     +               count   = othercount;
22412     +               percent = otherpct;
22413     +               numLevels + 1;
22414     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
22415     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
22416     +               output;
22417     +            end;
22418     +         end;
22419     +         cum = cum + percent;
22420     +     %end;
22421     +     if eof then
22422     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
22423     +  run ;
22425     +  /* Loop over segments */
22426     +  %do S = 1 %to &numLevels;
22427     +     %if &_segformat ne %then %do;
22428     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
22429     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
22430     +         %else
22431     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
22432     +     %end;
22433     +     %else %do;
22434     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
22435     +                 %let where= &_segment in(&OTHERWHERE);
22436     +         %else %do;
22437     +             %if &_segtype eq N %then
22438     +                 %let where= &_segment = &&segments&s;
22439     +             %else
22440     +                 %let where= &_segment = "&&segments&s";
22441     +         %end;
22442     +     %end;
22444     +     %let SEGVARS=;
22445     +     %let SEGCLASS=;
22446     +     data _tempStat;
22447     +        set &_varsDs;
22448     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
22449     +        if Type eq 'I' then
22450     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
22451     +        else
22452     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
22453     +     run ;
22455     +     %let _nobs = 0;
22456     +     %let dsid = %sysfunc(open(_tempStat));
22457     +     %if &dsid %then %do;
22458     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
22459     +         %let dsid = %sysfunc(close(&dsid));
22460     +     %end;
22461     +     %if &_nobs<1 %then %goto doskips;
22463     +     proc sort data=_tempStat;
22464     +        by Variable;
22465     +     run;
22467     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
22468     +        set &EM_IMPORT_DATA;
22470     +        where &where;
22472     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
22473     +            %inc &FormatFref;
22474     +        %end;
22475     +     run;
22477     +     /* Profile Segment */
22478     +     %if &segclass ne %then %do;
22479     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
22480     +         data _CLASS;
22481     +            length SegmentVariable $32 SegmentValue $200;
22482     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
22483     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22484     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22485     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22486     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22487     +            set _CLASS;
22488     +         run;
22489     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
22490     +         run;
22491     +         data _tempStat;
22492     +            merge _tempStat _STAT;
22493     +            by VARIABLE;
22494     +         run;
22495     +     %end;
22496     +     %if &segvars ne %then %do;
22497     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
22498     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
22499     +         data _INTERVAL;
22500     +             length SegmentVariable $32 SegmentValue $200;
22501     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
22502     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22503     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22504     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22505     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22506     +             set _INTERVAL;
22507     +         run;
22509     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
22510     +         run;
22512     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
22513     +            by VARIABLE;
22514     +         run;
22515     +         data _tempStat;
22516     +            merge _tempStat _STAT;
22517     +            by VARIABLE;
22518     +         run;
22520     +     %end;
22522     +     proc sort data=_tempStat;
22523     +        by Rank;
22524     +     run;
22525     +     proc append base=&EM_USER_STATS data=_tempStat force;
22526     +     run;
22528     +     %doskips:
22530     +     proc datasets lib=work nolist mt=(DATA VIEW);
22531     +        delete _segment &EM_NODEID._TMP _interval _class
22533     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
22534     +            _tempStat
22535     +        %end;
22536     +     ;
22537     +     run;
22538     +     quit;
22541     +  %end ;
22542     +%mend segmentSummary;
22544     +%macro train;
22546     +   /* Retrieve data set name */
22547     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
22548     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
22549     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
22550     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
22551     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
22552     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
22553     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
22554     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
22556     +   /* Delete previous data sets */
22557     +   proc datasets lib=&EM_LIB nolist;
22558     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
22559     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
22560     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
22561     +   run;
22563     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
22564     +       or (&EM_IMPORT_DATA eq ) %then %do;
22565     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
22566     +       %goto doendpt;
22567     +   %end;
22569     +    proc sort data=&EM_DATA_VARIABLESET;
22570     +       by Name;
22571     +    run;
22573     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
22575     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
22576     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
22578     +    /* Add report variables */
22579     +    %let REPORT_VARS = ;
22580     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
22581     +        %let REPORT_VARS = %EM_TARGET;
22582     +    %end;
22583     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
22584     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
22585     +    %end;
22587     +    %if &REPORT_VARS ne %then %do;
22588     +        data _tempreport;
22589     +           length Variable $32;
22591     +        %let rndx= 0 ;
22592     +        %let rvar  = &REPORT_VARS;
22593     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
22594     +            %let rndx= %eval(&rndx+1);
22595     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
22596     +            %if &rvar ne %then %do;
22597     +                Variable="&rvar"; output;
22598     +            %end ;
22599     +        %end;
22601     +        run;
22602     +    %end;
22604     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
22605     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
22607     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
22609     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
22610     +        data &EM_USER_SELVARS;
22611     +           set _tempreport;
22612     +        run;
22613     +    %end;
22615     +    proc sort data=&EM_USER_SELVARS;
22616     +       by Variable;
22617     +    run;
22618     +    data &EM_USER_SELVARS;
22619     +       length Type $1;
22620     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
22621     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
22622     +       by Variable;
22623     +       if LABEL eq '' then LABEL=VARIABLE;
22624     +       if a then do;
22625     +          if LEVEL = 'INTERVAL' then Type = 'I';
22626     +          else Type = 'C';
22627     +           output;
22628     +       end;
22629     +       drop LEVEL;
22630     +    run;
22632     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
22633     +       by Variable;
22634     +    run;
22635     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
22636     +    %else
22637     +        %let selStat = Worth;
22639     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
22640     +       length Type $1;
22641     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
22642     +       set _SummaryVars;
22643     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
22644     +       rank = .; &selStat=.;
22645     +       if Label eq '' then Label=Variable;
22646     +   run;
22648     +    /* Profile Entire Data */
22649     +   %put &EM_CODEBAR;
22650     +   %put * Profile Entire Data ;
22651     +   %put &EM_CODEBAR;
22653     +    %let segvars=;
22654     +    %let segclass=;
22655     +    data _null_;
22656     +       set  &EM_USER_STATS;
22657     +       if Type = 'I' then
22658     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
22659     +       else
22660     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
22661     +    run ;
22663     +    %if &segclass ne %then %do;
22664     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
22665     +        data _CLASS;
22666     +           length SegmentVariable $32 SegmentValue $200;
22667     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
22668     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22669     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22670     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22671     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22672     +           set _CLASS;
22673     +        run;
22674     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
22675     +        run;
22677     +        proc sort data=_STAT;
22678     +           by VARIABLE;
22679     +        run;
22680     +        data &EM_USER_STATS;
22681     +            merge  &EM_USER_STATS _STAT;
22682     +            by VARIABLE;
22683     +        run;
22684     +    %end;
22685     +    %if &segvars ne %then %do;
22686     +        /* Computing Min and Max for Interval Variables */
22687     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
22688     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
22689     +        data _INTERVAL;
22690     +           length SegmentVariable $32 SegmentValue $200;
22691     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
22692     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22693     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22694     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22695     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22696     +           set _INTERVAL;
22697     +        run;
22699     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
22700     +        run;
22702     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
22703     +           by VARIABLE;
22704     +        run;
22705     +        data &EM_USER_STATS;
22706     +            merge  &EM_USER_STATS _STAT;
22707     +            by VARIABLE;
22708     +        run;
22709     +    %end;
22711     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
22713     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
22714     +        proc datasets lib=&EM_LIB nolist;
22715     +           delete &EM_NODEID._INTERVAL(mt=catalog);
22716     +        run;
22717     +    %end;
22719     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
22720     +        data _null_;
22721     +           file X;
22723     +           %let dsid    =%sysfunc(open(DATA_STAT));
22724     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
22725     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
22726     +           %let obs = %sysfunc(fetch(&dsid));
22728     +           put 'format' ;
22730     +           %let _count = 0;
22731     +           %let _VARS=;
22732     +           %do %while(&obs=0);
22734     +               %let _count = %eval(&_count +1);
22735     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
22736     +               %let _VARS = &_VARS &_name;
22737     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
22738     +               %do;
22739     +                  put "&_name &_fmtname..";
22740     +               %end;
22741     +               %let obs = %sysfunc(fetch(&dsid));
22742     +           %end;
22743     +           %let dsid=%sysfunc(close(&dsid));
22744     +           put ';';
22745     +        run;
22746     +    %end;
22748     +    /* Profile Segments */
22749     +    %if _segmentvar eq %then %goto doendpt;
22750     +    %let sndx = 0;
22752     +    %let svar = &_segmentvar;
22753     +    %do %while(&svar ne );
22754     +        %let sndx= %eval(&sndx+1);
22755     +        %let svar = %scan(&_segmentvar, &sndx,' ');
22756     +        %if &svar ne %then
22757     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
22758     +    %end ;
22760     +    filename X;
22762     +    %doendpt:
22765     +    /* Set reports for the node */
22766     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
22768     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
22769     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
22770     +            data &EM_USER_INTDIST;
22771     +               set &EM_USER_INTDIST;
22772     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22773     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22774     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
22775     +               if SegmentVariable = '_OVERALL_' then Color = 1;
22776     +               else Color = 0;
22777     +            run;
22778     +        %end;
22779     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
22780     +            data &EM_USER_CLASSDIST;
22781     +               set &EM_USER_CLASSDIST;
22782     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22783     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22784     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
22785     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
22786     +               else GroupIndex = 1;
22787     +            run;
22788     +        %end;
22790     +        %let svar = &_segmentvar;
22791     +        %let sndx = 0;
22792     +        %do %while(&svar ne );
22793     +            %let sndx= %eval(&sndx+1);
22794     +            %let svar = %scan(&_segmentvar, &sndx,' ');
22795     +            %if &svar ne %then %do;
22796     +                %let autodisplay = N;
22797     +                %if &sndx = 1 %then
22798     +                    %let autodisplay = Y;
22799     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
22800     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
22801     +                      LOCALIZE=Y, COLOR=COLOR);
22802     +            %end;
22803     +        %end ;
22804     +    %end;
22806     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
22807     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22808     +            data &EM_USER_WORTH;
22809     +               set &EM_USER_STATS;
22810     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22811     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22812     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22813     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
22814     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
22815     +               where WORTH ne .;
22816     +            run;
22817     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
22818     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
22819     +                  LOCALIZE=Y, NCOLS=1);
22820     +        %end;
22821     +        %else %do;
22822     +            data &EM_USER_IMPORTANCE;
22823     +               set &EM_USER_STATS;
22824     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22825     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22826     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22827     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
22828     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
22829     +               where IMPORTANCE ne .;
22830     +            run;
22831     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
22832     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
22833     +                  LOCALIZE=Y, NCOLS=1);
22834     +       %end;
22835     +    %end;
22837     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
22838     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
22839     +            data &EM_USER_SIZE;
22840     +               merge &EM_USER_SIZE &EM_USER_FIT;
22841     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
22842     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
22843     +               format PERCENT 5.2;
22844     +               format COUNT 12.;
22845     +            run;
22846     +        %end;
22847     +        %else %do;
22848     +            data &EM_USER_SIZE;
22849     +               set &EM_USER_SIZE;
22850     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
22851     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
22852     +               format PERCENT 5.2;
22853     +               format COUNT 12.;
22854     +            run;
22855     +        %end;
22857     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
22858     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
22860     +    %end;
22862     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
22863     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
22864     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
22865     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
22867     +    proc datasets lib=&EM_LIB nolist;
22868     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
22869     +    run;
22871     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof_SIZE Prof_STATS Prof_FIT Prof_WORTH Prof_IMPORTANCE Prof_SELVARS Prof_CLASSDIST Prof_INTDIST Prof_MACS(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1.PROF_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;

NOTE: There were 22 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_VARIABLESET has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:25:54 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:54 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 6 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 77.
NOTE: There were 13 observations read from the data set EMWS1.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof_MACS.NOMINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:54 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:54 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 36.
NOTE: There were 2 observations read from the data set EMWS1.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof_MACS.ORDINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="ORDINAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="ORDINAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_MACS.ORDINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=6,
      Created=Wednesday, December 30, 2015 03:25:54 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:54 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set EMWS1.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='ORDINAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='ORDINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS1.Clus_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table _SEGMENT_ / missing out=_SEGMENT_(keep=_SEGMENT_ count percent) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.15 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.22 seconds
      cpu time            0.17 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_SEGMENT_;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value";
MPRINT(TREE_PROFILE):   drop _SEGMENT_ cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set _SEGMENT_ end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(_SEGMENT_, best12.));
MPRINT(TREE_PROFILE):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   else do;
MPRINT(TREE_PROFILE):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(TREE_PROFILE):   othercount = othercount + count;
MPRINT(TREE_PROFILE):   otherpct = otherpct + percent;
MPRINT(TREE_PROFILE):   if eof then do;
MPRINT(TREE_PROFILE):   SegmentValue = '_OTHER_';
MPRINT(TREE_PROFILE):   count = othercount;
MPRINT(TREE_PROFILE):   percent = otherpct;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   cum = cum + percent;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frequencies: _SEGMENT_";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._SEGS to EMWS1.PROF_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS1.PROF_SIZE has 4 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1282591 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 234049536 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4164608 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 85 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.54 seconds
      cpu time            0.53 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.56 seconds
      cpu time            0.54 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 85 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 85 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 2 Count: 2909";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS1.PROF_SELVARS has 10 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1282591 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 234049536 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4164608 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 86 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.43 seconds
      cpu time            0.42 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.46 seconds
      cpu time            0.43 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 86 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 86 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 1 Count: 2458";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 20 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1282591 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 234049536 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4164608 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 86 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.39 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.42 seconds
      cpu time            0.39 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 86 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 86 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 3 Count: 2328";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 30 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1282591 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 234049536 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4164608 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 87 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.50 seconds
      cpu time            0.46 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.52 seconds
      cpu time            0.48 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 87 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 87 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 4 Count: 2092";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 40 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_PROFILE):   proc datasets lib=EMWS1 nolist;
MPRINT(EM_PROFILE):   delete Prof_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;

NOTE: Deleting EMWS1.PROF_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 40 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: The data set EMWS1.PROF_SELVARS has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   merge EMWS1.Prof_SELVARS(in=a) EMWS1.Prof_VariableSet(keep=NAME LEVEL LABEL rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;

WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This may cause unexpected results.
NOTE: There were 40 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: There were 22 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_SELVARS has 40 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 40 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: 28 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 12 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS1.Clus_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;

NOTE: There were 12 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS1.PROF_STATS has 12 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Prof_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;

NOTE: There were 12 observations read from the data set EMWS1.PROF_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:57 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22875     +%macro _vars;
22876     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.27 seconds
      cpu time            0.24 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _CLASS;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _CLASS;
MPRINT(TRAIN):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS1.PROF_CLASSDIST has 6 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 12 observations read from the data set EMWS1.PROF_STATS.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF_STATS has 12 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:57 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22877     +%macro _vars;
22878     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._STAT has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 10 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 90 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 90 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 90 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 90 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 90 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 10 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(VAR_PROFILE):  = ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.36 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 11 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.38 seconds
      cpu time            0.37 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 10 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 10 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 10 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 10 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 10 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:25:59 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:59 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 127 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 10 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
22879     +proc format;
MPRINT(VAR_PROFILE):   proc format;
22880     +value F1_
22881     +LOW -0.1621269754 ="0.0810634877 "
22882     +0.1621269754 -0.3242539508 ="0.2431904631 "
22883     +0.3242539508 -0.4863809262 ="0.4053174385 "
22884     +0.4863809262 -0.6485079016 ="0.5674444139 "
22885     +0.6485079016 -0.810634877 ="0.7295713893 "
22886     +0.810634877 -0.9727618524 ="0.8916983647 "
22887     +0.9727618524 -1.1348888278 ="1.0538253401 "
22888     +1.1348888278 -HIGH="1.2159523155 "
22889     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0.1621269754 ="0.0810634877 " 0.1621269754 -0.3242539508 ="0.2431904631 " 0.3242539508 -0.4863809262 ="0.4053174385 " 0.4863809262 -0.6485079016 ="0.5674444139 " 0.6485079016 -0.810634877 ="0.7295713893 " 0.810634877 
-0.9727618524 ="0.8916983647 " 0.9727618524 -1.1348888278 ="1.0538253401 " 1.1348888278 -HIGH="1.2159523155 " ;
NOTE: Format F1_ has been output.
22890     +value F2_
22891     +LOW --141.73 ="-196.33 "
22892     +-141.73 --32.53 ="-87.13 "
22893     +-32.53 -76.67 ="22.07 "
22894     +76.67 -185.87 ="131.27 "
22895     +185.87 -295.07 ="240.47 "
22896     +295.07 -404.27 ="349.67 "
22897     +404.27 -513.47 ="458.87 "
22898     +513.47 -622.67 ="568.07 "
22899     +622.67 -726.758 ="677.27 "
22900     +726.758 -830.846 ="781.358 "
22901     +830.846 -934.934 ="885.446 "
22902     +934.934 -1039.022 ="989.534 "
22903     +1039.022 -HIGH="1093.622 "
22904     +;
MPRINT(VAR_PROFILE):   value F2_ LOW --141.73 ="-196.33 " -141.73 --32.53 ="-87.13 " -32.53 -76.67 ="22.07 " 76.67 -185.87 ="131.27 " 185.87 -295.07 ="240.47 " 295.07 -404.27 ="349.67 " 404.27 -513.47 ="458.87 " 513.47 -622.67 ="568.07 " 622.67 -726.758 
="677.27 " 726.758 -830.846 ="781.358 " 830.846 -934.934 ="885.446 " 934.934 -1039.022 ="989.534 " 1039.022 -HIGH="1093.622 " ;
NOTE: Format F2_ has been output.
22905     +value F3_
22906     +LOW -1893.375 ="1379.6875 "
22907     +1893.375 -2920.75 ="2407.0625 "
22908     +2920.75 -3948.125 ="3434.4375 "
22909     +3948.125 -4975.5 ="4461.8125 "
22910     +4975.5 -6002.875 ="5489.1875 "
22911     +6002.875 -7030.25 ="6516.5625 "
22912     +7030.25 -8057.625 ="7543.9375 "
22913     +8057.625 -HIGH="8571.3125 "
22914     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -1893.375 ="1379.6875 " 1893.375 -2920.75 ="2407.0625 " 2920.75 -3948.125 ="3434.4375 " 3948.125 -4975.5 ="4461.8125 " 4975.5 -6002.875 ="5489.1875 " 6002.875 -7030.25 ="6516.5625 " 7030.25 -8057.625 ="7543.9375 " 
8057.625 -HIGH="8571.3125 " ;
NOTE: Format F3_ has been output.
22915     +value F4_
22916     +LOW -67.0275 ="45.73875 "
22917     +67.0275 -109.605 ="88.31625 "
22918     +109.605 -152.1825 ="130.89375 "
22919     +152.1825 -194.76 ="173.47125 "
22920     +194.76 -237.3375 ="216.04875 "
22921     +237.3375 -279.915 ="258.62625 "
22922     +279.915 -322.4925 ="301.20375 "
22923     +322.4925 -HIGH="343.78125 "
22924     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -67.0275 ="45.73875 " 67.0275 -109.605 ="88.31625 " 109.605 -152.1825 ="130.89375 " 152.1825 -194.76 ="173.47125 " 194.76 -237.3375 ="216.04875 " 237.3375 -279.915 ="258.62625 " 279.915 -322.4925 ="301.20375 " 322.4925 
-HIGH="343.78125 " ;
NOTE: Format F4_ has been output.
22925     +value F5_
22926     +LOW -10.68375 ="1.841875 "
22927     +10.68375 -28.3675 ="19.525625 "
22928     +28.3675 -46.05125 ="37.209375 "
22929     +46.05125 -63.735 ="54.893125 "
22930     +63.735 -81.41875 ="72.576875 "
22931     +81.41875 -99.1025 ="90.260625 "
22932     +99.1025 -116.78625 ="107.944375 "
22933     +116.78625 -134.47 ="125.628125 "
22934     +134.47 -187.236 ="178.394125 "
22935     +187.236 -240.002 ="231.160125 "
22936     +240.002 -292.768 ="283.926125 "
22937     +292.768 -345.534 ="336.692125 "
22938     +345.534 -HIGH="389.458125 "
22939     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -10.68375 ="1.841875 " 10.68375 -28.3675 ="19.525625 " 28.3675 -46.05125 ="37.209375 " 46.05125 -63.735 ="54.893125 " 63.735 -81.41875 ="72.576875 " 81.41875 -99.1025 ="90.260625 " 99.1025 -116.78625 ="107.944375 " 
116.78625 -134.47 ="125.628125 " 134.47 -187.236 ="178.394125 " 187.236 -240.002 ="231.160125 " 240.002 -292.768 ="283.926125 " 292.768 -345.534 ="336.692125 " 345.534 -HIGH="389.458125 " ;
NOTE: Format F5_ has been output.
22940     +value F6_
22941     +LOW -86.3625 ="52.57125 "
22942     +86.3625 -153.945 ="120.15375 "
22943     +153.945 -221.5275 ="187.73625 "
22944     +221.5275 -289.11 ="255.31875 "
22945     +289.11 -356.6925 ="322.90125 "
22946     +356.6925 -424.275 ="390.48375 "
22947     +424.275 -491.8575 ="458.06625 "
22948     +491.8575 -HIGH="525.64875 "
22949     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -86.3625 ="52.57125 " 86.3625 -153.945 ="120.15375 " 153.945 -221.5275 ="187.73625 " 221.5275 -289.11 ="255.31875 " 289.11 -356.6925 ="322.90125 " 356.6925 -424.275 ="390.48375 " 424.275 -491.8575 ="458.06625 " 
491.8575 -HIGH="525.64875 " ;
NOTE: Format F6_ has been output.
22950     +value F7_
22951     +LOW -6.18375 ="-2.408125 "
22952     +6.18375 -23.3675 ="14.775625 "
22953     +23.3675 -40.55125 ="31.959375 "
22954     +40.55125 -57.735 ="49.143125 "
22955     +57.735 -74.91875 ="66.326875 "
22956     +74.91875 -92.1025 ="83.510625 "
22957     +92.1025 -109.28625 ="100.694375 "
22958     +109.28625 -126.47 ="117.878125 "
22959     +126.47 -152.052 ="143.460125 "
22960     +152.052 -177.634 ="169.042125 "
22961     +177.634 -203.216 ="194.624125 "
22962     +203.216 -228.798 ="220.206125 "
22963     +228.798 -HIGH="245.788125 "
22964     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -6.18375 ="-2.408125 " 6.18375 -23.3675 ="14.775625 " 23.3675 -40.55125 ="31.959375 " 40.55125 -57.735 ="49.143125 " 57.735 -74.91875 ="66.326875 " 74.91875 -92.1025 ="83.510625 " 92.1025 -109.28625 ="100.694375 " 
109.28625 -126.47 ="117.878125 " 126.47 -152.052 ="143.460125 " 152.052 -177.634 ="169.042125 " 177.634 -203.216 ="194.624125 " 203.216 -228.798 ="220.206125 " 228.798 -HIGH="245.788125 " ;
NOTE: Format F7_ has been output.
22965     +value F8_
22966     +LOW -23.25 ="19.125 "
22967     +23.25 -31.5 ="27.375 "
22968     +31.5 -39.75 ="35.625 "
22969     +39.75 -48 ="43.875 "
22970     +48 -56.25 ="52.125 "
22971     +56.25 -64.5 ="60.375 "
22972     +64.5 -72.75 ="68.625 "
22973     +72.75 -HIGH="76.875 "
22974     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -23.25 ="19.125 " 23.25 -31.5 ="27.375 " 31.5 -39.75 ="35.625 " 39.75 -48 ="43.875 " 48 -56.25 ="52.125 " 56.25 -64.5 ="60.375 " 64.5 -72.75 ="68.625 " 72.75 -HIGH="76.875 " ;
NOTE: Format F8_ has been output.
22975     +value F9_
22976     +LOW -20.85 ="-24.575 "
22977     +20.85 -111.7 ="66.275 "
22978     +111.7 -202.55 ="157.125 "
22979     +202.55 -293.4 ="247.975 "
22980     +293.4 -384.25 ="338.825 "
22981     +384.25 -475.1 ="429.675 "
22982     +475.1 -565.95 ="520.525 "
22983     +565.95 -656.8 ="611.375 "
22984     +656.8 -764.26 ="718.835 "
22985     +764.26 -871.72 ="826.295 "
22986     +871.72 -979.18 ="933.755 "
22987     +979.18 -1086.64 ="1041.215 "
22988     +1086.64 -HIGH="1148.675 "
22989     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -20.85 ="-24.575 " 20.85 -111.7 ="66.275 " 111.7 -202.55 ="157.125 " 202.55 -293.4 ="247.975 " 293.4 -384.25 ="338.825 " 384.25 -475.1 ="429.675 " 475.1 -565.95 ="520.525 " 565.95 -656.8 ="611.375 " 656.8 -764.26 
="718.835 " 764.26 -871.72 ="826.295 " 871.72 -979.18 ="933.755 " 979.18 -1086.64 ="1041.215 " 1086.64 -HIGH="1148.675 " ;
NOTE: Format F9_ has been output.
22990     +value F10_
22991     +LOW -589.82125 ="552.245625 "
22992     +589.82125 -664.9725 ="627.396875 "
22993     +664.9725 -740.12375 ="702.548125 "
22994     +740.12375 -815.275 ="777.699375 "
22995     +815.275 -890.42625 ="852.850625 "
22996     +890.42625 -965.5775 ="928.001875 "
22997     +965.5775 -1040.72875 ="1003.153125 "
22998     +1040.72875 -1115.88 ="1078.304375 "
22999     +1115.88 -1205.76 ="1168.184375 "
23000     +1205.76 -1295.64 ="1258.064375 "
23001     +1295.64 -1385.52 ="1347.944375 "
23002     +1385.52 -1475.4 ="1437.824375 "
23003     +1475.4 -HIGH="1527.704375 "
23004     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -589.82125 ="552.245625 " 589.82125 -664.9725 ="627.396875 " 664.9725 -740.12375 ="702.548125 " 740.12375 -815.275 ="777.699375 " 815.275 -890.42625 ="852.850625 " 890.42625 -965.5775 ="928.001875 " 965.5775 
-1040.72875 ="1003.153125 " 1040.72875 -1115.88 ="1078.304375 " 1115.88 -1205.76 ="1168.184375 " 1205.76 -1295.64 ="1258.064375 " 1295.64 -1385.52 ="1347.944375 " 1385.52 -1475.4 ="1437.824375 " 1475.4 -HIGH="1527.704375 " ;
NOTE: Format F10_ has been output.
MPRINT(VAR_PROFILE):   run;
23005     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Clus_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format ClaimsRate F1_. CustomerMonetaryValue F2_. IMP_GrossMonthlySalary F3_. IMP_PremiumsinLOBHealth F4_. IMP_PremiumsinLOBLife F5_. IMP_PremiumsinLOBMotor F6_. IMP_PremiumsinLOBWorkComp F7_. IMP_REP_CustomerAge F8_. 
PremiumsinLOBHousehold F9_. TOTAL_PREMIUM F10_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.22 seconds
      
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 105 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 105 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 105 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;

NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 105 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS1.PROF_INTDIST has 105 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 10 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 12 observations read from the data set EMWS1.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF_STATS has 12 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   filename X catalog "EMWS1.Prof_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "ClaimsRate F1_.";
MPRINT(TRAIN):   put "CustomerMonetaryValue F2_.";
MPRINT(TRAIN):   put "IMP_GrossMonthlySalary F3_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBHealth F4_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBLife F5_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBMotor F6_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBWorkComp F7_.";
MPRINT(TRAIN):   put "IMP_REP_CustomerAge F8_.";
MPRINT(TRAIN):   put "PremiumsinLOBHousehold F9_.";
MPRINT(TRAIN):   put "TOTAL_PREMIUM F10_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_INTERVAL.FORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:26:00 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:00 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof_interval.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 12 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 30.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set _SEGMENT_ end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(_SEGMENT_, best12.));
MPRINT(SEGMENTSUMMARY):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   else do;
MPRINT(SEGMENTSUMMARY):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(SEGMENTSUMMARY):   othercount = othercount + count;
MPRINT(SEGMENTSUMMARY):   otherpct = otherpct + percent;
MPRINT(SEGMENTSUMMARY):   if eof then do;
MPRINT(SEGMENTSUMMARY):   SegmentValue = '_OTHER_';
MPRINT(SEGMENTSUMMARY):   count = othercount;
MPRINT(SEGMENTSUMMARY):   percent = otherpct;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   cum = cum + percent;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 2;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
23006     +format
23007     +ClaimsRate F1_.
23008     +CustomerMonetaryValue F2_.
23009     +IMP_GrossMonthlySalary F3_.
23010     +IMP_PremiumsinLOBHealth F4_.
23011     +IMP_PremiumsinLOBLife F5_.
23012     +IMP_PremiumsinLOBMotor F6_.
23013     +IMP_PremiumsinLOBWorkComp F7_.
23014     +IMP_REP_CustomerAge F8_.
23015     +PremiumsinLOBHousehold F9_.
23016     +TOTAL_PREMIUM F10_.
23017     +;
MPRINT(SEGMENTSUMMARY):   format ClaimsRate F1_. CustomerMonetaryValue F2_. IMP_GrossMonthlySalary F3_. IMP_PremiumsinLOBHealth F4_. IMP_PremiumsinLOBLife F5_. IMP_PremiumsinLOBMotor F6_. IMP_PremiumsinLOBWorkComp F7_. IMP_REP_CustomerAge F8_. 
PremiumsinLOBHousehold F9_. TOTAL_PREMIUM F10_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:25:58 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23018     +%macro _vars;
23019     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2909   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: There were 2909 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2909 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 15 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 8 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:00 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23020     +%macro _vars;
23021     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2909   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2909 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2909 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2909   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2909 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2909 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 72 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 72 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 72 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 72 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 72 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 72 observations read from the data set WORK._INTERVAL.
NOTE: 72 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 177 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_STATS has 22 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 1;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
23022     +format
23023     +ClaimsRate F1_.
23024     +CustomerMonetaryValue F2_.
23025     +IMP_GrossMonthlySalary F3_.
23026     +IMP_PremiumsinLOBHealth F4_.
23027     +IMP_PremiumsinLOBLife F5_.
23028     +IMP_PremiumsinLOBMotor F6_.
23029     +IMP_PremiumsinLOBWorkComp F7_.
23030     +IMP_REP_CustomerAge F8_.
23031     +PremiumsinLOBHousehold F9_.
23032     +TOTAL_PREMIUM F10_.
23033     +;
MPRINT(SEGMENTSUMMARY):   format ClaimsRate F1_. CustomerMonetaryValue F2_. IMP_GrossMonthlySalary F3_. IMP_PremiumsinLOBHealth F4_. IMP_PremiumsinLOBLife F5_. IMP_PremiumsinLOBMotor F6_. IMP_PremiumsinLOBWorkComp F7_. IMP_REP_CustomerAge F8_. 
PremiumsinLOBHousehold F9_. TOTAL_PREMIUM F10_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:00 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23034     +%macro _vars;
23035     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2458   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2458 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 2458 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 15 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 10 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:01 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23036     +%macro _vars;
23037     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2458   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2458 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 2458 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2458   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
NOTE: There were 2458 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 2458 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 75 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 75 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 75 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 75 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 75 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 75 observations read from the data set WORK._INTERVAL.
NOTE: 75 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 252 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_STATS has 32 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
23038     +format
23039     +ClaimsRate F1_.
23040     +CustomerMonetaryValue F2_.
23041     +IMP_GrossMonthlySalary F3_.
23042     +IMP_PremiumsinLOBHealth F4_.
23043     +IMP_PremiumsinLOBLife F5_.
23044     +IMP_PremiumsinLOBMotor F6_.
23045     +IMP_PremiumsinLOBWorkComp F7_.
23046     +IMP_REP_CustomerAge F8_.
23047     +PremiumsinLOBHousehold F9_.
23048     +TOTAL_PREMIUM F10_.
23049     +;
MPRINT(SEGMENTSUMMARY):   format ClaimsRate F1_. CustomerMonetaryValue F2_. IMP_GrossMonthlySalary F3_. IMP_PremiumsinLOBHealth F4_. IMP_PremiumsinLOBLife F5_. IMP_PremiumsinLOBMotor F6_. IMP_PremiumsinLOBWorkComp F7_. IMP_REP_CustomerAge F8_. 
PremiumsinLOBHousehold F9_. TOTAL_PREMIUM F10_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:01 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23050     +%macro _vars;
23051     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2328   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2328 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 2328 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 15 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 12 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:02 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23052     +%macro _vars;
23053     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2328   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2328 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 2328 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.25 seconds
      cpu time            0.21 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2328   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2328 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 2328 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 85 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 85 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 85 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 85 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 85 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 85 observations read from the data set WORK._INTERVAL.
NOTE: 85 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 337 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_STATS has 42 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 4;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
23054     +format
23055     +ClaimsRate F1_.
23056     +CustomerMonetaryValue F2_.
23057     +IMP_GrossMonthlySalary F3_.
23058     +IMP_PremiumsinLOBHealth F4_.
23059     +IMP_PremiumsinLOBLife F5_.
23060     +IMP_PremiumsinLOBMotor F6_.
23061     +IMP_PremiumsinLOBWorkComp F7_.
23062     +IMP_REP_CustomerAge F8_.
23063     +PremiumsinLOBHousehold F9_.
23064     +TOTAL_PREMIUM F10_.
23065     +;
MPRINT(SEGMENTSUMMARY):   format ClaimsRate F1_. CustomerMonetaryValue F2_. IMP_GrossMonthlySalary F3_. IMP_PremiumsinLOBHealth F4_. IMP_PremiumsinLOBLife F5_. IMP_PremiumsinLOBMotor F6_. IMP_PremiumsinLOBWorkComp F7_. IMP_REP_CustomerAge F8_. 
PremiumsinLOBHousehold F9_. TOTAL_PREMIUM F10_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:03 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23066     +%macro _vars;
23067     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2092   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
NOTE: There were 2092 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2092 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 16 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:25:57 PM,
      Last Modified=Wednesday, December 30, 2015 03:26:04 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD16320_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
23068     +%macro _vars;
23069     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2092   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 2092 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2092 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.23 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2092   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2092 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2092 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 94 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 94 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 94 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 94 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 94 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 94 observations read from the data set WORK._INTERVAL.
NOTE: 94 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 431 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF_STATS has 52 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS1.Prof_INTDIST;
MPRINT(TRAIN):   set EMWS1.Prof_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Color = "Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;

NOTE: There were 431 observations read from the data set EMWS1.PROF_INTDIST.
NOTE: The data set EMWS1.PROF_INTDIST has 431 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_CLASSDIST;
MPRINT(TRAIN):   set EMWS1.Prof_CLASSDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Groupindex = "Group Index";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
MPRINT(TRAIN):   else GroupIndex = 1;
MPRINT(TRAIN):   run;

NOTE: There were 16 observations read from the data set EMWS1.PROF_CLASSDIST.
NOTE: The data set EMWS1.PROF_CLASSDIST has 16 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "_SEGMENT_";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.09571601734297;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 126 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof_WORTH;
MPRINT(TRAIN):   set EMWS1.Prof_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;

NOTE: There were 40 observations read from the data set EMWS1.PROF_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS1.PROF_WORTH has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95000333988573;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 126 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 252 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof_SIZE;
MPRINT(TRAIN):   set EMWS1.Prof_SIZE;
MPRINT(TRAIN):   label percent = "Percent" count = "Frequency Count";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;

NOTE: There were 4 observations read from the data set EMWS1.PROF_SIZE.
NOTE: The data set EMWS1.PROF_SIZE has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.91628766335374;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 252 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 379 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.16579970026658;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 379 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 505 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72986177994397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 505 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 631 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.04787416618684;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 631 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 757 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.80624935627274;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 757 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof_SELVARS _SUMMARYVARS DATA_STAT Prof_MACS(mt=catalog) Prof_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS1.PROF_SELVARS (memtype=DATA).
NOTE: Deleting EMWS1.PROF_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
23070      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23071      * End TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof;
23072      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23073      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23074      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
23075      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23076      ;
MPRINT(EM_DIAGRAM):   ;
23077      ;
MPRINT(EM_DIAGRAM):   ;
23078      ;
MPRINT(EM_DIAGRAM):   ;
23079      ;
MPRINT(EM_DIAGRAM):   ;
23080      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
23081      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
23082      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
23083      *------------------------------------------------------------*;
23084      /*; *"; *'; */
23085      ;
23086      run;
23087      quit;
23088      /* Reset EM Options */
23089      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
23090      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
23091      goptions reset=all device=WMF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=WMF NODISPLAY;
23092      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
23093      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
23094      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 883 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23095      proc freq data=EMWS1.Prof_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_WORTH noprint order=data;
23096      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
23097      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.PROF_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

23098      proc freq data=EMWS1.Prof_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_SIZE noprint order=data;
23099      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
23100      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.PROF_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
