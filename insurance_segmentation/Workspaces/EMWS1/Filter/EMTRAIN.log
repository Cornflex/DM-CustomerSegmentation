MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                16. Dezember 2015
Time:                19.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3IY_XNP "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3IY_XNP new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.53 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.53 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20413      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
20414      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
20415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

20416      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
20417      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20418      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20419      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20420      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20421      run;

NOTE: There were 3 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20422      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M01W7GTB;
MPRINT(EM_DIAGRAM):   set WORK.M01W7GTB;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='MINPCT';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------* 
*  createhistogramtable 
*------------------------------------------------------------* 
*------------------------------------------------------------* 
* Summary Table:  EMWS1.Filter_VARDIST 
* already exists and is up to date. 
* The table will not be recreated. 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data WORK.M0FEUB7F;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M0FEUB7F end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
20455      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20456      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
20457      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20458      %macro DMDBClass;
20459          EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC)
20460         HasChildren(ASC)
20461      %mend DMDBClass;
20462      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20463      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
20464      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20465      %macro DMDBVar;
20466          ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20467         PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor
20468         PremiumsinLOBWorkComp
20469      %mend DMDBVar;
20470      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20471      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
20472      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20473      proc dmdb batch data=EMWS1.Ids_DATA
20474      classout=WORK._EMFILTERCLASS
20475      varout=WORK._EMFILTERVAR
20476      maxlevel = 26
20477      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
20478      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC) HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20479      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20480      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20481      quit;
20482      *--- end code ---*;

20483      data WORK.M0FEUB7F;
MPRINT(EM_DIAGRAM):    data WORK.M0FEUB7F;
20484      set WORK.M0FEUB7F;
MPRINT(EM_DIAGRAM):   set WORK.M0FEUB7F;
20485      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
20486      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
20487      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.M0FEUB7F.
NOTE: The data set WORK.M0FEUB7F has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20488      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
20489      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
20490      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20491      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
20492      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
20493      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
20494      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
20495      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20496      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
20497      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
20498      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20499      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
20500      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20501      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20502      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
20503      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
20504      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20505      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20506      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20507      * Filter: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Filter: Input Variables Macro ;
20508      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20509      %macro EM_FILTERPCT;
20510          PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor
20511         PremiumsinLOBWorkComp
20512      %mend EM_FILTERPCT;
20513      data EM_Filter_PCT / view=EM_Filter_PCT;
MPRINT(EM_DIAGRAM):   data EM_Filter_PCT / view=EM_Filter_PCT;
20514      set
20514    ! EMWS1.Ids_DATA(keep=%EM_FILTERPCT );
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA(keep
MPRINT(EM_DIAGRAM):  =PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor PremiumsinLOBWorkComp );
20515      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_FILTER_PCT.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Method PERCENTS;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20516      *------------------------------------------------------------*;
20517      * Filter: Method PERCENTS;
20518      *------------------------------------------------------------*;
20519      proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   var
20520      var %EM_FILTERPCT;
MPRINT(EM_FILTERPCT):   PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20521      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: View WORK.EM_FILTER_PCT.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.29 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set WORK.EM_FILTER_PCT.
NOTE: The data set WORK.FILTEROUTSTAT has 10 observations and 5 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
      

20522      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
20523      set WORK.M01W7GTB;
MPRINT(EM_DIAGRAM):   set WORK.M01W7GTB;
20524      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
20525      if KEEPMISSING in('D', '') then
20526      KEEPMISSING = "Y";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "Y";
20527      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
20528      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
20529      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
20530      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
20531      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
20532      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
20533      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.M01W7GTB.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20534      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
20535      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20536      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20537      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
20538      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20539      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20540      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
20541      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
20542      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
20543      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20544      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 39 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20545      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
20546      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
20547      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and 
CRAW='');
20548      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 0 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20549      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
20550      set WORK.M01W7GTB;
MPRINT(EM_DIAGRAM):   set WORK.M01W7GTB;
20551      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
20552      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
20553      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.M01W7GTB.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20554      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
20555      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20556      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20557      proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
20558      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20559      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASSFILTER.
NOTE: View EMWS1.FILTER_CLASSFILTER.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK._TEMP has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

20560      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
20561      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
20562      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
20563      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
20564      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
20565      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20566      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20567      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
20568      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
20569      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
20570      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 0 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20571      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
20572      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
20573      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20574      %let _FilterClassNum= 0;
20575      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
20576      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
20577      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
20578      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20579      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20580      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20581      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20582      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
20583      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20584      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
20585      end;
MPRINT(EM_DIAGRAM):   end;
20586      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20587      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20588      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20589      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
20590      end;
MPRINT(EM_DIAGRAM):   end;
20591      end;
MPRINT(EM_DIAGRAM):   end;
20592      end;
MPRINT(EM_DIAGRAM):   end;
20593      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
20594      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20595      data EMWS1.Filter_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASS;
20596      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
20597         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
20598         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
20599      length VALUE $15;
MPRINT(EM_DIAGRAM):   length VALUE $15;
20600      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
20601      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
20602      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
20603      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
20604      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
20605      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
20606      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
20607      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
20608      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
20609      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
20610      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
20611      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
20612      end;
MPRINT(EM_DIAGRAM):   end;
20613      end;
MPRINT(EM_DIAGRAM):   end;
20614      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS1.FILTER_CLASS has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20615      %let _FOBS=0;
20616      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\NEWVAR.txt";
20617      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20618      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20619      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20620      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20621      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20622      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20623      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20624      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20625      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20626      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
20627      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
20628      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
20629      put string;
MPRINT(EM_DIAGRAM):   put string;
20630      end;
MPRINT(EM_DIAGRAM):   end;
20631      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20632      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20633      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20634      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
20635      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20636      end;
MPRINT(EM_DIAGRAM):   end;
20637      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
20638      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
20639      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
20640      put string;
MPRINT(EM_DIAGRAM):   put string;
20641      end;
MPRINT(EM_DIAGRAM):   end;
20642      end;
MPRINT(EM_DIAGRAM):   end;
20643      end;
MPRINT(EM_DIAGRAM):   end;
20644      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20645      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 5 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20646      %let _FOBS=0;
20647      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt";
20648      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20649      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20650      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20651      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
20652      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20653      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20654      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20655      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20656      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20657      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20658      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
20659      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
20660      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
20661      put string;
MPRINT(EM_DIAGRAM):   put string;
20662      end;
MPRINT(EM_DIAGRAM):   end;
20663      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20664      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20665      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20666      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
20667      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20668      end;
MPRINT(EM_DIAGRAM):   end;
20669      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
20670      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
20671      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
20672      put string;
MPRINT(EM_DIAGRAM):   put string;
20673      end;
MPRINT(EM_DIAGRAM):   end;
20674      end;
MPRINT(EM_DIAGRAM):   end;
20675      end;
MPRINT(EM_DIAGRAM):   end;
20676      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20677      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 5 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20678      %let _FOBS=0;
20679      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt";
20680      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20681      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
20682      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20683      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
20684      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20685      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20686      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20687      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20688      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
20689      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
20690      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
20691      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
20692      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20693      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
20694      end;
MPRINT(EM_DIAGRAM):   end;
20695      else do;
MPRINT(EM_DIAGRAM):   else do;
20696      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20697      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20698      end;
MPRINT(EM_DIAGRAM):   end;
20699      end;
MPRINT(EM_DIAGRAM):   end;
20700      else do;
MPRINT(EM_DIAGRAM):   else do;
20701      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20702      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
20703      end;
MPRINT(EM_DIAGRAM):   end;
20704      else do;
MPRINT(EM_DIAGRAM):   else do;
20705      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20706      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20707      end;
MPRINT(EM_DIAGRAM):   end;
20708      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
20709      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
20710      end;
MPRINT(EM_DIAGRAM):   end;
20711      else do;
MPRINT(EM_DIAGRAM):   else do;
20712      put line;
MPRINT(EM_DIAGRAM):   put line;
20713      line = string;
MPRINT(EM_DIAGRAM):   line = string;
20714      end;
MPRINT(EM_DIAGRAM):   end;
20715      end;
MPRINT(EM_DIAGRAM):   end;
20716      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
20717      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
20718      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
20719      end;
MPRINT(EM_DIAGRAM):   end;
20720      put line;
MPRINT(EM_DIAGRAM):   put line;
20721      end;
MPRINT(EM_DIAGRAM):   end;
20722      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20723      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 1 record was written to the file _X.
      The minimum record length was 36.
      The maximum record length was 36.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20724      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
20725      %let _FOBS=0;
20726      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt";
20727      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20728      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
20729      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20730      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
20731      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20732      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
20733      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20734      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20735      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20736      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
20737      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
20738      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
20739      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
20740      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20741      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
20742      end;
MPRINT(EM_DIAGRAM):   end;
20743      else do;
MPRINT(EM_DIAGRAM):   else do;
20744      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20745      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20746      end;
MPRINT(EM_DIAGRAM):   end;
20747      end;
MPRINT(EM_DIAGRAM):   end;
20748      else do;
MPRINT(EM_DIAGRAM):   else do;
20749      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20750      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
20751      end;
MPRINT(EM_DIAGRAM):   end;
20752      else do;
MPRINT(EM_DIAGRAM):   else do;
20753      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20754      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20755      end;
MPRINT(EM_DIAGRAM):   end;
20756      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
20757      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
20758      end;
MPRINT(EM_DIAGRAM):   end;
20759      else do;
MPRINT(EM_DIAGRAM):   else do;
20760      put line;
MPRINT(EM_DIAGRAM):   put line;
20761      line = string;
MPRINT(EM_DIAGRAM):   line = string;
20762      end;
MPRINT(EM_DIAGRAM):   end;
20763      end;
MPRINT(EM_DIAGRAM):   end;
20764      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
20765      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
20766      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
20767      end;
MPRINT(EM_DIAGRAM):   end;
20768      put line;
MPRINT(EM_DIAGRAM):   put line;
20769      end;
MPRINT(EM_DIAGRAM):   end;
20770      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 1 record was written to the file _X.
      The minimum record length was 36.
      The maximum record length was 36.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20772      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
20773      %let _FilterIntervalNum= 0;
20774      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
20775      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20776      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20777      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
20778      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20779      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20780      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
20781      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20782      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
20783      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
20784      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20785      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
20786      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
20787      end;
MPRINT(EM_DIAGRAM):   end;
20788      else do;
MPRINT(EM_DIAGRAM):   else do;
20789      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
20790      end;
MPRINT(EM_DIAGRAM):   end;
20791      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
20792      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
20793      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
20794      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
20795      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20796      end;
MPRINT(EM_DIAGRAM):   end;
20797      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
20798      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20799      end;
MPRINT(EM_DIAGRAM):   end;
20800      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
20801      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
20802      end;
MPRINT(EM_DIAGRAM):   end;
20803      end;
MPRINT(EM_DIAGRAM):   end;
20804      else do;
MPRINT(EM_DIAGRAM):   else do;
20805      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
20806      end;
MPRINT(EM_DIAGRAM):   end;
20807      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
20808      put string;
MPRINT(EM_DIAGRAM):   put string;
20809      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
20810      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 8 records were written to the file _X.
      The minimum record length was 57.
      The maximum record length was 116.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20811      %let _FilterIntervalNum= 0;
20812      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
20813      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20815      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
20816      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20817      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20818      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
20819      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20820      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
20821      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
20822      ;
MPRINT(EM_DIAGRAM):   ;
20823      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20824      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
20825      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
20826      end;
MPRINT(EM_DIAGRAM):   end;
20827      else do;
MPRINT(EM_DIAGRAM):   else do;
20828      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
20829      end;
MPRINT(EM_DIAGRAM):   end;
20830      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
20831      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
20832      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
20833      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
20834      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20835      end;
MPRINT(EM_DIAGRAM):   end;
20836      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
20837      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20838      end;
MPRINT(EM_DIAGRAM):   end;
20839      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
20840      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
20841      end;
MPRINT(EM_DIAGRAM):   end;
20842      end;
MPRINT(EM_DIAGRAM):   end;
20843      else do;
MPRINT(EM_DIAGRAM):   else do;
20844      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
20845      end;
MPRINT(EM_DIAGRAM):   end;
20846      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
20847      put string;
MPRINT(EM_DIAGRAM):   put string;
20848      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
20849      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD220_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. Dezember 2015 19.53 Uhr,
      Create Time=16. Dezember 2015 19.53 Uhr

NOTE: 8 records were written to the file _X.
      The minimum record length was 57.
      The maximum record length was 116.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
20850      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
20851      set EMWS1.Ids_DATA;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA;
20852      
20853      
20854      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
20855      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
20856      _FILTERFMT1= put(FirstPolicyYear,BEST12.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(FirstPolicyYear,BEST12.0);
20857      if
20858      _FILTERFMT1 not in ( '       53784')
20859      and
20860      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1))
20861      and ( CustomerAge eq . or (0<=CustomerAge) and (CustomerAge<=150))
20862      and ( CustomerMonetaryValue eq . or (-35784.17035<=CustomerMonetaryValue) and (CustomerMonetaryValue<=11899.001562))
20863      and ( GrossMonthlySalary eq . or (0<=GrossMonthlySalary) and (GrossMonthlySalary<=11558.490849))
20864      and ( PremiumsinLOBHealth eq . or (24.45<=PremiumsinLOBHealth) and (PremiumsinLOBHealth<=365.07))
20865      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
20866      and ( PremiumsinLOBMotor eq . or (18.78<=PremiumsinLOBMotor) and (PremiumsinLOBMotor<=559.44))
20867      and ( PremiumsinLOBWorkComp eq . or (-11<=PremiumsinLOBWorkComp) and (PremiumsinLOBWorkComp<=254.38))
20868      ;
MPRINT(EM_DIAGRAM):   if _FILTERFMT1 not in ( '       53784') and ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1)) and ( CustomerAge eq . or (0<=CustomerAge) and (CustomerAge<=150)) and ( CustomerMonetaryValue eq . or 
(-35784.17035<=CustomerMonetaryValue) and (CustomerMonetaryValue<=11899.001562)) and ( GrossMonthlySalary eq . or (0<=GrossMonthlySalary) and (GrossMonthlySalary<=11558.490849)) and ( PremiumsinLOBHealth eq . or (24.45<=PremiumsinLOBHealth) and 
(PremiumsinLOBHealth<=365.07)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1)) and ( PremiumsinLOBMotor eq . or (18.78<=PremiumsinLOBMotor) and (PremiumsinLOBMotor<=559.44)) and ( 
PremiumsinLOBWorkComp eq . or (-11<=PremiumsinLOBWorkComp) and (PremiumsinLOBWorkComp<=254.38)) ;
20869      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

20870      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
20871      set
20872      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
20873      EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE'))
20874      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE')) ;
20875      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
20876      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTERFILTERVAR has 9 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20877      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
20878      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20879      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 9 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20880      proc sort data=WORK.M355F1ET;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M355F1ET;
20881      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20882      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.M355F1ET.
NOTE: The data set WORK.M355F1ET has 13 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20883      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
20884      merge WORK.M355F1ET WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M355F1ET WORK.FilterFILTERVAR(in=_b);
20885      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20886      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
20887      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.M355F1ET.
NOTE: There were 9 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 9 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20888      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20889      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
20890      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20891      %macro DMDBClass;
20892          FirstPolicyYear(ASC)
20893      %mend DMDBClass;
20894      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20895      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
20896      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20897      %macro DMDBVar;
20898          ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20899         PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor
20900         PremiumsinLOBWorkComp
20901      %mend DMDBVar;
20902      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20903      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
20904      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20905      proc dmdb batch data=EMWS1.Ids_DATA
20906      dmdbcat=WORK.Filter_DMDB
20907      varout=WORK.FILTER_VARSTATS
20908      maxlevel = 513
20909      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20910      class %DMDBClass;
MPRINT(DMDBCLASS):   FirstPolicyYear(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20911      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20912      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20913      quit;
20914      *--- end code ---*;

20915      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
20916      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
20917      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
20918      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
20919      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
20920      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
20921      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
20922      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
20923      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
20924      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
20925      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
20926      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
20927      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
20928      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
20929      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

20930      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
20931      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 8 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
