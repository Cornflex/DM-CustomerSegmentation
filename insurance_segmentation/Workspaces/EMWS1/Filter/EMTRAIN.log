MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:17:47" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 28, 2015
Time:                13:17:47
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E6R8HH "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E6R8HH new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:17:47" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:17:47" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20413      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
20414      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
20415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

20416      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
20417      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20418      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20419      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20420      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20421      run;

NOTE: There were 3 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

20422      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0TT8QYN;
MPRINT(EM_DIAGRAM):   set WORK.M0TT8QYN;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='MINPCT';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------* 
*  createhistogramtable 
*------------------------------------------------------------* 
*------------------------------------------------------------* 
* Summary Table:  EMWS1.Filter_VARDIST 
* already exists and is up to date. 
* The table will not be recreated. 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data WORK.M0LFPZVM;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M0LFPZVM end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
20455      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20456      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
20457      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20458      %macro DMDBClass;
20459          EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC)
20460         HasChildren(ASC)
20461      %mend DMDBClass;
20462      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20463      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
20464      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20465      %macro DMDBVar;
20466          CustomerAge CustomerMonetaryValue GrossMonthlySalary
20467      %mend DMDBVar;
20468      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20469      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
20470      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20471      proc dmdb batch data=EMWS1.Ids_DATA
20472      classout=WORK._EMFILTERCLASS
20473      varout=WORK._EMFILTERVAR
20474      maxlevel = 26
20475      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
20476      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC) HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20477      var %DMDBVar;
MPRINT(DMDBVAR):   CustomerAge CustomerMonetaryValue GrossMonthlySalary
MPRINT(EM_DIAGRAM):  ;
20478      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20479      quit;
20480      *--- end code ---*;

20481      data WORK.M0LFPZVM;
MPRINT(EM_DIAGRAM):    data WORK.M0LFPZVM;
20482      set WORK.M0LFPZVM;
MPRINT(EM_DIAGRAM):   set WORK.M0LFPZVM;
20483      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
20484      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
20485      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M0LFPZVM.
NOTE: The data set WORK.M0LFPZVM has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20486      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
20487      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
20488      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

20489      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
20490      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
20491      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
20492      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
20493      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20494      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
20495      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
20496      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20497      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
20498      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20499      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20500      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
20501      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
20502      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20503      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20504      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
20505      set WORK.M0TT8QYN;
MPRINT(EM_DIAGRAM):   set WORK.M0TT8QYN;
20506      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
20507      if KEEPMISSING in('D', '') then
20508      KEEPMISSING = "Y";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "Y";
20509      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
20510      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
20511      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
20512      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
20513      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
20514      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
20515      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.M0TT8QYN.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20516      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
20517      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20518      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20519      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
20520      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20521      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20522      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
20523      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
20524      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
20525      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20526      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 39 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20527      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
20528      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
20529      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and 
CRAW='');
20530      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 0 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20531      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
20532      set WORK.M0TT8QYN;
MPRINT(EM_DIAGRAM):   set WORK.M0TT8QYN;
20533      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
20534      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
20535      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M0TT8QYN.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20536      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
20537      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20538      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

20539      proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
20540      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20541      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASSFILTER.
NOTE: View EMWS1.FILTER_CLASSFILTER.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK._TEMP has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
      

20542      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
20543      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
20544      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
20545      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
20546      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
20547      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20548      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 1 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20549      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
20550      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
20551      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
20552      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 0 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20553      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
20554      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
20555      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20556      %let _FilterClassNum= 0;
20557      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
20558      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
20559      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
20560      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20561      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20562      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20563      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20564      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
20565      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20566      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
20567      end;
MPRINT(EM_DIAGRAM):   end;
20568      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20569      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20570      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20571      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
20572      end;
MPRINT(EM_DIAGRAM):   end;
20573      end;
MPRINT(EM_DIAGRAM):   end;
20574      end;
MPRINT(EM_DIAGRAM):   end;
20575      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
20576      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20577      data EMWS1.Filter_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASS;
20578      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
20579         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
20580         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
20581      length VALUE $15;
MPRINT(EM_DIAGRAM):   length VALUE $15;
20582      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
20583      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
20584      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
20585      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
20586      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
20587      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
20588      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
20589      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
20590      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
20591      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
20592      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
20593      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
20594      end;
MPRINT(EM_DIAGRAM):   end;
20595      end;
MPRINT(EM_DIAGRAM):   end;
20596      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS1.FILTER_CLASS has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

20597      %let _FOBS=0;
20598      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\NEWVAR.txt";
20599      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20600      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20601      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20602      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20603      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20604      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20605      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20606      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20607      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20608      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
20609      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
20610      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
20611      put string;
MPRINT(EM_DIAGRAM):   put string;
20612      end;
MPRINT(EM_DIAGRAM):   end;
20613      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20614      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20615      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20616      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
20617      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20618      end;
MPRINT(EM_DIAGRAM):   end;
20619      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
20620      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
20621      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
20622      put string;
MPRINT(EM_DIAGRAM):   put string;
20623      end;
MPRINT(EM_DIAGRAM):   end;
20624      end;
MPRINT(EM_DIAGRAM):   end;
20625      end;
MPRINT(EM_DIAGRAM):   end;
20626      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20627      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 5 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20628      %let _FOBS=0;
20629      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt";
20630      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20631      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20632      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20633      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
20634      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20635      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20636      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20637      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20638      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20639      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20640      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
20641      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
20642      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
20643      put string;
MPRINT(EM_DIAGRAM):   put string;
20644      end;
MPRINT(EM_DIAGRAM):   end;
20645      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
20646      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
20647      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20648      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
20649      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
20650      end;
MPRINT(EM_DIAGRAM):   end;
20651      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
20652      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
20653      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
20654      put string;
MPRINT(EM_DIAGRAM):   put string;
20655      end;
MPRINT(EM_DIAGRAM):   end;
20656      end;
MPRINT(EM_DIAGRAM):   end;
20657      end;
MPRINT(EM_DIAGRAM):   end;
20658      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20659      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 5 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20660      %let _FOBS=0;
20661      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt";
20662      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20663      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
20664      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20665      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
20666      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20667      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20668      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20669      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20670      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
20671      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
20672      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
20673      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
20674      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20675      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
20676      end;
MPRINT(EM_DIAGRAM):   end;
20677      else do;
MPRINT(EM_DIAGRAM):   else do;
20678      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20679      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20680      end;
MPRINT(EM_DIAGRAM):   end;
20681      end;
MPRINT(EM_DIAGRAM):   end;
20682      else do;
MPRINT(EM_DIAGRAM):   else do;
20683      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20684      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
20685      end;
MPRINT(EM_DIAGRAM):   end;
20686      else do;
MPRINT(EM_DIAGRAM):   else do;
20687      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20688      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20689      end;
MPRINT(EM_DIAGRAM):   end;
20690      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
20691      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
20692      end;
MPRINT(EM_DIAGRAM):   end;
20693      else do;
MPRINT(EM_DIAGRAM):   else do;
20694      put line;
MPRINT(EM_DIAGRAM):   put line;
20695      line = string;
MPRINT(EM_DIAGRAM):   line = string;
20696      end;
MPRINT(EM_DIAGRAM):   end;
20697      end;
MPRINT(EM_DIAGRAM):   end;
20698      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
20699      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
20700      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
20701      end;
MPRINT(EM_DIAGRAM):   end;
20702      put line;
MPRINT(EM_DIAGRAM):   put line;
20703      end;
MPRINT(EM_DIAGRAM):   end;
20704      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20705      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 1 record was written to the file _X.
      The minimum record length was 36.
      The maximum record length was 36.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20706      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
20707      %let _FOBS=0;
20708      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt";
20709      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20710      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
20711      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
20712      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
20713      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
20714      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
20715      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20716      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20717      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
20718      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
20719      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
20720      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
20721      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
20722      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20723      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
20724      end;
MPRINT(EM_DIAGRAM):   end;
20725      else do;
MPRINT(EM_DIAGRAM):   else do;
20726      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20727      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20728      end;
MPRINT(EM_DIAGRAM):   end;
20729      end;
MPRINT(EM_DIAGRAM):   end;
20730      else do;
MPRINT(EM_DIAGRAM):   else do;
20731      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
20732      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
20733      end;
MPRINT(EM_DIAGRAM):   end;
20734      else do;
MPRINT(EM_DIAGRAM):   else do;
20735      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
20736      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
20737      end;
MPRINT(EM_DIAGRAM):   end;
20738      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
20739      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
20740      end;
MPRINT(EM_DIAGRAM):   end;
20741      else do;
MPRINT(EM_DIAGRAM):   else do;
20742      put line;
MPRINT(EM_DIAGRAM):   put line;
20743      line = string;
MPRINT(EM_DIAGRAM):   line = string;
20744      end;
MPRINT(EM_DIAGRAM):   end;
20745      end;
MPRINT(EM_DIAGRAM):   end;
20746      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
20747      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
20748      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
20749      end;
MPRINT(EM_DIAGRAM):   end;
20750      put line;
MPRINT(EM_DIAGRAM):   put line;
20751      end;
MPRINT(EM_DIAGRAM):   end;
20752      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
20753      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 1 record was written to the file _X.
      The minimum record length was 36.
      The maximum record length was 36.
NOTE: There were 1 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20754      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
20755      %let _FilterIntervalNum= 0;
20756      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
20757      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 3 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

20759      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
20760      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20761      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20762      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
20763      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20764      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
20765      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
20766      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20767      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
20768      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
20769      end;
MPRINT(EM_DIAGRAM):   end;
20770      else do;
MPRINT(EM_DIAGRAM):   else do;
20771      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
20772      end;
MPRINT(EM_DIAGRAM):   end;
20773      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
20774      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
20775      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
20776      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
20777      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20778      end;
MPRINT(EM_DIAGRAM):   end;
20779      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
20780      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20781      end;
MPRINT(EM_DIAGRAM):   end;
20782      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
20783      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
20784      end;
MPRINT(EM_DIAGRAM):   end;
20785      end;
MPRINT(EM_DIAGRAM):   end;
20786      else do;
MPRINT(EM_DIAGRAM):   else do;
20787      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
20788      end;
MPRINT(EM_DIAGRAM):   end;
20789      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
20790      put string;
MPRINT(EM_DIAGRAM):   put string;
20791      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
20792      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 3 records were written to the file _X.
      The minimum record length was 62.
      The maximum record length was 116.
NOTE: There were 3 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20793      %let _FilterIntervalNum= 0;
20794      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
20795      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20796      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20797      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
20798      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20799      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
20800      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
20801      file _X;
MPRINT(EM_DIAGRAM):   file _X;
20802      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
20803      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
20804      ;
MPRINT(EM_DIAGRAM):   ;
20805      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20806      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
20807      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
20808      end;
MPRINT(EM_DIAGRAM):   end;
20809      else do;
MPRINT(EM_DIAGRAM):   else do;
20810      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
20811      end;
MPRINT(EM_DIAGRAM):   end;
20812      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
20813      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
20814      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
20815      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
20816      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20817      end;
MPRINT(EM_DIAGRAM):   end;
20818      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
20819      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
20820      end;
MPRINT(EM_DIAGRAM):   end;
20821      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
20822      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
20823      end;
MPRINT(EM_DIAGRAM):   end;
20824      end;
MPRINT(EM_DIAGRAM):   end;
20825      else do;
MPRINT(EM_DIAGRAM):   else do;
20826      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
20827      end;
MPRINT(EM_DIAGRAM):   end;
20828      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
20829      put string;
MPRINT(EM_DIAGRAM):   put string;
20830      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
20831      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD12412_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:17:49,
      Create Time=28Dec2015:13:17:49

NOTE: 3 records were written to the file _X.
      The minimum record length was 62.
      The maximum record length was 116.
NOTE: There were 3 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
20832      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
20833      set EMWS1.Ids_DATA;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA;
20834      
20835      
20836      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
20837      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
20838      _FILTERFMT1= put(FirstPolicyYear,BEST12.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(FirstPolicyYear,BEST12.0);
20839      if
20840      _FILTERFMT1 not in ( '       53784')
20841      and
20842      ( CustomerAge eq . or (0<=CustomerAge) and (CustomerAge<=150))
20843      and ( CustomerMonetaryValue eq . or (-35784.17035<=CustomerMonetaryValue) and (CustomerMonetaryValue<=11899.001562))
20844      and ( GrossMonthlySalary eq . or (0<=GrossMonthlySalary) and (GrossMonthlySalary<=11558.490849))
20845      ;
MPRINT(EM_DIAGRAM):   if _FILTERFMT1 not in ( '       53784') and ( CustomerAge eq . or (0<=CustomerAge) and (CustomerAge<=150)) and ( CustomerMonetaryValue eq . or (-35784.17035<=CustomerMonetaryValue) and (CustomerMonetaryValue<=11899.001562)) and ( 
GrossMonthlySalary eq . or (0<=GrossMonthlySalary) and (GrossMonthlySalary<=11558.490849)) ;
20846      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

20847      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
20848      set
20849      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
20850      EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE'))
20851      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE')) ;
20852      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
20853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTERFILTERVAR has 4 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20854      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
20855      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20856      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 4 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20857      proc sort data=WORK.M2PVRVI0;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M2PVRVI0;
20858      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20859      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.M2PVRVI0.
NOTE: The data set WORK.M2PVRVI0 has 13 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20860      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
20861      merge WORK.M2PVRVI0 WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M2PVRVI0 WORK.FilterFILTERVAR(in=_b);
20862      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20863      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
20864      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.M2PVRVI0.
NOTE: There were 4 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 4 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20865      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20866      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
20867      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20868      %macro DMDBClass;
20869          FirstPolicyYear(ASC)
20870      %mend DMDBClass;
20871      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20872      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
20873      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20874      %macro DMDBVar;
20875          CustomerAge CustomerMonetaryValue GrossMonthlySalary
20876      %mend DMDBVar;
20877      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20878      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
20879      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20880      proc dmdb batch data=EMWS1.Ids_DATA
20881      dmdbcat=WORK.Filter_DMDB
20882      varout=WORK.FILTER_VARSTATS
20883      maxlevel = 513
20884      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20885      class %DMDBClass;
MPRINT(DMDBCLASS):   FirstPolicyYear(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20886      var %DMDBVar;
MPRINT(DMDBVAR):   CustomerAge CustomerMonetaryValue GrossMonthlySalary
MPRINT(EM_DIAGRAM):  ;
20887      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK.FILTER_VARSTATS has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20888      quit;
20889      *--- end code ---*;

20890      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
20891      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
20892      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
20893      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
20894      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
20895      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
20896      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
20897      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
20898      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
20899      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
20900      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
20901      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
20902      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
20903      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
20904      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 3 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 3 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

20905      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
20906      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 3 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
