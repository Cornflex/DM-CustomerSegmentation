*------------------------------------------------------------*
User:                D059331
Date:                December 30, 2015
Time:                16:09:51
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 30, 2015
Time:                16:09:43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32JYZJ7 "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32JYZJ7 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:43" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:43" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
26863      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
26864      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
26865      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
26866      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
26867      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
26868      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
26869      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
26870      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
26871      run;
 
NOTE: There were 5 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
26872      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2PQEEFX;
MPRINT(EM_DIAGRAM):   set WORK.M2PQEEFX;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
26895      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
26896      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
26897     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
26898     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
26899     +       %put *** Statistics for Class variables ***;
26900     +       %put >>> DATA= &data  OUTPUT= &output;
26901     +       %put >>> VAR= &vars;
26902     +       %put >>> WHERE=  &where;
26903     +       %put >>> FREQ=  &freq;
26904     +   %end;
26906     +      /* Process metadata data set */
26907     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
26908     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
26909     +       %let FREQ=;
26910     +       %let _nobs=0;
26911     +       data _null;
26912     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
26913     +          if eof then call symput('_nobs', put(_N_, best.));
26914     +       run;
26915     +       %if "&_nobs" ne "0" %then %do;
26916     +           data _null_;
26917     +              file _mac;
26918     +              length _VARS $80; retain _vars;
26919     +              if _n_ =1 then put '%macro _vars;';
26920     +              set &metadata end=eof;
26921     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
26922     +              if ROLE='FREQ' then call symput('FREQ', NAME);
26923     +              else do;
26924     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
26925     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
26926     +                 else do;
26927     +                    put _Vars;
26928     +                    _vars = strip(NAME);
26929     +                 end;
26930     +              end;
26931     +              if eof then do;
26932     +                 put _Vars;
26933     +                 put '%mend _vars;';
26934     +              end;
26935     +           run;
26936     +       %end;
26937     +       %else %do;
26938     +           data _null_;
26939     +              file _mac;
26940     +              put '%macro _vars;';
26941     +              put '%mend _vars;';
26942     +           run;
26943     +       %end;
26944     +   %end;
26945     +   %else %do;
26946     +       data _null_;
26947     +          file _mac;
26948     +          put '%macro _vars;';
26949     +          put '%mend _vars;';
26950     +       run;
26951     +   %end;
26952     +   %inc _mac;
26953     +   filename _mac;
26955     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
26957     +   /* Check if FREQ variable is in the data set */
26958     +   %if &freq ne %then %do;
26959     +       data _null_;
26960     +          dsid = open("&data");
26961     +          if dsid>0 then do;
26962     +               if varnum(dsid, "&FREQ")<1 then
26963     +                  call symput('FREQ', '');
26964     +               dsid = close(dsid);
26965     +          end;
26966     +       run;
26967     +   %end;
26969     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
26970     +      class %_Vars &vars;
26971     +      %if &FREQ ne %then %do;
26972     +          freq &FREQ;
26973     +      %end;
26974     +      %if %bquote(&WHERE) ne %then %do;
26975     +            where &WHERE;
26976     +      %end;
26977     +   run;
26978     +   proc sort data=_tempclass;
26979     +      by VARIABLE;
26980     +   run;
26981     +   data &output;
26982     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
26983     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
26984     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
26985     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
26986     +      set _tempclass;
26987     +      format COUNT;
26988     +      keep VARIABLE COUNT PERCENT VALUE;
26989     +   run;
26990     +   proc means data=&output noprint;
26991     +      class VARIABLE;
26992     +      var COUNT;
26993     +      output out=&STAT N=NUMCAT;
26994     +   run;
26995     +   data &STAT;
26996     +      set &STAT;
26997     +      where _TYPE_=1;
26998     +      KEEP VARIABLE NUMCAT;
26999     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
27000     +      format NUMCAT 8.;
27001     +   run;
27002     +   proc datasets lib=work nolist;
27003     +      delete _tempclass;
27004     +   run;
27005     +   quit;
27007     +   %doend:
27008     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
27010      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
27011      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
27012      set EMWS1.Filter_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST(drop=Count Percent);
27013      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
27014      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27015      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
27016      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
27017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27018      %class_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=EMWS1.Filter_CLASSDIST, METADATA=EMWS1.Filter_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:44 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 58.
NOTE: There were 3 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
27019     +%macro _vars;
27020     +IMP_EducationalDegree IMP_GeographicLiving IMP_HasChildren
27021     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Trans_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   IMP_EducationalDegree IMP_GeographicLiving IMP_HasChildren
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 10 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data EMWS1.Filter_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 10 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=EMWS1.Filter_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
27022      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
27023      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
27024      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
27025      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
27026      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27027      proc sort data=EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSDIST;
27028      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
27029      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27030      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
27031      merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
27032      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
27033      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
27034      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: There were 0 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
27035      data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
27036      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
27037      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
27038      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.FILTER_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
27039      %let EM_CODEBAR = *------------------------------------------------------------*;
27040      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
27041      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
27042     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
27043     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
27044     +   %let _em_nodeid = EM;
27045     +   %if %symexist(EM_NODEID) %then %do;
27046     +       %let _em_nodeid = &em_nodeid;
27047     +   %end;
27049     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
27050     +   %put &EM_CODEBAR;
27051     +   %put * &msgString;
27052     +   %put &EM_CODEBAR;
27054     +   /* Process metadata data set */
27055     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
27056     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
27057     +       %let FREQ=;
27058     +       %let _nobs=0;
27059     +       data _null;
27060     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
27061     +          if eof then call symput('_nobs', put(_N_, best.));
27062     +       run;
27063     +       %if "&_nobs" ne "0" %then %do;
27064     +           data _null_;
27065     +              file _mac;
27066     +              length _VARS $80; retain _vars;
27067     +              if _n_ =1 then put '%macro _vars;';
27068     +              set &metadata end=eof;
27069     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
27070     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
27071     +              else do;
27072     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
27073     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
27074     +                 else do;
27075     +                    put _Vars;
27076     +                    _vars = strip(NAME);
27077     +                 end;
27078     +              end;
27080     +              if eof then do;
27081     +                 put _Vars;
27082     +                 put '%mend _vars;';
27083     +              end;
27084     +           run;
27085     +       %end;
27086     +       %else %do;
27087     +           data _null_;
27088     +              file _mac;
27089     +              put '%macro _vars;';
27090     +              put '%mend _vars;';
27091     +           run;
27092     +       %end;
27093     +   %end;
27094     +   %else %do;
27095     +       data _null_;
27096     +          file _mac;
27097     +          put '%macro _vars;';
27098     +          put '%mend _vars;';
27099     +       run;
27100     +   %end;
27101     +   %inc _mac;
27102     +   filename _mac;
27104     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
27106     +   /* Check if FREQ variable is in the data set */
27107     +   %if &freq ne %then %do;
27108     +       data _null_;
27109     +          dsid = open("&data");
27110     +          if dsid>0 then do;
27111     +               if varnum(dsid, "&FREQ")<1 then
27112     +                  call symput('FREQ', '');
27113     +               dsid = close(dsid);
27114     +          end;
27115     +       run;
27116     +   %end;
27118     +   %if &bindata eq %then %do;
27119     +       %let bindata = _BOUNDS;
27120     +       proc datasets lib=work nolist mt=(DATA VIEW);
27121     +          delete _BOUNDS;
27122     +       run;
27123     +   %end;
27125     +   %global _EM_VARDISTOBS_MAX;
27126     +   %let _EM_VARDISTOBS_MAX = 1000000;
27128     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
27129     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
27130     +   %end;
27132     +   %if &computeStat = Y %then %do;
27133     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
27134     +          var %_Vars &vars;
27135     +          %if &FREQ ne %then %do;
27136     +              freq &FREQ;
27137     +          %end;
27138     +       run;
27139     +       proc sort data=&stat;
27140     +          by VARIABLE;
27141     +       run;
27143     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
27144     +           %let _library = WORK;
27145     +           %let _member  = &STAT;
27146     +      %end;
27147     +      %else %do;
27148     +          %let _library = %scan(&STAT, 1, .);
27149     +          %let _member  = %scan(&STAT, 2, .);
27150     +      %end;
27152     +      proc datasets library=&_library nolist;
27153     +         modify &_member;
27154     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
27155     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
27156     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
27157     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
27158     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
27159     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
27160     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
27161     +      run;
27162     +      quit;
27163     +   %end;
27165     +   %if &BIN ne N %then %do;
27166     +       %if %sysfunc(exist(&bindata))<1 %then %do;
27167     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
27168     +           %put &EM_CODEBAR;
27169     +           %put * &msgString;
27170     +           %put &EM_CODEBAR;
27171     +           filename fref catalog 'work.em.profileformat.source';
27173     +            %let _maxlevel = %eval(&numbars + 1);
27174     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
27175     +               class %_vars &vars;
27176     +            run;
27177     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
27178     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
27179     +            run;
27180     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
27181     +              by NAME;
27182     +           run;
27183     +           proc sort data=_CLASSOUT;
27184     +              by NAME;
27185     +          run;
27186     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
27187     +             var NRAW;
27188     +             by NAME;
27189     +          run;
27190     +          proc delete data=WORK._CLASSOUT;
27191     +          run;
27192     +          data _null_;
27193     +             dsid = open('_DISCRETEMID');
27194     +             if dsid then do;
27195     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
27196     +                dsid = close(dsid);
27197     +             end;
27198     +          run;
27199     +          data _DISCRETEMID;
27200     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
27201     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
27202     +             by VARIABLE;
27203     +             if _b then output;
27204     +          run;
27206     +          data _EMVARDIST / view=_EMVARDIST;
27207     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
27208     +          run;
27209     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
27210     +             var %_vars &vars;
27211     +             %if &FREQ ne %then %do;
27212     +                 freq &FREQ / notrunc;
27213     +             %end;
27214     +          run;
27215     +          proc datasets lib=WORK NOLIST;
27216     +             delete _EMVARDIST / mt=view;
27217     +          run;
27218     +          quit;
27219     +          %if %upcase(&minmax) = Y %then %do;
27220     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
27221     +                 where  _type_ in('P0', 'P100');
27222     +              run;
27223     +              data _MINMAXDATA(keep=Variable Value Pos);
27224     +                 set _MINMAXDATA;
27225     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
27226     +                 Value = min; Pos=1; output;
27227     +                 Value = max; Pos=3; output;
27228     +              run;
27229     +          %end;
27230     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
27231     +                                                             COL3=P95 COL4=MAX));
27232     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
27233     +          run;
27234     +          proc sort data=&bindata;
27235     +             by VARIABLE;
27236     +          run;
27238     +          %let new_numbars=%eval(&NUMBARS+12);
27239     +          data &bindata;
27240     +             set &bindata;
27241     +             length Format $12;
27242     +             array _midpoint{&new_NUMBARS};
27243     +             array _bounds{&new_NUMBARS};
27244     +             if (max - min)>1e-10 then do;
27245     +                step = abs(P95-P5)/&NUMBARS;
27246     +                lstep = abs(p5- min)/5;
27247     +                ustep = abs(max-p95)/5;
27248     +                /* No outlying values */;
27249     +                if lstep<=step and ustep<=step then do;
27250     +                   step = abs(MIN-MAX)/&NUMBARS;
27251     +                   START=MIN;
27252     +                   do i=1 to &numbars;
27253     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
27254     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
27255     +                   end;
27256     +                   %let new_numbars = &numbars;
27257     +                end;
27258     +                else do;
27259     +                   if lstep<=step then do;
27260     +                      step = abs(MIN-P95)/&NUMBARS;
27261     +                      /* Start Histogram at MIN value */
27262     +                      do i=1 to &NUMBARS;
27263     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
27264     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
27265     +                      end;
27266     +                      /* Make BINS with upper outliers width */
27267     +                      do i=1 to 5;
27268     +                         numbars = &numbars + i;
27269     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
27270     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
27271     +                      end;
27272     +                       %let new_numbars = %eval(&numbars+5);
27273     +                   end;
27274     +                   else do;
27275     +                      /* Make BINS with lower outliers width */
27276     +                      do i=1 to 5;
27277     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
27278     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
27279     +                      end;
27280     +                      if ustep<= step then do;
27281     +                         step = abs(P5-MAX)/&NUMBARS;
27282     +                         /* End Histogram at MAX value */
27283     +                         do i=1 to &NUMBARS;
27284     +                            numbars = i+5;
27285     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
27286     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
27287     +                         end;
27288     +                          %let new_numbars = %eval(&numbars+5);
27289     +                      end;
27290     +                      else do;
27291     +                         do i=1 to &NUMBARS;
27292     +                            numbars = i+5;
27293     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
27294     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
27295     +                         end;
27296     +                         /* Make BINS with upper outliers width */
27297     +                         do i=1 to 5;
27298     +                            numbars = &numbars+5+i;
27299     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
27300     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
27301     +                         end;
27302     +                         %let new_numbars = %eval(&numbars+10);
27303     +                      end;
27304     +                   end;
27305     +                end;
27306     +             end;
27307     +             else do;
27308     +                _bounds(1)   = MIN;
27309     +                _midpoint(1) = MIN;
27310     +             end;
27311     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
27312     +          run;
27313     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
27314     +              data &bindata;
27315     +                 merge &bindata _DISCRETEMID(in = _b);
27316     +                 by VARIABLE;
27317     +                 if _b then _DISCRETE=1;
27318     +                 else _DISCRETE=0;
27319     +              run;
27320     +          %end;
27322     +          data _null_;
27323     +             file fref;
27324     +             set &bindata end=eof;
27325     +             array _bounds{&NEW_NUMBARS};
27326     +             array _midpoint{&NEW_NUMBARS};
27327     +             if _n_=1 then
27328     +                put 'proc format;';
27330     +             put 'value ' Format;
27331     +             if _DISCRETE then do;
27332     +                 do i=1 to &numbars;
27333     +                    _MID = _midpoint{i};
27334     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
27335     +                       put _MID '="' _MID '"';
27336     +                 end;
27337     +                 put ';';
27338     +             end;
27339     +             else do;
27340     +                if min eq max then do;
27341     +                   put 'low - high ="' MIN '";';
27342     +                end;
27343     +                else do;
27344     +                   _LB  = MIN;
27345     +                   _MID = _midpoint{1};
27346     +                   _UB  = _bounds{1};
27347     +                   put 'LOW -' _UB '="' _MID '"';
27349     +                   do i=1 to &NEW_NUMBARS-1;
27350     +                      _LB  = _bounds{i};
27351     +                      j=i+1;
27352     +                      _MID = _midpoint{j};
27353     +                      _UB  = _bounds{j};
27354     +                      if (_UB ne .) and (_LB ne _UB) then do;
27355     +                         if _UB>=MAX then
27356     +                            put _LB '-HIGH="' _MID '"';
27357     +                         else
27358     +                            put _LB '-' _UB '="' _MID '"';
27359     +                      end;
27360     +                   end;
27361     +                end;
27362     +             end;
27363     +             put ';';
27364     +             if eof then put 'run;';
27365     +          run;
27367     +          %inc fref;
27369     +          filename fref;
27370     +      %end;
27372     +      data _binneddata / view=_binneddata;
27373     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
27375     +         %let dsid    =%sysfunc(open(&bindata));
27376     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
27377     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
27378     +         %let obs = %sysfunc(fetch(&dsid));
27380     +         %if (&obs=0) %then %do;
27381     +             format
27382     +         %end;
27384     +         %let _count = 0;
27385     +         %do %while(&obs=0);
27386     +             %let _count = %eval(&_count +1);
27387     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
27388     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
27389     +             %do;
27390     +                &_name &_fmtname..
27391     +             %end;
27392     +             %let obs = %sysfunc(fetch(&dsid));
27393     +         %end;
27394     +         %let dsid=%sysfunc(close(&dsid));
27395     +         ;
27396     +      run;
27397     +   %end;
27399     +    %if &bin ne N %then %do;
27400     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
27401     +    %end;
27402     +    %else %do;
27403     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
27404     +    %end;
27405     +      class %_vars &vars;
27406     +      %if &FREQ ne %then %do;
27407     +          freq &FREQ;
27408     +      %end;
27409     +   run;
27410     +   data &output;
27411     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
27412     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
27413     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
27414     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
27415     +      set _temptab;
27416     +      format VALUE 12.3 count;
27417     +      value = inputn(level, 'best12.');
27418     +      keep VARIABLE COUNT PERCENT VALUE;
27419     +   run;
27420     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
27421     +       data &output;
27422     +          set &output(in=_a) _MINMAXDATA;
27423     +          if _a then Pos=2;
27424     +       run;
27425     +       proc sort data=&output out=&output(drop=pos);
27426     +          by VARIABLE POS VALUE;
27427     +          where VALUE ne .;
27428     +       run;
27429     +   %end;
27430     +   proc datasets lib=work nolist mt=(DATA VIEW);
27431     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
27432     +   run;
27433     +   quit;
27435     +   %doend:
27436     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
27437      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
27438      %var_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=EMWS1.Filter_VARDIST, METADATA=EMWS1.Filter_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 13 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:44 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 6 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 76.
NOTE: There were 13 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
27439     +%macro _vars;
27440     +ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear
27441     +IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife
27442     +IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY
27443     +PremiumsinLOBHousehold TOTAL_PREMIUM
27444     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Trans_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 221 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 221 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 221 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 221 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 221 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 13 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Trans_TRAIN(keep
MPRINT(VAR_PROFILE):  =ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
TOTAL_PREMIUM obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.63 seconds
      cpu time            0.57 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 14 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.65 seconds
      cpu time            0.59 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 13 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 13 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 13 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 13 observations read from the data set WORK._BOUNDS.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 13 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 04:09:46 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:46 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 301 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 13 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
27445     +proc format;
MPRINT(VAR_PROFILE):   proc format;
27446     +value F1_
27447     +LOW -0.0686759618 ="0.0343379809 "
27448     +0.0686759618 -0.1373519235 ="0.1030139426 "
27449     +0.1373519235 -0.2060278853 ="0.1716899044 "
27450     +0.2060278853 -0.2747038471 ="0.2403658662 "
27451     +0.2747038471 -0.3433798088 ="0.3090418279 "
27452     +0.3433798088 -0.4120557706 ="0.3777177897 "
27453     +0.4120557706 -0.4807317323 ="0.4463937515 "
27454     +0.4807317323 -0.5494076941 ="0.5150697132 "
27455     +0.5494076941 -0.6180836559 ="0.583745675 "
27456     +0.6180836559 -0.6867596176 ="0.6524216368 "
27457     +0.6867596176 -0.7554355794 ="0.7210975985 "
27458     +0.7554355794 -0.8241115412 ="0.7897735603 "
27459     +0.8241115412 -0.8927875029 ="0.8584495221 "
27460     +0.8927875029 -0.9614634647 ="0.9271254838 "
27461     +0.9614634647 -1.0301394265 ="0.9958014456 "
27462     +1.0301394265 -1.0988153882 ="1.0644774073 "
27463     +1.0988153882 -52.119052311 ="52.08471433 "
27464     +52.119052311 -103.13928923 ="103.10495125 "
27465     +103.13928923 -154.15952616 ="154.12518817 "
27466     +154.15952616 -205.17976308 ="205.1454251 "
27467     +205.17976308 -HIGH="256.16566202 "
27468     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0.0686759618 ="0.0343379809 " 0.0686759618 -0.1373519235 ="0.1030139426 " 0.1373519235 -0.2060278853 ="0.1716899044 " 0.2060278853 -0.2747038471 ="0.2403658662 " 0.2747038471 -0.3433798088 ="0.3090418279 "
0.3433798088 -0.4120557706 ="0.3777177897 " 0.4120557706 -0.4807317323 ="0.4463937515 " 0.4807317323 -0.5494076941 ="0.5150697132 " 0.5494076941 -0.6180836559 ="0.583745675 " 0.6180836559 -0.6867596176 ="0.6524216368 " 0.6867596176 -0.7554355794
="0.7210975985 " 0.7554355794 -0.8241115412 ="0.7897735603 " 0.8241115412 -0.8927875029 ="0.8584495221 " 0.8927875029 -0.9614634647 ="0.9271254838 " 0.9614634647 -1.0301394265 ="0.9958014456 " 1.0301394265 -1.0988153882 ="1.0644774073 " 1.0988153882
-52.119052311 ="52.08471433 " 52.119052311 -103.13928923 ="103.10495125 " 103.13928923 -154.15952616 ="154.12518817 " 154.15952616 -205.17976308 ="205.1454251 " 205.17976308 -HIGH="256.16566202 " ;
NOTE: Format F1_ has been output.
27469     +value F2_
27470     +LOW -18.75 ="16.875 "
27471     +18.75 -22.5 ="20.625 "
27472     +22.5 -26.25 ="24.375 "
27473     +26.25 -30 ="28.125 "
27474     +30 -33.75 ="31.875 "
27475     +33.75 -37.5 ="35.625 "
27476     +37.5 -41.25 ="39.375 "
27477     +41.25 -45 ="43.125 "
27478     +45 -48.75 ="46.875 "
27479     +48.75 -52.5 ="50.625 "
27480     +52.5 -56.25 ="54.375 "
27481     +56.25 -60 ="58.125 "
27482     +60 -63.75 ="61.875 "
27483     +63.75 -67.5 ="65.625 "
27484     +67.5 -71.25 ="69.375 "
27485     +71.25 -75 ="73.125 "
27486     +75 -257.6 ="255.725 "
27487     +257.6 -440.2 ="438.325 "
27488     +440.2 -622.8 ="620.925 "
27489     +622.8 -805.4 ="803.525 "
27490     +805.4 -HIGH="986.125 "
27491     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -18.75 ="16.875 " 18.75 -22.5 ="20.625 " 22.5 -26.25 ="24.375 " 26.25 -30 ="28.125 " 30 -33.75 ="31.875 " 33.75 -37.5 ="35.625 " 37.5 -41.25 ="39.375 " 41.25 -45 ="43.125 " 45 -48.75 ="46.875 " 48.75 -52.5 ="50.625 "
52.5 -56.25 ="54.375 " 56.25 -60 ="58.125 " 60 -63.75 ="61.875 " 63.75 -67.5 ="65.625 " 67.5 -71.25 ="69.375 " 71.25 -75 ="73.125 " 75 -257.6 ="255.725 " 257.6 -440.2 ="438.325 " 440.2 -622.8 ="620.925 " 622.8 -805.4 ="803.525 " 805.4 -HIGH="986.125 " ;
NOTE: Format F2_ has been output.
27492     +value F3_
27493     +LOW --132563.0532 ="-165657.3124 "
27494     +-132563.0532 --99445.6824 ="-132539.9416 "
27495     +-99445.6824 --66328.3116 ="-99422.57084 "
27496     +-66328.3116 --33210.9408 ="-66305.20004 "
27497     +-33210.9408 --93.57 ="-33187.82924 "
27498     +-93.57 --47.346875 ="-70.4584375 "
27499     +-47.346875 --1.12375 ="-24.2353125 "
27500     +-1.12375 -45.099375 ="21.9878125 "
27501     +45.099375 -91.3225 ="68.2109375 "
27502     +91.3225 -137.545625 ="114.4340625 "
27503     +137.545625 -183.76875 ="160.6571875 "
27504     +183.76875 -229.991875 ="206.8803125 "
27505     +229.991875 -276.215 ="253.1034375 "
27506     +276.215 -322.438125 ="299.3265625 "
27507     +322.438125 -368.66125 ="345.5496875 "
27508     +368.66125 -414.884375 ="391.7728125 "
27509     +414.884375 -461.1075 ="437.9959375 "
27510     +461.1075 -507.330625 ="484.2190625 "
27511     +507.330625 -553.55375 ="530.4421875 "
27512     +553.55375 -599.776875 ="576.6653125 "
27513     +599.776875 -646 ="622.8884375 "
27514     +646 -2891.978 ="2868.8664375 "
27515     +2891.978 -5137.956 ="5114.8444375 "
27516     +5137.956 -7383.934 ="7360.8224375 "
27517     +7383.934 -9629.912 ="9606.8004375 "
27518     +9629.912 -HIGH="11852.778438 "
27519     +;
MPRINT(VAR_PROFILE):   value F3_ LOW --132563.0532 ="-165657.3124 " -132563.0532 --99445.6824 ="-132539.9416 " -99445.6824 --66328.3116 ="-99422.57084 " -66328.3116 --33210.9408 ="-66305.20004 " -33210.9408 --93.57 ="-33187.82924 " -93.57 --47.346875
="-70.4584375 " -47.346875 --1.12375 ="-24.2353125 " -1.12375 -45.099375 ="21.9878125 " 45.099375 -91.3225 ="68.2109375 " 91.3225 -137.545625 ="114.4340625 " 137.545625 -183.76875 ="160.6571875 " 183.76875 -229.991875 ="206.8803125 " 229.991875 -276.215
="253.1034375 " 276.215 -322.438125 ="299.3265625 " 322.438125 -368.66125 ="345.5496875 " 368.66125 -414.884375 ="391.7728125 " 414.884375 -461.1075 ="437.9959375 " 461.1075 -507.330625 ="484.2190625 " 507.330625 -553.55375 ="530.4421875 " 553.55375
-599.776875 ="576.6653125 " 599.776875 -646 ="622.8884375 " 646 -2891.978 ="2868.8664375 " 2891.978 -5137.956 ="5114.8444375 " 5137.956 -7383.934 ="7360.8224375 " 7383.934 -9629.912 ="9606.8004375 " 9629.912 -HIGH="11852.778438 " ;
NOTE: Format F3_ has been output.
27520     +value F4_
27521     +LOW -1975.375 ="1974.6875 "
27522     +1975.375 -1976.75 ="1976.0625 "
27523     +1976.75 -1978.125 ="1977.4375 "
27524     +1978.125 -1979.5 ="1978.8125 "
27525     +1979.5 -1980.875 ="1980.1875 "
27526     +1980.875 -1982.25 ="1981.5625 "
27527     +1982.25 -1983.625 ="1982.9375 "
27528     +1983.625 -1985 ="1984.3125 "
27529     +1985 -1986.375 ="1985.6875 "
27530     +1986.375 -1987.75 ="1987.0625 "
27531     +1987.75 -1989.125 ="1988.4375 "
27532     +1989.125 -1990.5 ="1989.8125 "
27533     +1990.5 -1991.875 ="1991.1875 "
27534     +1991.875 -1993.25 ="1992.5625 "
27535     +1993.25 -1994.625 ="1993.9375 "
27536     +1994.625 -1996 ="1995.3125 "
27537     +1996 -12353.6 ="12352.9125 "
27538     +12353.6 -22711.2 ="22710.5125 "
27539     +22711.2 -33068.8 ="33068.1125 "
27540     +33068.8 -43426.4 ="43425.7125 "
27541     +43426.4 -HIGH="53783.3125 "
27542     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -1975.375 ="1974.6875 " 1975.375 -1976.75 ="1976.0625 " 1976.75 -1978.125 ="1977.4375 " 1978.125 -1979.5 ="1978.8125 " 1979.5 -1980.875 ="1980.1875 " 1980.875 -1982.25 ="1981.5625 " 1982.25 -1983.625 ="1982.9375 "
1983.625 -1985 ="1984.3125 " 1985 -1986.375 ="1985.6875 " 1986.375 -1987.75 ="1987.0625 " 1987.75 -1989.125 ="1988.4375 " 1989.125 -1990.5 ="1989.8125 " 1990.5 -1991.875 ="1991.1875 " 1991.875 -1993.25 ="1992.5625 " 1993.25 -1994.625 ="1993.9375 "
1994.625 -1996 ="1995.3125 " 1996 -12353.6 ="12352.9125 " 12353.6 -22711.2 ="22710.5125 " 22711.2 -33068.8 ="33068.1125 " 33068.8 -43426.4 ="43425.7125 " 43426.4 -HIGH="53783.3125 " ;
NOTE: Format F4_ has been output.
27543     +value F5_
27544     +LOW -1129.125 ="897.0625 "
27545     +1129.125 -1593.25 ="1361.1875 "
27546     +1593.25 -2057.375 ="1825.3125 "
27547     +2057.375 -2521.5 ="2289.4375 "
27548     +2521.5 -2985.625 ="2753.5625 "
27549     +2985.625 -3449.75 ="3217.6875 "
27550     +3449.75 -3913.875 ="3681.8125 "
27551     +3913.875 -4378 ="4145.9375 "
27552     +4378 -4842.125 ="4610.0625 "
27553     +4842.125 -5306.25 ="5074.1875 "
27554     +5306.25 -5770.375 ="5538.3125 "
27555     +5770.375 -6234.5 ="6002.4375 "
27556     +6234.5 -6698.625 ="6466.5625 "
27557     +6698.625 -7162.75 ="6930.6875 "
27558     +7162.75 -7626.875 ="7394.8125 "
27559     +7626.875 -8091 ="7858.9375 "
27560     +8091 -28558.752 ="28326.6895 "
27561     +28558.752 -49026.504 ="48794.4415 "
27562     +49026.504 -69494.256 ="69262.1935 "
27563     +69494.256 -89962.008 ="89729.9455 "
27564     +89962.008 -HIGH="110197.6975 "
27565     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -1129.125 ="897.0625 " 1129.125 -1593.25 ="1361.1875 " 1593.25 -2057.375 ="1825.3125 " 2057.375 -2521.5 ="2289.4375 " 2521.5 -2985.625 ="2753.5625 " 2985.625 -3449.75 ="3217.6875 " 3449.75 -3913.875 ="3681.8125 "
3913.875 -4378 ="4145.9375 " 4378 -4842.125 ="4610.0625 " 4842.125 -5306.25 ="5074.1875 " 5306.25 -5770.375 ="5538.3125 " 5770.375 -6234.5 ="6002.4375 " 6234.5 -6698.625 ="6466.5625 " 6698.625 -7162.75 ="6930.6875 " 7162.75 -7626.875 ="7394.8125 "
7626.875 -8091 ="7858.9375 " 8091 -28558.752 ="28326.6895 " 28558.752 -49026.504 ="48794.4415 " 49026.504 -69494.256 ="69262.1935 " 69494.256 -89962.008 ="89729.9455 " 89962.008 -HIGH="110197.6975 " ;
NOTE: Format F5_ has been output.
27566     +value F6_
27567     +LOW -16.60875 ="7.249375 "
27568     +16.60875 -35.3275 ="25.968125 "
27569     +35.3275 -54.04625 ="44.686875 "
27570     +54.04625 -72.765 ="63.405625 "
27571     +72.765 -91.48375 ="82.124375 "
27572     +91.48375 -110.2025 ="100.843125 "
27573     +110.2025 -128.92125 ="119.561875 "
27574     +128.92125 -147.64 ="138.280625 "
27575     +147.64 -166.35875 ="156.999375 "
27576     +166.35875 -185.0775 ="175.718125 "
27577     +185.0775 -203.79625 ="194.436875 "
27578     +203.79625 -222.515 ="213.155625 "
27579     +222.515 -241.23375 ="231.874375 "
27580     +241.23375 -259.9525 ="250.593125 "
27581     +259.9525 -278.67125 ="269.311875 "
27582     +278.67125 -297.39 ="288.030625 "
27583     +297.39 -5892.312 ="5882.952625 "
27584     +5892.312 -11487.234 ="11477.874625 "
27585     +11487.234 -17082.156 ="17072.796625 "
27586     +17082.156 -22677.078 ="22667.718625 "
27587     +22677.078 -HIGH="28262.640625 "
27588     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -16.60875 ="7.249375 " 16.60875 -35.3275 ="25.968125 " 35.3275 -54.04625 ="44.686875 " 54.04625 -72.765 ="63.405625 " 72.765 -91.48375 ="82.124375 " 91.48375 -110.2025 ="100.843125 " 110.2025 -128.92125 ="119.561875 "
128.92125 -147.64 ="138.280625 " 147.64 -166.35875 ="156.999375 " 166.35875 -185.0775 ="175.718125 " 185.0775 -203.79625 ="194.436875 " 203.79625 -222.515 ="213.155625 " 222.515 -241.23375 ="231.874375 " 241.23375 -259.9525 ="250.593125 " 259.9525
-278.67125 ="269.311875 " 278.67125 -297.39 ="288.030625 " 297.39 -5892.312 ="5882.952625 " 5892.312 -11487.234 ="11477.874625 " 11487.234 -17082.156 ="17072.796625 " 17082.156 -22677.078 ="22667.718625 " 22677.078 -HIGH="28262.640625 " ;
NOTE: Format F6_ has been output.
27589     +value F7_
27590     +LOW -2.154375 ="-2.4228125 "
27591     +2.154375 -11.30875 ="6.7315625 "
27592     +11.30875 -20.463125 ="15.8859375 "
27593     +20.463125 -29.6175 ="25.0403125 "
27594     +29.6175 -38.771875 ="34.1946875 "
27595     +38.771875 -47.92625 ="43.3490625 "
27596     +47.92625 -57.080625 ="52.5034375 "
27597     +57.080625 -66.235 ="61.6578125 "
27598     +66.235 -75.389375 ="70.8121875 "
27599     +75.389375 -84.54375 ="79.9665625 "
27600     +84.54375 -93.698125 ="89.1209375 "
27601     +93.698125 -102.8525 ="98.2753125 "
27602     +102.8525 -112.006875 ="107.4296875 "
27603     +112.006875 -121.16125 ="116.5840625 "
27604     +121.16125 -130.315625 ="125.7384375 "
27605     +130.315625 -139.47 ="134.8928125 "
27606     +139.47 -191.236 ="186.6588125 "
27607     +191.236 -243.002 ="238.4248125 "
27608     +243.002 -294.768 ="290.1908125 "
27609     +294.768 -346.534 ="341.9568125 "
27610     +346.534 -HIGH="393.7228125 "
27611     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -2.154375 ="-2.4228125 " 2.154375 -11.30875 ="6.7315625 " 11.30875 -20.463125 ="15.8859375 " 20.463125 -29.6175 ="25.0403125 " 29.6175 -38.771875 ="34.1946875 " 38.771875 -47.92625 ="43.3490625 " 47.92625 -57.080625
="52.5034375 " 57.080625 -66.235 ="61.6578125 " 66.235 -75.389375 ="70.8121875 " 75.389375 -84.54375 ="79.9665625 " 84.54375 -93.698125 ="89.1209375 " 93.698125 -102.8525 ="98.2753125 " 102.8525 -112.006875 ="107.4296875 " 112.006875 -121.16125
="116.5840625 " 121.16125 -130.315625 ="125.7384375 " 130.315625 -139.47 ="134.8928125 " 139.47 -191.236 ="186.6588125 " 191.236 -243.002 ="238.4248125 " 243.002 -294.768 ="290.1908125 " 294.768 -346.534 ="341.9568125 " 346.534 -HIGH="393.7228125 " ;
NOTE: Format F7_ has been output.
27612     +value F8_
27613     +LOW -28.354375 ="12.1221875 "
27614     +28.354375 -60.81875 ="44.5865625 "
27615     +60.81875 -93.283125 ="77.0509375 "
27616     +93.283125 -125.7475 ="109.5153125 "
27617     +125.7475 -158.211875 ="141.9796875 "
27618     +158.211875 -190.67625 ="174.4440625 "
27619     +190.67625 -223.140625 ="206.9084375 "
27620     +223.140625 -255.605 ="239.3728125 "
27621     +255.605 -288.069375 ="271.8371875 "
27622     +288.069375 -320.53375 ="304.3015625 "
27623     +320.53375 -352.998125 ="336.7659375 "
27624     +352.998125 -385.4625 ="369.2303125 "
27625     +385.4625 -417.926875 ="401.6946875 "
27626     +417.926875 -450.39125 ="434.1590625 "
27627     +450.39125 -482.855625 ="466.6234375 "
27628     +482.855625 -515.32 ="499.0878125 "
27629     +515.32 -2733.14 ="2716.9078125 "
27630     +2733.14 -4950.96 ="4934.7278125 "
27631     +4950.96 -7168.78 ="7152.5478125 "
27632     +7168.78 -9386.6 ="9370.3678125 "
27633     +9386.6 -HIGH="11588.187813 "
27634     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -28.354375 ="12.1221875 " 28.354375 -60.81875 ="44.5865625 " 60.81875 -93.283125 ="77.0509375 " 93.283125 -125.7475 ="109.5153125 " 125.7475 -158.211875 ="141.9796875 " 158.211875 -190.67625 ="174.4440625 " 190.67625
-223.140625 ="206.9084375 " 223.140625 -255.605 ="239.3728125 " 255.605 -288.069375 ="271.8371875 " 288.069375 -320.53375 ="304.3015625 " 320.53375 -352.998125 ="336.7659375 " 352.998125 -385.4625 ="369.2303125 " 385.4625 -417.926875 ="401.6946875 "
417.926875 -450.39125 ="434.1590625 " 450.39125 -482.855625 ="466.6234375 " 482.855625 -515.32 ="499.0878125 " 515.32 -2733.14 ="2716.9078125 " 2733.14 -4950.96 ="4934.7278125 " 4950.96 -7168.78 ="7152.5478125 " 7168.78 -9386.6 ="9370.3678125 " 9386.6
-HIGH="11588.187813 " ;
NOTE: Format F8_ has been output.
27635     +value F9_
27636     +LOW --2.71375 ="-7.356875 "
27637     +-2.71375 -6.5725 ="1.929375 "
27638     +6.5725 -15.85875 ="11.215625 "
27639     +15.85875 -25.145 ="20.501875 "
27640     +25.145 -34.43125 ="29.788125 "
27641     +34.43125 -43.7175 ="39.074375 "
27642     +43.7175 -53.00375 ="48.360625 "
27643     +53.00375 -62.29 ="57.646875 "
27644     +62.29 -71.57625 ="66.933125 "
27645     +71.57625 -80.8625 ="76.219375 "
27646     +80.8625 -90.14875 ="85.505625 "
27647     +90.14875 -99.435 ="94.791875 "
27648     +99.435 -108.72125 ="104.078125 "
27649     +108.72125 -118.0075 ="113.364375 "
27650     +118.0075 -127.29375 ="122.650625 "
27651     +127.29375 -136.58 ="131.936875 "
27652     +136.58 -507.004 ="502.360875 "
27653     +507.004 -877.428 ="872.784875 "
27654     +877.428 -1247.852 ="1243.208875 "
27655     +1247.852 -1618.276 ="1613.632875 "
27656     +1618.276 -HIGH="1984.056875 "
27657     +;
MPRINT(VAR_PROFILE):   value F9_ LOW --2.71375 ="-7.356875 " -2.71375 -6.5725 ="1.929375 " 6.5725 -15.85875 ="11.215625 " 15.85875 -25.145 ="20.501875 " 25.145 -34.43125 ="29.788125 " 34.43125 -43.7175 ="39.074375 " 43.7175 -53.00375 ="48.360625 "
53.00375 -62.29 ="57.646875 " 62.29 -71.57625 ="66.933125 " 71.57625 -80.8625 ="76.219375 " 80.8625 -90.14875 ="85.505625 " 90.14875 -99.435 ="94.791875 " 99.435 -108.72125 ="104.078125 " 108.72125 -118.0075 ="113.364375 " 118.0075 -127.29375 ="122.650625
" 127.29375 -136.58 ="131.936875 " 136.58 -507.004 ="502.360875 " 507.004 -877.428 ="872.784875 " 877.428 -1247.852 ="1243.208875 " 1247.852 -1618.276 ="1613.632875 " 1618.276 -HIGH="1984.056875 " ;
NOTE: Format F9_ has been output.
27658     +value F10_
27659     +LOW -19.125 ="17.0625 "
27660     +19.125 -23.25 ="21.1875 "
27661     +23.25 -27.375 ="25.3125 "
27662     +27.375 -31.5 ="29.4375 "
27663     +31.5 -35.625 ="33.5625 "
27664     +35.625 -39.75 ="37.6875 "
27665     +39.75 -43.875 ="41.8125 "
27666     +43.875 -48 ="45.9375 "
27667     +48 -52.125 ="50.0625 "
27668     +52.125 -56.25 ="54.1875 "
27669     +56.25 -60.375 ="58.3125 "
27670     +60.375 -64.5 ="62.4375 "
27671     +64.5 -68.625 ="66.5625 "
27672     +68.625 -72.75 ="70.6875 "
27673     +72.75 -76.875 ="74.8125 "
27674     +76.875 -HIGH="78.9375 "
27675     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -19.125 ="17.0625 " 19.125 -23.25 ="21.1875 " 23.25 -27.375 ="25.3125 " 27.375 -31.5 ="29.4375 " 31.5 -35.625 ="33.5625 " 35.625 -39.75 ="37.6875 " 39.75 -43.875 ="41.8125 " 43.875 -48 ="45.9375 " 48 -52.125 ="50.0625
" 52.125 -56.25 ="54.1875 " 56.25 -60.375 ="58.3125 " 60.375 -64.5 ="62.4375 " 64.5 -68.625 ="66.5625 " 68.625 -72.75 ="70.6875 " 72.75 -76.875 ="74.8125 " 76.875 -HIGH="78.9375 " ;
NOTE: Format F10_ has been output.
27676     +value F11_
27677     +LOW -18.5 ="17.75 "
27678     +18.5 -20 ="19.25 "
27679     +20 -21.5 ="20.75 "
27680     +21.5 -23 ="22.25 "
27681     +23 -24.5 ="23.75 "
27682     +24.5 -26 ="25.25 "
27683     +26 -27.5 ="26.75 "
27684     +27.5 -29 ="28.25 "
27685     +29 -30.5 ="29.75 "
27686     +30.5 -32 ="31.25 "
27687     +32 -33.5 ="32.75 "
27688     +33.5 -35 ="34.25 "
27689     +35 -36.5 ="35.75 "
27690     +36.5 -38 ="37.25 "
27691     +38 -39.5 ="38.75 "
27692     +39.5 -HIGH="40.25 "
27693     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -18.5 ="17.75 " 18.5 -20 ="19.25 " 20 -21.5 ="20.75 " 21.5 -23 ="22.25 " 23 -24.5 ="23.75 " 24.5 -26 ="25.25 " 26 -27.5 ="26.75 " 27.5 -29 ="28.25 " 29 -30.5 ="29.75 " 30.5 -32 ="31.25 " 32 -33.5 ="32.75 " 33.5 -35
="34.25 " 35 -36.5 ="35.75 " 36.5 -38 ="37.25 " 38 -39.5 ="38.75 " 39.5 -HIGH="40.25 " ;
NOTE: Format F11_ has been output.
27694     +value F12_
27695     +LOW --26.83125 ="-50.915625 "
27696     +-26.83125 -21.3375 ="-2.746875 "
27697     +21.3375 -69.50625 ="45.421875 "
27698     +69.50625 -117.675 ="93.590625 "
27699     +117.675 -165.84375 ="141.759375 "
27700     +165.84375 -214.0125 ="189.928125 "
27701     +214.0125 -262.18125 ="238.096875 "
27702     +262.18125 -310.35 ="286.265625 "
27703     +310.35 -358.51875 ="334.434375 "
27704     +358.51875 -406.6875 ="382.603125 "
27705     +406.6875 -454.85625 ="430.771875 "
27706     +454.85625 -503.025 ="478.940625 "
27707     +503.025 -551.19375 ="527.109375 "
27708     +551.19375 -599.3625 ="575.278125 "
27709     +599.3625 -647.53125 ="623.446875 "
27710     +647.53125 -695.7 ="671.615625 "
27711     +695.7 -5566.32 ="5542.235625 "
27712     +5566.32 -10436.94 ="10412.855625 "
27713     +10436.94 -15307.56 ="15283.475625 "
27714     +15307.56 -20178.18 ="20154.095625 "
27715     +20178.18 -HIGH="25024.715625 "
27716     +;
MPRINT(VAR_PROFILE):   value F12_ LOW --26.83125 ="-50.915625 " -26.83125 -21.3375 ="-2.746875 " 21.3375 -69.50625 ="45.421875 " 69.50625 -117.675 ="93.590625 " 117.675 -165.84375 ="141.759375 " 165.84375 -214.0125 ="189.928125 " 214.0125 -262.18125
="238.096875 " 262.18125 -310.35 ="286.265625 " 310.35 -358.51875 ="334.434375 " 358.51875 -406.6875 ="382.603125 " 406.6875 -454.85625 ="430.771875 " 454.85625 -503.025 ="478.940625 " 503.025 -551.19375 ="527.109375 " 551.19375 -599.3625 ="575.278125 "
599.3625 -647.53125 ="623.446875 " 647.53125 -695.7 ="671.615625 " 695.7 -5566.32 ="5542.235625 " 5566.32 -10436.94 ="10412.855625 " 10436.94 -15307.56 ="15283.475625 " 15307.56 -20178.18 ="20154.095625 " 20178.18 -HIGH="25024.715625 " ;
NOTE: Format F12_ has been output.
27717     +value F13_
27718     +LOW -395.74420191 ="374.63400239 "
27719     +395.74420191 -435.44815143 ="414.33795191 "
27720     +435.44815143 -475.15210096 ="454.04190143 "
27721     +475.15210096 -514.85605048 ="493.74585096 "
27722     +514.85605048 -554.56 ="533.44980048 "
27723     +554.56 -591.7475 ="573.15375 "
27724     +591.7475 -628.935 ="610.34125 "
27725     +628.935 -666.1225 ="647.52875 "
27726     +666.1225 -703.31 ="684.71625 "
27727     +703.31 -740.4975 ="721.90375 "
27728     +740.4975 -777.685 ="759.09125 "
27729     +777.685 -814.8725 ="796.27875 "
27730     +814.8725 -852.06 ="833.46625 "
27731     +852.06 -889.2475 ="870.65375 "
27732     +889.2475 -926.435 ="907.84125 "
27733     +926.435 -963.6225 ="945.02875 "
27734     +963.6225 -1000.81 ="982.21625 "
27735     +1000.81 -1037.9975 ="1019.40375 "
27736     +1037.9975 -1075.185 ="1056.59125 "
27737     +1075.185 -1112.3725 ="1093.77875 "
27738     +1112.3725 -1149.56 ="1130.96625 "
27739     +1149.56 -6785.912 ="6767.31825 "
27740     +6785.912 -12422.264 ="12403.67025 "
27741     +12422.264 -18058.616 ="18040.02225 "
27742     +18058.616 -23694.968 ="23676.37425 "
27743     +23694.968 -HIGH="29312.72625 "
27744     +;
MPRINT(VAR_PROFILE):   value F13_ LOW -395.74420191 ="374.63400239 " 395.74420191 -435.44815143 ="414.33795191 " 435.44815143 -475.15210096 ="454.04190143 " 475.15210096 -514.85605048 ="493.74585096 " 514.85605048 -554.56 ="533.44980048 " 554.56 -591.7475
="573.15375 " 591.7475 -628.935 ="610.34125 " 628.935 -666.1225 ="647.52875 " 666.1225 -703.31 ="684.71625 " 703.31 -740.4975 ="721.90375 " 740.4975 -777.685 ="759.09125 " 777.685 -814.8725 ="796.27875 " 814.8725 -852.06 ="833.46625 " 852.06 -889.2475
="870.65375 " 889.2475 -926.435 ="907.84125 " 926.435 -963.6225 ="945.02875 " 963.6225 -1000.81 ="982.21625 " 1000.81 -1037.9975 ="1019.40375 " 1037.9975 -1075.185 ="1056.59125 " 1075.185 -1112.3725 ="1093.77875 " 1112.3725 -1149.56 ="1130.96625 " 1149.56
-6785.912 ="6767.31825 " 6785.912 -12422.264 ="12403.67025 " 12422.264 -18058.616 ="18040.02225 " 18058.616 -23694.968 ="23676.37425 " 23694.968 -HIGH="29312.72625 " ;
NOTE: Format F13_ has been output.
MPRINT(VAR_PROFILE):   run;
27745     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Trans_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format ClaimsRate F1_. CustomerAge F2_. CustomerMonetaryValue F3_. FirstPolicyYear F4_. IMP_GrossMonthlySalary F5_. IMP_PremiumsinLOBHealth F6_. IMP_PremiumsinLOBLife F7_. IMP_PremiumsinLOBMotor F8_. IMP_PremiumsinLOBWorkComp F9_.
IMP_REP_CustomerAge F10_. LOYALTY F11_. PremiumsinLOBHousehold F12_. TOTAL_PREMIUM F13_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 255 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 255 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS1.FILTER_VARDIST has 255 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 255 observations read from the data set EMWS1.FILTER_VARDIST.
NOTE: There were 26 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS1.FILTER_VARDIST has 281 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=EMWS1.Filter_VARDIST out=EMWS1.Filter_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 279 observations read from the data set EMWS1.FILTER_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS1.FILTER_VARDIST has 279 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    data WORK.M3LTMEOA;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M3LTMEOA end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
27756      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
27757      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
27758      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27759      %macro DMDBClass;
27760
27761      %mend DMDBClass;
27762      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27763      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
27764      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27765      %macro DMDBVar;
27766          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
27767         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
27768         PremiumsinLOBHousehold TOTAL_PREMIUM
27769      %mend DMDBVar;
27770      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27771      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
27772      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27773      proc dmdb batch data=EMWS1.Trans_TRAIN
27774      varout=WORK._EMFILTERVAR
27775      maxlevel = 26
27776      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Trans_TRAIN varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   var
27777      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
27778      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._EMFILTERVAR has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
27779      quit;
27780      *--- end code ---*;
 
27781      data WORK.M3LTMEOA;
MPRINT(EM_DIAGRAM):    data WORK.M3LTMEOA;
27782      set WORK.M3LTMEOA;
MPRINT(EM_DIAGRAM):   set WORK.M3LTMEOA;
27783      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
27784      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
27785      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.M3LTMEOA.
NOTE: The data set WORK.M3LTMEOA has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27786      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
27787      * Filter: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Filter: Input Variables Macro ;
27788      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27789      %macro EM_FILTERPCT;
27790          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
27791         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
27792         PremiumsinLOBHousehold TOTAL_PREMIUM
27793      %mend EM_FILTERPCT;
27794      data EM_Filter_PCT / view=EM_Filter_PCT;
MPRINT(EM_DIAGRAM):   data EM_Filter_PCT / view=EM_Filter_PCT;
27795      set
27795    ! EMWS1.Trans_TRAIN(keep=%EM_FILTERPCT );
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM );
27796      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_FILTER_PCT.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Method PERCENTS;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27797      *------------------------------------------------------------*;
27798      * Filter: Method PERCENTS;
27799      *------------------------------------------------------------*;
27800      proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   var
27801      var %EM_FILTERPCT;
MPRINT(EM_FILTERPCT):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
27802      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.EM_FILTER_PCT.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.34 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.EM_FILTER_PCT.
NOTE: The data set WORK.FILTEROUTSTAT has 10 observations and 9 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.43 seconds
      cpu time            0.36 seconds
 
 
27803      %let _FilterIntervalNum= 0;
27804      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
27805      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27806      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27807      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt";
27808      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27809      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
27810      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
27811      file _X;
MPRINT(EM_DIAGRAM):   file _X;
27812      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
27813      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
27814      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27815      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
27816      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
27817      end;
MPRINT(EM_DIAGRAM):   end;
27818      else do;
MPRINT(EM_DIAGRAM):   else do;
27819      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
27820      end;
MPRINT(EM_DIAGRAM):   end;
27821      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
27822      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
27823      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
27824      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
27825      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
27826      end;
MPRINT(EM_DIAGRAM):   end;
27827      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
27828      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
27829      end;
MPRINT(EM_DIAGRAM):   end;
27830      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
27831      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
27832      end;
MPRINT(EM_DIAGRAM):   end;
27833      end;
MPRINT(EM_DIAGRAM):   end;
27834      else do;
MPRINT(EM_DIAGRAM):   else do;
27835      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
27836      end;
MPRINT(EM_DIAGRAM):   end;
27837      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
27838      put string;
MPRINT(EM_DIAGRAM):   put string;
27839      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
27840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=30Dec2015:16:09:47,
      Create Time=30Dec2015:16:09:47
 
NOTE: 8 records were written to the file _X.
      The minimum record length was 68.
      The maximum record length was 113.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
27841      %let _FilterIntervalNum= 0;
27842      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
27843      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27845      filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
27846      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27847      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
27848      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
27849      file _X;
MPRINT(EM_DIAGRAM):   file _X;
27850      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
27851      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
27852      ;
MPRINT(EM_DIAGRAM):   ;
27853      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27854      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
27855      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
27856      end;
MPRINT(EM_DIAGRAM):   end;
27857      else do;
MPRINT(EM_DIAGRAM):   else do;
27858      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
27859      end;
MPRINT(EM_DIAGRAM):   end;
27860      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
27861      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
27862      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
27863      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
27864      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
27865      end;
MPRINT(EM_DIAGRAM):   end;
27866      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
27867      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
27868      end;
MPRINT(EM_DIAGRAM):   end;
27869      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
27870      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
27871      end;
MPRINT(EM_DIAGRAM):   end;
27872      end;
MPRINT(EM_DIAGRAM):   end;
27873      else do;
MPRINT(EM_DIAGRAM):   else do;
27874      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
27875      end;
MPRINT(EM_DIAGRAM):   end;
27876      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
27877      put string;
MPRINT(EM_DIAGRAM):   put string;
27878      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
27879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=30Dec2015:16:09:47,
      Create Time=30Dec2015:16:09:47
 
NOTE: 8 records were written to the file _X.
      The minimum record length was 68.
      The maximum record length was 113.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27880      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
27881      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
27882      if
27883      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
27884      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
27885      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
27886      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
27887      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
27888      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
27889      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
27890      and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
27891      ;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) ;
27892      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
27893      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
27894      set
27895      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
27896      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) ;
27897      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
27898      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The data set WORK.FILTERFILTERVAR has 8 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27899      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
27900      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 8 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27902      proc sort data=WORK.M0OMWP3Q;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M0OMWP3Q;
27903      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27904      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.M0OMWP3Q.
NOTE: The data set WORK.M0OMWP3Q has 16 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
27905      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
27906      merge WORK.M0OMWP3Q WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M0OMWP3Q WORK.FilterFILTERVAR(in=_b);
27907      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27908      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
27909      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.M0OMWP3Q.
NOTE: There were 8 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 8 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27910      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
27911      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
27912      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27913      %macro DMDBClass;
27914
27915      %mend DMDBClass;
27916      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27917      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
27918      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27919      %macro DMDBVar;
27920          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
27921         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
27922         PremiumsinLOBHousehold TOTAL_PREMIUM
27923      %mend DMDBVar;
27924      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27925      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
27926      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27927      proc dmdb batch data=EMWS1.Trans_TRAIN
27928      dmdbcat=WORK.Filter_DMDB
27929      varout=WORK.FILTER_VARSTATS
27930      maxlevel = 513
27931      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Trans_TRAIN dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
27932      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
27933      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.22 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
27934      quit;
27935      *--- end code ---*;
 
27936      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
27937      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
27938      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
27939      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
27940      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
27941      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
27942      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
27943      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
27944      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
27945      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
27946      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
27947      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
27948      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
27949      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
27950      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
27951      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
27952      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 8 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:49" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 30, 2015
Time:                16:09:49
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ZI0DSP "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ZI0DSP new;
MPRINT(EM_DIAGRAM):   run;
28054      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
28055      by name;
MPRINT(EM_DIAGRAM):   by name;
28056      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28057      proc print data=EMWS1.Filter_INTERVAL(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Filter_INTERVAL(obs=500) noobs label;
28058      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
28059      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterintervallimits_title,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Filter Limits for Interval Variables";
28060      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
28061      run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28062      title9;
MPRINT(EM_DIAGRAM):   title9;
28063      title10;
MPRINT(EM_DIAGRAM):   title10;
28064      data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
MPRINT(EM_DIAGRAM):    data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
28065      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
28066      if
28067      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
28068      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
28069      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
28070      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
28071      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
28072      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
28073      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
28074      and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
28075      then do;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) then do;
28076      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
28077      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
28078      end;
MPRINT(EM_DIAGRAM):   end;
28079      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
28080      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
28081      if M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER = 0;
28082      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_FILTERED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
28083      data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
MPRINT(EM_DIAGRAM):   data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
28084      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
28085      if
28086      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
28087      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
28088      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
28089      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
28090      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
28091      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
28092      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
28093      and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
28094      then do;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (514.67<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) then do;
28095      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
28096      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
28097      end;
MPRINT(EM_DIAGRAM):   end;
28098      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
28099      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
28100      if M_FILTER = 1;
MPRINT(EM_DIAGRAM):   if M_FILTER = 1;
28101      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_EXCLUDED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * createcountreport;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.Trans_TRAIN;
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from WORK.DATA_FILTERED;
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
28102      data WORK.FilterCOUNT;
MPRINT(EM_DIAGRAM):    data WORK.FilterCOUNT;
28103      length DATAROLE $16;
MPRINT(EM_DIAGRAM):   length DATAROLE $16;
28104      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))" FILTERED = "%sysfunc(sasmsg(sashelp.dmine, rpt_filtered_vlabel, NOQUOTE))" EXCLUDED = "%sysfunc(sasmsg(sashelp.dmine, rpt_excluded_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" FILTERED = "Filtered" EXCLUDED = "Excluded";
28105      DATAROLE = 'TRAIN';
MPRINT(EM_DIAGRAM):   DATAROLE = 'TRAIN';
28106      DATA = 10296;
MPRINT(EM_DIAGRAM):   DATA = 10296;
28107      FILTERED = 9787;
MPRINT(EM_DIAGRAM):   FILTERED = 9787;
28108      EXCLUDED = 509;
MPRINT(EM_DIAGRAM):   EXCLUDED = 509;
28109      output;
MPRINT(EM_DIAGRAM):   output;
28110      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.FILTERCOUNT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28111      proc print data=WORK.FilterCOUNT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterCOUNT noobs label;
28112      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28113      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
28114      run;
 
NOTE: There were 1 observations read from the data set WORK.FILTERCOUNT.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28115      title9;
MPRINT(EM_DIAGRAM):   title9;
28116      title10;
MPRINT(EM_DIAGRAM):   title10;
28117      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28118      * createstattable;
MPRINT(EM_DIAGRAM):   * createstattable;
28119      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28120      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
28121      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
28122      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
28123      %macro DMDBClass;
28124
28125      %mend DMDBClass;
28126      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
28127      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
28128      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
28129      %macro DMDBVar;
28130          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
28131         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
28132         PremiumsinLOBHousehold TOTAL_PREMIUM
28133      %mend DMDBVar;
28134      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28135      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
28136      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28137      proc dmdb batch data=WORK.DATA_FILTERED
28138      dmdbcat=WORK.Filter_DMDB
28139      varout=WORK.FILTER_VARSTATS
28140      maxlevel = 513
28141      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.DATA_FILTERED dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
28142      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
28143      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set WORK.DATA_FILTERED.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
28144      quit;
28145      *--- end code ---*;
 
28146      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
28147      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
28148      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
28149      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
28150      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
28151      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
28152      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
28153      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
28154      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
28155      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
28156      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
28157      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
28158      retain DATAROLE "TRAIN" type "FILTERED";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "FILTERED";
28159      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
28160      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
28161      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
28162      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: 8 observations added.
NOTE: The data set EMWS1.FILTER_STATS has 16 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28163      proc sort data=EMWS1.Filter_STATS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_STATS;
28164      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
28165      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 16 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
28166      proc transpose data=EMWS1.Filter_STATS out=EMWS1.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Filter_STATS out=EMWS1.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
28167      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
28168      id TYPE;
MPRINT(EM_DIAGRAM):   id TYPE;
28169      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 64 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
28170      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS1 nolist;
28171      modify Filter_STATS;
MPRINT(EM_DIAGRAM):   modify Filter_STATS;
28172      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" STATISTIC = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel, NOQUOTE))" FILTERED="Filtered" ORIGINAL = "%sysfunc(sasmsg(sashelp.dmine, rpt_original_vlabel,
28172    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable" STATISTIC = "Statistics" FILTERED= "Filtered" ORIGINAL = "Original";
MPRINT(EM_DIAGRAM):   run;
28173      run;
 
NOTE: MODIFY was successful for EMWS1.FILTER_STATS.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
28174      proc sort data=EMWS1.Filter_STATS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_STATS;
28175      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
28176      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 64 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28177      %let _cn = %sysfunc(getoption(CENTER));
28178      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
28179      proc print data=EMWS1.Filter_STATS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Filter_STATS(obs=500) noobs label;
28180      var STATISTIC ORIGINAL
28181      FILTERED
28182      ;
MPRINT(EM_DIAGRAM):   var STATISTIC ORIGINAL FILTERED ;
28183      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
28184      where ORIGINAL ne .;
MPRINT(EM_DIAGRAM):   where ORIGINAL ne .;
28185      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterstat_title,    NOQUOTE, FILTERED))";
MPRINT(EM_DIAGRAM):   title9 "Statistics for Original and FILTERED Data";
28186      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
28187      run;
 
NOTE: There were 64 observations read from the data set EMWS1.FILTER_STATS.
      WHERE ORIGINAL not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28188      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
28189      title9;
MPRINT(EM_DIAGRAM):   title9;
28190      title10;
MPRINT(EM_DIAGRAM):   title10;
28191      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28192      * createhistogramtable;
MPRINT(EM_DIAGRAM):   * createhistogramtable;
28193      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28194      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
28195      set WORK.FilterDMDBC(where=(report='Y'));
MPRINT(EM_DIAGRAM):   set WORK.FilterDMDBC(where=(report='Y'));
28196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE report='Y';
NOTE: The data set WORK.FILTERDMDBC has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28197      filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
28198      %inc vdist;
NOTE: %INCLUDE (level 1) file VDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
28199     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
28200     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
28201     +   %let _em_nodeid = EM;
28202     +   %if %symexist(EM_NODEID) %then %do;
28203     +       %let _em_nodeid = &em_nodeid;
28204     +   %end;
28206     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
28207     +   %put &EM_CODEBAR;
28208     +   %put * &msgString;
28209     +   %put &EM_CODEBAR;
28211     +   /* Process metadata data set */
28212     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
28213     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
28214     +       %let FREQ=;
28215     +       %let _nobs=0;
28216     +       data _null;
28217     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
28218     +          if eof then call symput('_nobs', put(_N_, best.));
28219     +       run;
28220     +       %if "&_nobs" ne "0" %then %do;
28221     +           data _null_;
28222     +              file _mac;
28223     +              length _VARS $80; retain _vars;
28224     +              if _n_ =1 then put '%macro _vars;';
28225     +              set &metadata end=eof;
28226     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
28227     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
28228     +              else do;
28229     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
28230     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
28231     +                 else do;
28232     +                    put _Vars;
28233     +                    _vars = strip(NAME);
28234     +                 end;
28235     +              end;
28237     +              if eof then do;
28238     +                 put _Vars;
28239     +                 put '%mend _vars;';
28240     +              end;
28241     +           run;
28242     +       %end;
28243     +       %else %do;
28244     +           data _null_;
28245     +              file _mac;
28246     +              put '%macro _vars;';
28247     +              put '%mend _vars;';
28248     +           run;
28249     +       %end;
28250     +   %end;
28251     +   %else %do;
28252     +       data _null_;
28253     +          file _mac;
28254     +          put '%macro _vars;';
28255     +          put '%mend _vars;';
28256     +       run;
28257     +   %end;
28258     +   %inc _mac;
28259     +   filename _mac;
28261     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
28263     +   /* Check if FREQ variable is in the data set */
28264     +   %if &freq ne %then %do;
28265     +       data _null_;
28266     +          dsid = open("&data");
28267     +          if dsid>0 then do;
28268     +               if varnum(dsid, "&FREQ")<1 then
28269     +                  call symput('FREQ', '');
28270     +               dsid = close(dsid);
28271     +          end;
28272     +       run;
28273     +   %end;
28275     +   %if &bindata eq %then %do;
28276     +       %let bindata = _BOUNDS;
28277     +       proc datasets lib=work nolist mt=(DATA VIEW);
28278     +          delete _BOUNDS;
28279     +       run;
28280     +   %end;
28282     +   %global _EM_VARDISTOBS_MAX;
28283     +   %let _EM_VARDISTOBS_MAX = 1000000;
28285     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
28286     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
28287     +   %end;
28289     +   %if &computeStat = Y %then %do;
28290     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
28291     +          var %_Vars &vars;
28292     +          %if &FREQ ne %then %do;
28293     +              freq &FREQ;
28294     +          %end;
28295     +       run;
28296     +       proc sort data=&stat;
28297     +          by VARIABLE;
28298     +       run;
28300     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
28301     +           %let _library = WORK;
28302     +           %let _member  = &STAT;
28303     +      %end;
28304     +      %else %do;
28305     +          %let _library = %scan(&STAT, 1, .);
28306     +          %let _member  = %scan(&STAT, 2, .);
28307     +      %end;
28309     +      proc datasets library=&_library nolist;
28310     +         modify &_member;
28311     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
28312     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
28313     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
28314     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
28315     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
28316     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
28317     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
28318     +      run;
28319     +      quit;
28320     +   %end;
28322     +   %if &BIN ne N %then %do;
28323     +       %if %sysfunc(exist(&bindata))<1 %then %do;
28324     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
28325     +           %put &EM_CODEBAR;
28326     +           %put * &msgString;
28327     +           %put &EM_CODEBAR;
28328     +           filename fref catalog 'work.em.profileformat.source';
28330     +            %let _maxlevel = %eval(&numbars + 1);
28331     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
28332     +               class %_vars &vars;
28333     +            run;
28334     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
28335     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
28336     +            run;
28337     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
28338     +              by NAME;
28339     +           run;
28340     +           proc sort data=_CLASSOUT;
28341     +              by NAME;
28342     +          run;
28343     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
28344     +             var NRAW;
28345     +             by NAME;
28346     +          run;
28347     +          proc delete data=WORK._CLASSOUT;
28348     +          run;
28349     +          data _null_;
28350     +             dsid = open('_DISCRETEMID');
28351     +             if dsid then do;
28352     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
28353     +                dsid = close(dsid);
28354     +             end;
28355     +          run;
28356     +          data _DISCRETEMID;
28357     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
28358     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
28359     +             by VARIABLE;
28360     +             if _b then output;
28361     +          run;
28363     +          data _EMVARDIST / view=_EMVARDIST;
28364     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
28365     +          run;
28366     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
28367     +             var %_vars &vars;
28368     +             %if &FREQ ne %then %do;
28369     +                 freq &FREQ / notrunc;
28370     +             %end;
28371     +          run;
28372     +          proc datasets lib=WORK NOLIST;
28373     +             delete _EMVARDIST / mt=view;
28374     +          run;
28375     +          quit;
28376     +          %if %upcase(&minmax) = Y %then %do;
28377     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
28378     +                 where  _type_ in('P0', 'P100');
28379     +              run;
28380     +              data _MINMAXDATA(keep=Variable Value Pos);
28381     +                 set _MINMAXDATA;
28382     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28383     +                 Value = min; Pos=1; output;
28384     +                 Value = max; Pos=3; output;
28385     +              run;
28386     +          %end;
28387     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
28388     +                                                             COL3=P95 COL4=MAX));
28389     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
28390     +          run;
28391     +          proc sort data=&bindata;
28392     +             by VARIABLE;
28393     +          run;
28395     +          %let new_numbars=%eval(&NUMBARS+12);
28396     +          data &bindata;
28397     +             set &bindata;
28398     +             length Format $12;
28399     +             array _midpoint{&new_NUMBARS};
28400     +             array _bounds{&new_NUMBARS};
28401     +             if (max - min)>1e-10 then do;
28402     +                step = abs(P95-P5)/&NUMBARS;
28403     +                lstep = abs(p5- min)/5;
28404     +                ustep = abs(max-p95)/5;
28405     +                /* No outlying values */;
28406     +                if lstep<=step and ustep<=step then do;
28407     +                   step = abs(MIN-MAX)/&NUMBARS;
28408     +                   START=MIN;
28409     +                   do i=1 to &numbars;
28410     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28411     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28412     +                   end;
28413     +                   %let new_numbars = &numbars;
28414     +                end;
28415     +                else do;
28416     +                   if lstep<=step then do;
28417     +                      step = abs(MIN-P95)/&NUMBARS;
28418     +                      /* Start Histogram at MIN value */
28419     +                      do i=1 to &NUMBARS;
28420     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28421     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28422     +                      end;
28423     +                      /* Make BINS with upper outliers width */
28424     +                      do i=1 to 5;
28425     +                         numbars = &numbars + i;
28426     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28427     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28428     +                      end;
28429     +                       %let new_numbars = %eval(&numbars+5);
28430     +                   end;
28431     +                   else do;
28432     +                      /* Make BINS with lower outliers width */
28433     +                      do i=1 to 5;
28434     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28435     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28436     +                      end;
28437     +                      if ustep<= step then do;
28438     +                         step = abs(P5-MAX)/&NUMBARS;
28439     +                         /* End Histogram at MAX value */
28440     +                         do i=1 to &NUMBARS;
28441     +                            numbars = i+5;
28442     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28443     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28444     +                         end;
28445     +                          %let new_numbars = %eval(&numbars+5);
28446     +                      end;
28447     +                      else do;
28448     +                         do i=1 to &NUMBARS;
28449     +                            numbars = i+5;
28450     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28451     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28452     +                         end;
28453     +                         /* Make BINS with upper outliers width */
28454     +                         do i=1 to 5;
28455     +                            numbars = &numbars+5+i;
28456     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28457     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28458     +                         end;
28459     +                         %let new_numbars = %eval(&numbars+10);
28460     +                      end;
28461     +                   end;
28462     +                end;
28463     +             end;
28464     +             else do;
28465     +                _bounds(1)   = MIN;
28466     +                _midpoint(1) = MIN;
28467     +             end;
28468     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
28469     +          run;
28470     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
28471     +              data &bindata;
28472     +                 merge &bindata _DISCRETEMID(in = _b);
28473     +                 by VARIABLE;
28474     +                 if _b then _DISCRETE=1;
28475     +                 else _DISCRETE=0;
28476     +              run;
28477     +          %end;
28479     +          data _null_;
28480     +             file fref;
28481     +             set &bindata end=eof;
28482     +             array _bounds{&NEW_NUMBARS};
28483     +             array _midpoint{&NEW_NUMBARS};
28484     +             if _n_=1 then
28485     +                put 'proc format;';
28487     +             put 'value ' Format;
28488     +             if _DISCRETE then do;
28489     +                 do i=1 to &numbars;
28490     +                    _MID = _midpoint{i};
28491     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
28492     +                       put _MID '="' _MID '"';
28493     +                 end;
28494     +                 put ';';
28495     +             end;
28496     +             else do;
28497     +                if min eq max then do;
28498     +                   put 'low - high ="' MIN '";';
28499     +                end;
28500     +                else do;
28501     +                   _LB  = MIN;
28502     +                   _MID = _midpoint{1};
28503     +                   _UB  = _bounds{1};
28504     +                   put 'LOW -' _UB '="' _MID '"';
28506     +                   do i=1 to &NEW_NUMBARS-1;
28507     +                      _LB  = _bounds{i};
28508     +                      j=i+1;
28509     +                      _MID = _midpoint{j};
28510     +                      _UB  = _bounds{j};
28511     +                      if (_UB ne .) and (_LB ne _UB) then do;
28512     +                         if _UB>=MAX then
28513     +                            put _LB '-HIGH="' _MID '"';
28514     +                         else
28515     +                            put _LB '-' _UB '="' _MID '"';
28516     +                      end;
28517     +                   end;
28518     +                end;
28519     +             end;
28520     +             put ';';
28521     +             if eof then put 'run;';
28522     +          run;
28524     +          %inc fref;
28526     +          filename fref;
28527     +      %end;
28529     +      data _binneddata / view=_binneddata;
28530     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
28532     +         %let dsid    =%sysfunc(open(&bindata));
28533     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
28534     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
28535     +         %let obs = %sysfunc(fetch(&dsid));
28537     +         %if (&obs=0) %then %do;
28538     +             format
28539     +         %end;
28541     +         %let _count = 0;
28542     +         %do %while(&obs=0);
28543     +             %let _count = %eval(&_count +1);
28544     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
28545     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
28546     +             %do;
28547     +                &_name &_fmtname..
28548     +             %end;
28549     +             %let obs = %sysfunc(fetch(&dsid));
28550     +         %end;
28551     +         %let dsid=%sysfunc(close(&dsid));
28552     +         ;
28553     +      run;
28554     +   %end;
28556     +    %if &bin ne N %then %do;
28557     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28558     +    %end;
28559     +    %else %do;
28560     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28561     +    %end;
28562     +      class %_vars &vars;
28563     +      %if &FREQ ne %then %do;
28564     +          freq &FREQ;
28565     +      %end;
28566     +   run;
28567     +   data &output;
28568     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
28569     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28570     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
28571     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
28572     +      set _temptab;
28573     +      format VALUE 12.3 count;
28574     +      value = inputn(level, 'best12.');
28575     +      keep VARIABLE COUNT PERCENT VALUE;
28576     +   run;
28577     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
28578     +       data &output;
28579     +          set &output(in=_a) _MINMAXDATA;
28580     +          if _a then Pos=2;
28581     +       run;
28582     +       proc sort data=&output out=&output(drop=pos);
28583     +          by VARIABLE POS VALUE;
28584     +          where VALUE ne .;
28585     +       run;
28586     +   %end;
28587     +   proc datasets lib=work nolist mt=(DATA VIEW);
28588     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
28589     +   run;
28590     +   quit;
28592     +   %doend:
28593     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
28594      filename vdist;
MPRINT(EM_DIAGRAM):   filename vdist;
NOTE: Fileref VDIST has been deassigned.
28595      %let em_nodeid = Filter;
28596      %var_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, FREQ=, BIN=Y, NUMBARS= 16);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:44 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28597     +%macro _vars;
28598     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
28599      %var_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, STAT=_STAT, BIN=Y, BINDATA=_bindata, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:50 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28600     +%macro _vars;
28601     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
28602      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28603      * Filter: Creating Bar Chart Table;
MPRINT(EM_DIAGRAM):   * Filter: Creating Bar Chart Table;
28604      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28605      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):   filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
28606      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
28607     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
28608     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
28609     +       %put *** Statistics for Class variables ***;
28610     +       %put >>> DATA= &data  OUTPUT= &output;
28611     +       %put >>> VAR= &vars;
28612     +       %put >>> WHERE=  &where;
28613     +       %put >>> FREQ=  &freq;
28614     +   %end;
28616     +      /* Process metadata data set */
28617     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
28618     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
28619     +       %let FREQ=;
28620     +       %let _nobs=0;
28621     +       data _null;
28622     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
28623     +          if eof then call symput('_nobs', put(_N_, best.));
28624     +       run;
28625     +       %if "&_nobs" ne "0" %then %do;
28626     +           data _null_;
28627     +              file _mac;
28628     +              length _VARS $80; retain _vars;
28629     +              if _n_ =1 then put '%macro _vars;';
28630     +              set &metadata end=eof;
28631     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
28632     +              if ROLE='FREQ' then call symput('FREQ', NAME);
28633     +              else do;
28634     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
28635     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
28636     +                 else do;
28637     +                    put _Vars;
28638     +                    _vars = strip(NAME);
28639     +                 end;
28640     +              end;
28641     +              if eof then do;
28642     +                 put _Vars;
28643     +                 put '%mend _vars;';
28644     +              end;
28645     +           run;
28646     +       %end;
28647     +       %else %do;
28648     +           data _null_;
28649     +              file _mac;
28650     +              put '%macro _vars;';
28651     +              put '%mend _vars;';
28652     +           run;
28653     +       %end;
28654     +   %end;
28655     +   %else %do;
28656     +       data _null_;
28657     +          file _mac;
28658     +          put '%macro _vars;';
28659     +          put '%mend _vars;';
28660     +       run;
28661     +   %end;
28662     +   %inc _mac;
28663     +   filename _mac;
28665     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
28667     +   /* Check if FREQ variable is in the data set */
28668     +   %if &freq ne %then %do;
28669     +       data _null_;
28670     +          dsid = open("&data");
28671     +          if dsid>0 then do;
28672     +               if varnum(dsid, "&FREQ")<1 then
28673     +                  call symput('FREQ', '');
28674     +               dsid = close(dsid);
28675     +          end;
28676     +       run;
28677     +   %end;
28679     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28680     +      class %_Vars &vars;
28681     +      %if &FREQ ne %then %do;
28682     +          freq &FREQ;
28683     +      %end;
28684     +      %if %bquote(&WHERE) ne %then %do;
28685     +            where &WHERE;
28686     +      %end;
28687     +   run;
28688     +   proc sort data=_tempclass;
28689     +      by VARIABLE;
28690     +   run;
28691     +   data &output;
28692     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28693     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
28694     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
28695     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
28696     +      set _tempclass;
28697     +      format COUNT;
28698     +      keep VARIABLE COUNT PERCENT VALUE;
28699     +   run;
28700     +   proc means data=&output noprint;
28701     +      class VARIABLE;
28702     +      var COUNT;
28703     +      output out=&STAT N=NUMCAT;
28704     +   run;
28705     +   data &STAT;
28706     +      set &STAT;
28707     +      where _TYPE_=1;
28708     +      KEEP VARIABLE NUMCAT;
28709     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
28710     +      format NUMCAT 8.;
28711     +   run;
28712     +   proc datasets lib=work nolist;
28713     +      delete _tempclass;
28714     +   run;
28715     +   quit;
28717     +   %doend:
28718     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
28720      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
28721      %let em_nodeid = Filter;
28722      %class_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:50 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28723     +%macro _vars;
28724     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
28725      %class_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 04:09:44 PM,
      Last Modified=Wednesday, December 30, 2015 04:09:50 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6272_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28726     +%macro _vars;
28727     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
28728      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28729      * Filter: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Filter: Computing metadata for TRAIN data;
28730      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Filter_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Filter_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Filter_TRAIN out=WORK.M3MS8EL4 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MS8EL4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MS8EL4(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MS8EL4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MS8EL4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M13XLSEF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PB8NI9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   set WORK.M13XLSEF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Filter_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Filter";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="M_FILTER" then do;
MPRINT(EM_DIAGRAM):   role ="REJECTED";
MPRINT(EM_DIAGRAM):   level = "BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:51" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 30, 2015
Time:                16:09:51
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GSBZI6 "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GSBZI6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
