*------------------------------------------------------------*
User:                D059331
Date:                17. Dezember 2015
Time:                13.07 Uhr
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "17. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.07 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                17. Dezember 2015
Time:                13.07 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3GKZOEY "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3GKZOEY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "17. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.07 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "17. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.07 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20407      proc freq data=EMWS1.Stat_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Stat_VariableSet noprint;
20408      table ROLE*LEVEL/out=WORK.StatMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.StatMETA;
20409      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.STATMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
20410      proc print data=WORK.StatMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatMETA label noobs;
20411      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20412      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20413      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20414      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20415      run;
 
NOTE: There were 4 observations read from the data set WORK.STATMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
20416      title10;
MPRINT(EM_DIAGRAM):   title10;
20417      data WORK.M3FELMC_;
MPRINT(EM_DIAGRAM):    data WORK.M3FELMC_;
20418      set WORK.M3FELMC_;
MPRINT(EM_DIAGRAM):   set WORK.M3FELMC_;
20419      where((role in('TARGET' 'FREQ' 'INPUT') and use in('D','Y')) or (role = 'REJECTED' and use = 'Y'));
MPRINT(EM_DIAGRAM):   where((role in('TARGET' 'FREQ' 'INPUT') and use in('D','Y')) or (role = 'REJECTED' and use = 'Y'));
20420      if ROLE = 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if ROLE = 'REJECTED' then role = 'INPUT';
20421      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M3FELMC_.
      WHERE (role in ('FREQ', 'INPUT', 'TARGET') and use in ('D', 'Y')) or ((role='REJECTED') and (use='Y'));
NOTE: The data set WORK.M3FELMC_ has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20422      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20423      * Stat: Determining Analysis Variables;
MPRINT(EM_DIAGRAM):   * Stat: Determining Analysis Variables;
20424      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20425      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20426      * Stat: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Stat: DMDBClass Macro ;
20427      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20428      %macro DMDBClass;
20429          EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC)
20430         HasChildren(ASC)
20431      %mend DMDBClass;
20432      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20433      * Stat: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Stat: DMDBVar Macro ;
20434      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20435      %macro DMDBVar;
20436          ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20437         PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor
20438         PremiumsinLOBWorkComp
20439      %mend DMDBVar;
20440      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20441      * Stat: Create DMDB;
MPRINT(EM_DIAGRAM):   * Stat: Create DMDB;
20442      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20443      proc dmdb batch data=EMWS1.Ids_DATA
20444      dmdbcat=WORK.Stat_DMDB
20445      classout=WORK.StatDMDBClass
20446      varout=WORK.StatDMDBVar
20447      maxlevel = 513
20448      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA dmdbcat=WORK.Stat_DMDB classout=WORK.StatDMDBClass varout=WORK.StatDMDBVar maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20449      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC) HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20450      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK.STATDMDBCLASS has 40 observations and 9 variables.
NOTE: The data set WORK.STATDMDBVAR has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20452      quit;
20453      *--- end code ---*;
 
20454      data WORK.StatDMDBVar;
MPRINT(EM_DIAGRAM):    data WORK.StatDMDBVar;
20455      set WORK.StatDMDBVar(keep=Name Mean Std);
MPRINT(EM_DIAGRAM):   set WORK.StatDMDBVar(keep=Name Mean Std);
20456      CV = Std/Mean;
MPRINT(EM_DIAGRAM):   CV = Std/Mean;
20457      Keep NAME CV;
MPRINT(EM_DIAGRAM):   Keep NAME CV;
20458      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.STATDMDBVAR.
NOTE: The data set WORK.STATDMDBVAR has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20459      proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBVar force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBVar force;
20460      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATDMDBVAR to EMWS1.STAT_WORTH.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 9 observations read from the data set WORK.STATDMDBVAR.
NOTE: The data set EMWS1.STAT_WORTH has 9 observations and 2 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20461      proc sort data=WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatDMDBClass;
20462      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATDMDBCLASS.
NOTE: The data set WORK.STATDMDBCLASS has 40 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20464      proc stdize data=WORK.StatDMDBClass out=_null_ outstat=WORK.StatDMDBClass(RENAME=(FREQUENCY=STAT));
MPRINT(EM_DIAGRAM):   proc stdize data=WORK.StatDMDBClass out=_null_ outstat=WORK.StatDMDBClass(RENAME=(FREQUENCY=STAT));
20465      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20466      var FREQUENCY;
MPRINT(EM_DIAGRAM):   var FREQUENCY;
20467      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATDMDBCLASS.
NOTE: The data set WORK.STATDMDBCLASS has 32 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
20468      data WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):   data WORK.StatDMDBClass;
20469      retain mean;
MPRINT(EM_DIAGRAM):   retain mean;
20470      set WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):   set WORK.StatDMDBClass;
20471      where _TYPE_ in('LOCATION','SCALE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION','SCALE');
20472      if _TYPE_='LOCATION' then mean=STAT;
MPRINT(EM_DIAGRAM):   if _TYPE_='LOCATION' then mean=STAT;
20473      else do;
MPRINT(EM_DIAGRAM):   else do;
20474      if MEAN ne 0 then CV=STAT/abs(MEAN);
MPRINT(EM_DIAGRAM):   if MEAN ne 0 then CV=STAT/abs(MEAN);
20475      else CV=STAT;
MPRINT(EM_DIAGRAM):   else CV=STAT;
20476      output;
MPRINT(EM_DIAGRAM):   output;
20477      end;
MPRINT(EM_DIAGRAM):   end;
20478      keep NAME CV;
MPRINT(EM_DIAGRAM):   keep NAME CV;
20479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.STATDMDBCLASS.
      WHERE _TYPE_ in ('LOCATION', 'SCALE');
NOTE: The data set WORK.STATDMDBCLASS has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20480      proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBClass force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBClass force;
20481      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATDMDBCLASS to EMWS1.STAT_WORTH.
NOTE: There were 4 observations read from the data set WORK.STATDMDBCLASS.
NOTE: 4 observations added.
NOTE: The data set EMWS1.STAT_WORTH has 13 observations and 2 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20482      proc sort data=EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_WORTH;
20483      by descending CV;
MPRINT(EM_DIAGRAM):   by descending CV;
20484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.STAT_WORTH.
NOTE: The data set EMWS1.STAT_WORTH has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20485      data EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_WORTH;
20486      format STATVAR 6.0;
MPRINT(EM_DIAGRAM):   format STATVAR 6.0;
20487      set EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_WORTH;
20488      if _N_<= 1000 then STATVAR=1;
MPRINT(EM_DIAGRAM):   if _N_<= 1000 then STATVAR=1;
20489      else STATVAR=0;
MPRINT(EM_DIAGRAM):   else STATVAR=0;
20490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.STAT_WORTH.
NOTE: The data set EMWS1.STAT_WORTH has 13 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20491      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20492      * Stat: Counting Levels;
MPRINT(EM_DIAGRAM):   * Stat: Counting Levels;
20493      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20494      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
20495      create view WORK.Stat_distinct as select distinct CustomerIdentity from EMWS1.Ids_DATA;
MPRINT(EM_DIAGRAM):   create view WORK.Stat_distinct as select distinct CustomerIdentity from EMWS1.Ids_DATA;
NOTE: SQL view WORK.STAT_DISTINCT has been defined.
20496      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20497      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
20498      reset noprint;
MPRINT(EM_DIAGRAM):   reset noprint;
20499      select count(*) into :_tmpcount from WORK.Stat_distinct;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpcount from WORK.Stat_distinct;
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
20500      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
20501      proc sort data=WORK.Stat_count NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Stat_count NOTHREADS;
20502      by NAME ROLE DATA;
MPRINT(EM_DIAGRAM):   by NAME ROLE DATA;
20503      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.STAT_COUNT.
NOTE: The data set WORK.STAT_COUNT has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20504      proc print data=WORK.Stat_count(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Stat_count(obs=500) label noobs;
20505      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,       NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" COUNT = "Frequency Count" ROLE = "Role";
20506      var NAME ROLE COUNT;
MPRINT(EM_DIAGRAM):   var NAME ROLE COUNT;
20507      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_varLevels_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Variable Levels Summary";
20508      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
20509      run;
 
NOTE: There were 1 observations read from the data set WORK.STAT_COUNT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20510      title9;
MPRINT(EM_DIAGRAM):   title9;
20511      title10;
MPRINT(EM_DIAGRAM):   title10;
20512      proc sort data=EMWS1.Stat_WORTH nodupkey out=WORK.Stat_SELVAR(keep=Name StatVar);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_WORTH nodupkey out=WORK.Stat_SELVAR(keep=Name StatVar);
20513      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20514      where statvar=1;
MPRINT(EM_DIAGRAM):   where statvar=1;
20515      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.STAT_WORTH.
      WHERE statvar=1;
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.STAT_SELVAR has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20516      proc sort data=WORK.M21KHHAD;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M21KHHAD;
20517      by name;
MPRINT(EM_DIAGRAM):   by name;
20518      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.M21KHHAD.
NOTE: The data set WORK.M21KHHAD has 14 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20519      data WORK.Stat_analysisMeta;
MPRINT(EM_DIAGRAM):   data WORK.Stat_analysisMeta;
20520      merge WORK.M21KHHAD WORK.Stat_SELVAR(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.M21KHHAD WORK.Stat_SELVAR(in=_a);
20521      by name;
MPRINT(EM_DIAGRAM):   by name;
20522      if _a then STATVAR = 1;
MPRINT(EM_DIAGRAM):   if _a then STATVAR = 1;
20523      else if ROLE in('INPUT', 'REJECTED') and REPORT ne 'Y' then delete;
MPRINT(EM_DIAGRAM):   else if ROLE in('INPUT', 'REJECTED') and REPORT ne 'Y' then delete;
20524      if REPORT eq 'Y' then STATVAR = 1;
MPRINT(EM_DIAGRAM):   if REPORT eq 'Y' then STATVAR = 1;
20525      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.M21KHHAD.
NOTE: There were 13 observations read from the data set WORK.STAT_SELVAR.
NOTE: The data set WORK.STAT_ANALYSISMETA has 14 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20526      data WORK.M0BXZ8QB;
MPRINT(EM_DIAGRAM):    data WORK.M0BXZ8QB;
20527      set WORK.M0BXZ8QB;
MPRINT(EM_DIAGRAM):   set WORK.M0BXZ8QB;
20528      where(use = 'Y' or Report='Y' or (role in('TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
20529      if ROLE = 'SEGMENT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE = 'SEGMENT' then delete;
20530      else if ROLE ^in('FREQ','TARGET') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if ROLE ^in('FREQ','TARGET') then role = 'INPUT';
20531      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M0BXZ8QB.
      WHERE (use='Y') or (Report='Y') or (role in ('FREQ', 'INPUT', 'PREDICT', 'RESIDUAL', 'TARGET') and (use='D'));
NOTE: The data set WORK.M0BXZ8QB has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20532      data WORK.M2_W5KFR;
MPRINT(EM_DIAGRAM):    data WORK.M2_W5KFR;
20533      set WORK.M2_W5KFR;
MPRINT(EM_DIAGRAM):   set WORK.M2_W5KFR;
20534      where(use = 'Y' or Report='Y' or (role in('SEGMENT', 'TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('SEGMENT', 'TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
20535      if ROLE ne 'FREQ' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then role = 'INPUT';
20536      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M2_W5KFR.
      WHERE (use='Y') or (Report='Y') or (role in ('FREQ', 'INPUT', 'PREDICT', 'RESIDUAL', 'SEGMENT', 'TARGET') and (use='D'));
NOTE: The data set WORK.M2_W5KFR has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20537      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20538      * Stat: Computing Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Stat: Computing Statistics for Interval Variables;
20539      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20540      proc dmdb data=EMWS1.Ids_DATA nonorm maxlevel=513
20541      varout=work._DMDBVAR(RENAME=(NAME=VARIABLE))
20542      classout=WORK.StatCLASS(drop=NMISSPERCENT rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT))
20543      ;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS1.Ids_DATA nonorm maxlevel=513 varout=work._DMDBVAR(RENAME=(NAME=VARIABLE)) classout=WORK.StatCLASS(drop=NMISSPERCENT rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT)) ;
20544      var
20545      ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20546      PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor
20547      PremiumsinLOBWorkComp
20548      ;
MPRINT(EM_DIAGRAM):   var ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp ;
20549      class
20550      EducationalDegree FirstPolicyYear GeographicLiving HasChildren
20551      ;
MPRINT(EM_DIAGRAM):   class EducationalDegree FirstPolicyYear GeographicLiving HasChildren ;
20552      ;
MPRINT(EM_DIAGRAM):   ;
20553      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._DMDBVAR has 9 observations and 9 variables.
NOTE: The data set WORK.STATCLASS has 40 observations and 8 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20554      proc stdize data = EMWS1.Ids_DATA out=_null_ outstat=work._STDIZE add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=(0 5 50 95 100);
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Ids_DATA out=_null_ outstat=work._STDIZE add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=(0 5 50 95 100);
20555      var
20556      ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20557      PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor
20558      PremiumsinLOBWorkComp
20559      ;
MPRINT(EM_DIAGRAM):   var ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp ;
20560      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._STDIZE has 13 observations and 10 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
20561      proc transpose data=work._STDIZE out=work._TRANSSTDIZE(drop=_LABEL_ rename=(_NAME_=VARIABLE));
MPRINT(EM_DIAGRAM):   proc transpose data=work._STDIZE out=work._TRANSSTDIZE(drop=_LABEL_ rename=(_NAME_=VARIABLE));
20562      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
20563      where _TYPE_='P50';
MPRINT(EM_DIAGRAM):   where _TYPE_='P50';
20564      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK._STDIZE.
      WHERE _TYPE_='P50';
NOTE: The data set WORK._TRANSSTDIZE has 9 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20565      proc sort data=work._TRANSSTDIZE;
MPRINT(EM_DIAGRAM):   proc sort data=work._TRANSSTDIZE;
20566      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
20567      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._TRANSSTDIZE.
NOTE: The data set WORK._TRANSSTDIZE has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20568      proc sort data=work._DMDBVAR;
MPRINT(EM_DIAGRAM):   proc sort data=work._DMDBVAR;
20569      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
20570      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._DMDBVAR.
NOTE: The data set WORK._DMDBVAR has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20571      data WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):   data WORK.StatINTERVAL;
20572      merge work._TRANSSTDIZE work._DMDBVAR;
MPRINT(EM_DIAGRAM):   merge work._TRANSSTDIZE work._DMDBVAR;
20573      format N NMISS 8. MIN MAX P50 MEAN STD SKEWNESS KURTOSIS BEST8.3;
MPRINT(EM_DIAGRAM):   format N NMISS 8. MIN MAX P50 MEAN STD SKEWNESS KURTOSIS BEST8.3;
20574      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
20575      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 9 observations read from the data set WORK._TRANSSTDIZE.
NOTE: There were 9 observations read from the data set WORK._DMDBVAR.
NOTE: The data set WORK.STATINTERVAL has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20576      proc sort data=WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatCLASS;
20577      by Variable Level;
MPRINT(EM_DIAGRAM):   by Variable Level;
20578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.STATCLASS has 40 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 13 observations read from the data set WORK._STDIZE.
NOTE: The data set EMWS1.STAT_TRAINPCTLS has 13 observations and 10 variables.
20579      data colorindex;
MPRINT(EM_DIAGRAM):    data colorindex;
20580      retain LevelIndex 0;
MPRINT(EM_DIAGRAM):   retain LevelIndex 0;
20581      set WORK.StatCLASS(keep=Variable Level);
MPRINT(EM_DIAGRAM):   set WORK.StatCLASS(keep=Variable Level);
20582      by variable level;
MPRINT(EM_DIAGRAM):   by variable level;
20583      if first.variable then LevelIndex = 0;
MPRINT(EM_DIAGRAM):   if first.variable then LevelIndex = 0;
20584      if first.level then LevelIndex + 1;
MPRINT(EM_DIAGRAM):   if first.level then LevelIndex + 1;
20585      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.COLORINDEX has 40 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20586      data WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    data WORK.StatCLASS;
20587      merge WORK.StatCLASS(in=_a) colorindex;
MPRINT(EM_DIAGRAM):   merge WORK.StatCLASS(in=_a) colorindex;
20588      by variable level;
MPRINT(EM_DIAGRAM):   by variable level;
20589      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
20590      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATCLASS.
NOTE: There were 40 observations read from the data set WORK.COLORINDEX.
NOTE: The data set WORK.STATCLASS has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20591      data WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):    data WORK.StatINTERVAL;
20592      length DATAROLE $20;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
20593      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
20594      set WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):   set WORK.StatINTERVAL;
20595      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.STATINTERVAL.
NOTE: The data set WORK.STATINTERVAL has 9 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20596      proc append base=EMWS1.Stat_INTERVAL data=WORK.StatINTERVAL force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_INTERVAL data=WORK.StatINTERVAL force;
20597      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATINTERVAL to EMWS1.STAT_INTERVAL.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 9 observations read from the data set WORK.STATINTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20598      data WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    data WORK.StatCLASS;
20599      length DATAROLE $20;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
20600      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
20601      set WORK.StatCLASS;
MPRINT(EM_DIAGRAM):   set WORK.StatCLASS;
20602      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.STATCLASS has 40 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20603      proc append base=EMWS1.Stat_CLASS data=WORK.StatCLASS force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_CLASS data=WORK.StatCLASS force;
20604      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATCLASS to EMWS1.STAT_CLASS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 40 observations read from the data set WORK.STATCLASS.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20605      proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
20606      by name;
MPRINT(EM_DIAGRAM):   by name;
20607      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.TEMPVARIABLE has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20608      proc sort data=EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS;
20609      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
20610      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20611      data EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASS;
20612      merge EMWS1.Stat_CLASS(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASS(in=_a) tempVariable;
20613      by variable;
MPRINT(EM_DIAGRAM):   by variable;
20614      if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
20615      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
20616      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: There were 14 observations read from the data set WORK.TEMPVARIABLE.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20617      run;
MPRINT(EM_DIAGRAM):    run;
20618      proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
20619      by name;
MPRINT(EM_DIAGRAM):   by name;
20620      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.TEMPVARIABLE has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20621      proc sort data=EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_INTERVAL;
20622      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
20623      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20624      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_INTERVAL;
20625      merge EMWS1.Stat_INTERVAL(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_INTERVAL(in=_a) tempVariable;
20626      by variable;
MPRINT(EM_DIAGRAM):   by variable;
20627      if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
20628      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
20629      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: There were 14 observations read from the data set WORK.TEMPVARIABLE.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20630      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS1 nolist;
20631      modify Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   modify Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
20632      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Variable = "Variable";
20633      label Variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
20634      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
20635      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
20636      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
20637      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label p50 = "Median";
20638      label p50 = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
20639      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
20640      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
20641      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
20642      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
20643      run;
 
NOTE: MODIFY was successful for EMWS1.STAT_INTERVAL.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
20644      proc sort data=EMWS1.Stat_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS NOTHREADS;
20645      by DATAROLE ROLE Variable descending COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable descending COUNT;
20646      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20647      data WORK.StatCLASS(keep=DATAROLE Variable ROLE Numcat Nmiss Mode ModePct Mode2 Mode2Pct);
MPRINT(EM_DIAGRAM):   data WORK.StatCLASS(keep=DATAROLE Variable ROLE Numcat Nmiss Mode ModePct Mode2 Mode2Pct);
20648      set EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASS;
20649      length Mode Mode2 $32;
MPRINT(EM_DIAGRAM):   length Mode Mode2 $32;
20650      retain NMiss 0 ModePct 0 Mode2Pct 0 Mode '' Mode2 '';
MPRINT(EM_DIAGRAM):   retain NMiss 0 ModePct 0 Mode2Pct 0 Mode '' Mode2 '';
20651      by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
20652      if first.DATAROLE or first.variable then do;
MPRINT(EM_DIAGRAM):   if first.DATAROLE or first.variable then do;
20653      Numcat = 1;
MPRINT(EM_DIAGRAM):   Numcat = 1;
20654      NMiss = 0;
MPRINT(EM_DIAGRAM):   NMiss = 0;
20655      Mode = strip(LEVEL);
MPRINT(EM_DIAGRAM):   Mode = strip(LEVEL);
20656      ModePct = PERCENT;
MPRINT(EM_DIAGRAM):   ModePct = PERCENT;
20657      Mode2 = '';
MPRINT(EM_DIAGRAM):   Mode2 = '';
20658      Mode2Pct = 0;
MPRINT(EM_DIAGRAM):   Mode2Pct = 0;
20659      end;
MPRINT(EM_DIAGRAM):   end;
20660      else Numcat +1;
MPRINT(EM_DIAGRAM):   else Numcat +1;
20661      if Numcat =2 then do;
MPRINT(EM_DIAGRAM):   if Numcat =2 then do;
20662      Mode2 = strip(LEVEL);
MPRINT(EM_DIAGRAM):   Mode2 = strip(LEVEL);
20663      Mode2Pct = PERCENT;
MPRINT(EM_DIAGRAM):   Mode2Pct = PERCENT;
20664      end;
MPRINT(EM_DIAGRAM):   end;
20665      if NRAW=. and CRAW='' then NMiss= COUNT;
MPRINT(EM_DIAGRAM):   if NRAW=. and CRAW='' then NMiss= COUNT;
20666      if last.DATAROLE or last.variable then output;
MPRINT(EM_DIAGRAM):   if last.DATAROLE or last.variable then output;
20667      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set WORK.STATCLASS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20668      %let _cn = %sysfunc(getoption(CENTER));
20669      %let _nb = %sysfunc(getoption(NUMBER));
20670      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
20671      title;
MPRINT(EM_DIAGRAM):   title;
20672      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20673      proc print data=WORK.StatCLASS(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatCLASS(obs=500) label noobs;
20674      var DATAROLE VARIABLE ROLE NUMCAT NMISS Mode ModePct Mode2 Mode2Pct;
MPRINT(EM_DIAGRAM):   var DATAROLE VARIABLE ROLE NUMCAT NMISS Mode ModePct Mode2 Mode2Pct;
20675      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" NMISS =
20676         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel,  NOQUOTE))" MODE = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,     NOQUOTE))" MODEPCT = "%sysfunc(sasmsg(sashelp.dmine, rpt_modepct_vlabel,  NOQUOTE))" MODE2 =
20677         "%sysfunc(sasmsg(sashelp.dmine, rpt_mode2_vlabel,     NOQUOTE))" MODE2PCT = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode2pct_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" NUMCAT = "Number of Levels" NMISS = "Missing" MODE = "Mode" MODEPCT = "Mode Percentage" MODE2 = "Mode2" MODE2PCT = "Mode2 Percentage";
20678      format ModePct Mode2Pct 5.2;
MPRINT(EM_DIAGRAM):   format ModePct Mode2Pct 5.2;
20679      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
20680      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Class Variable Summary Statistics";
20681      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
20682      run;
 
NOTE: There were 4 observations read from the data set WORK.STATCLASS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20683      title9;
MPRINT(EM_DIAGRAM):   title9;
20684      title10;
MPRINT(EM_DIAGRAM):   title10;
20685      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
20686      data WORK.StatINTERVALSUMMARY;
MPRINT(EM_DIAGRAM):    data WORK.StatINTERVALSUMMARY;
20687      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
20688      length ROLE $32;
MPRINT(EM_DIAGRAM):   length ROLE $32;
20689      if Variable = "ClaimsRate" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   if Variable = "ClaimsRate" then ROLE="INPUT";
20690      else
20691      if Variable = "CustomerAge" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CustomerAge" then ROLE="INPUT";
20692      else
20693      if Variable = "CustomerIdentity" then ROLE="ID";
MPRINT(EM_DIAGRAM):   else if Variable = "CustomerIdentity" then ROLE="ID";
20694      else
20695      if Variable = "CustomerMonetaryValue" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CustomerMonetaryValue" then ROLE="INPUT";
20696      else
20697      if Variable = "GrossMonthlySalary" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "GrossMonthlySalary" then ROLE="INPUT";
20698      else
20699      if Variable = "PremiumsinLOBHealth" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "PremiumsinLOBHealth" then ROLE="INPUT";
20700      else
20701      if Variable = "PremiumsinLOBHousehold" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "PremiumsinLOBHousehold" then ROLE="INPUT";
20702      else
20703      if Variable = "PremiumsinLOBLife" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "PremiumsinLOBLife" then ROLE="INPUT";
20704      else
20705      if Variable = "PremiumsinLOBMotor" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "PremiumsinLOBMotor" then ROLE="INPUT";
20706      else
20707      if Variable = "PremiumsinLOBWorkComp" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "PremiumsinLOBWorkComp" then ROLE="INPUT";
20708      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set WORK.STATINTERVALSUMMARY has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20709      proc sort data=WORK.StatINTERVALSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatINTERVALSUMMARY NOTHREADS;
20710      by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
20711      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.STATINTERVALSUMMARY.
NOTE: The data set WORK.STATINTERVALSUMMARY has 9 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20712      %let _cn = %sysfunc(getoption(CENTER));
20713      %let _nb = %sysfunc(getoption(NUMBER));
20714      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
20715      title;
MPRINT(EM_DIAGRAM):   title;
20716      proc print data=WORK.StatINTERVALSUMMARY(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatINTERVALSUMMARY(obs=500) label noobs;
20717      var Variable ROLE MEAN STD N NMISS MIN P50 MAX SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   var Variable ROLE MEAN STD N NMISS MIN P50 MAX SKEWNESS KURTOSIS;
20718      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
20719      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Interval Variable Summary Statistics";
20720      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
20721      run;
 
NOTE: There were 9 observations read from the data set WORK.STATINTERVALSUMMARY.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20722      title9;
MPRINT(EM_DIAGRAM):   title9;
20723      title10;
MPRINT(EM_DIAGRAM):   title10;
20724      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
20725      proc sort data=WORK.M21KHHAD;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M21KHHAD;
20726      by name;
MPRINT(EM_DIAGRAM):   by name;
20727      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20728      proc means data=EMWS1.Stat_CLASS noprint;
MPRINT(EM_DIAGRAM):    proc means data=EMWS1.Stat_CLASS noprint;
20729      class DATAROLE Variable;
MPRINT(EM_DIAGRAM):   class DATAROLE Variable;
20730      var PERCENT;
MPRINT(EM_DIAGRAM):   var PERCENT;
20731      output out=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   output out=EMWS1.Stat_CLASSPLOT;
20732      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 50 observations and 6 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
20733      proc transpose data=EMWS1.Stat_CLASSPLOT out=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Stat_CLASSPLOT out=EMWS1.Stat_CLASSPLOT;
20734      where _type_=3 and _STAT_ = 'STD';
MPRINT(EM_DIAGRAM):   where _type_=3 and _STAT_ = 'STD';
20735      var PERCENT;
MPRINT(EM_DIAGRAM):   var PERCENT;
20736      id _STAT_;
MPRINT(EM_DIAGRAM):   id _STAT_;
20737      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
20738      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE (_type_=3) and (_STAT_='STD');
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20739      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
20740      by DATAROLE descending STD;
MPRINT(EM_DIAGRAM):   by DATAROLE descending STD;
20741      where STD ne .;
MPRINT(EM_DIAGRAM):   where STD ne .;
20742      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE STD not = .;
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20743      data EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable STD OrderedInput);
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable STD OrderedInput);
20744      label OrderedInput = "%sysfunc(sasmsg(sashelp.dmine, rpt_orderedInput_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
20745      format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
20746      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_pctVariability_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Percent Variability";
20747      retain OrderedInput 0;
MPRINT(EM_DIAGRAM):   retain OrderedInput 0;
20748      set EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASSPLOT;
20749      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
20750      if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
20751      else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
20752      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20753      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
20754      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
20755      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20756      data EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT;
20757      merge EMWS1.Stat_CLASSPLOT(in=_a) WORK.M21KHHAD(rename=(NAME=VARIABLE) Keep=NAME ROLE LABEL REPORT);
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASSPLOT(in=_a) WORK.M21KHHAD(rename=(NAME=VARIABLE) Keep=NAME ROLE LABEL REPORT);
20758      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
20759      if _a and (OrderedInput<100 or Report='Y') then output;
MPRINT(EM_DIAGRAM):   if _a and (OrderedInput<100 or Report='Y') then output;
20760      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: There were 14 observations read from the data set WORK.M21KHHAD.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20761      data temp;
MPRINT(EM_DIAGRAM):   data temp;
20762      set EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASSPLOT;
20763      where DATAROLE='TRAIN';
MPRINT(EM_DIAGRAM):   where DATAROLE='TRAIN';
20764      if OrderedInput<21 then plot = 1;
MPRINT(EM_DIAGRAM):   if OrderedInput<21 then plot = 1;
20765      else plot=0;
MPRINT(EM_DIAGRAM):   else plot=0;
20766      if LABEL = "" then LABEL = Variable;
MPRINT(EM_DIAGRAM):   if LABEL = "" then LABEL = Variable;
20767      keep Variable Label plot;
MPRINT(EM_DIAGRAM):   keep Variable Label plot;
20768      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE DATAROLE='TRAIN';
NOTE: The data set WORK.TEMP has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20769      data EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT;
20770      merge EMWS1.Stat_CLASSPLOT temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASSPLOT temp;
20771      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
20772      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine,  rpt_datarole_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,          NOQUOTE))" PLOT = "%sysfunc(sasmsg(sashelp.dmine, rpt_plot_vlabel,           NOQUOTE))" REPORT =
20773         "%sysfunc(sasmsg(sashelp.dmine, meta_report_vlabel,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" PLOT = "Plot" REPORT = "Report";
20774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20775      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
20776      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
20777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20778      proc sort data=EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS;
20779      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
20780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20781      data EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASS;
20782      merge EMWS1.Stat_CLASS(drop=NRAW CRAW) EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable Plot);
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASS(drop=NRAW CRAW) EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable Plot);
20783      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
20784      if plot eq . then delete;
MPRINT(EM_DIAGRAM):   if plot eq . then delete;
20785      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,       NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel,          NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,           NOQUOTE))"
20785    ! COUNT =
20786         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,          NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,          NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,        NOQUOTE))" PLOT =
20787         "%sysfunc(sasmsg(sashelp.dmine, rpt_plot_vlabel,           NOQUOTE))" LEVELINDEX = "%sysfunc(sasmsg(sashelp.dmine, rpt_levelIndex_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" LEVEL = "Level" TYPE = "Type" COUNT = "Frequency Count" ROLE = "Role" PERCENT = "Percent" PLOT = "Plot" LEVELINDEX = "Level Index";
20788      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.STAT_CLASS.
NOTE: There were 4 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASS has 40 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20789      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):    data EMWS1.Stat_INTERVAL;
20790      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
20791      label NMiss = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" absCV = "%sysfunc(sasmsg(sashelp.dmine, rpt_absCV_vlabel,   NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,      NOQUOTE))" Sign =
20792         "%sysfunc(sasmsg(sashelp.dmine, rpt_sign_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMiss = "Missing" absCV = "Abs C.V." CV = "Coefficient of Variation" Sign = "Sign";
20793      if MEAN ne . then do;
MPRINT(EM_DIAGRAM):   if MEAN ne . then do;
20794      CV = STD/MEAN;
MPRINT(EM_DIAGRAM):   CV = STD/MEAN;
20795      absCV = abs(CV);
MPRINT(EM_DIAGRAM):   absCV = abs(CV);
20796      if absCV < 0 then Sign = '-';
MPRINT(EM_DIAGRAM):   if absCV < 0 then Sign = '-';
20797      else Sign = '+';
MPRINT(EM_DIAGRAM):   else Sign = '+';
20798      absCV = abs(absCV);
MPRINT(EM_DIAGRAM):   absCV = abs(absCV);
20799      end;
MPRINT(EM_DIAGRAM):   end;
20800      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20801      proc sort data = EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Stat_INTERVAL;
20802      by DATAROLE descending absCV;
MPRINT(EM_DIAGRAM):   by DATAROLE descending absCV;
20803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20804      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_INTERVAL;
20805      retain OrderedInput;
MPRINT(EM_DIAGRAM):   retain OrderedInput;
20806      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
20807      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
20808      label OrderedInput = "%sysfunc(sasmsg(sashelp.dmine, rpt_orderedInput_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
20809      format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
20810      if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
20811      else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
20812      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 9 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20813      proc sort data=WORK.M21KHHAD;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M21KHHAD;
20814      by name;
MPRINT(EM_DIAGRAM):   by name;
20815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20816      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20817      set EMWS1.Stat_CROSSTAB end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CROSSTAB end=eof;
20818      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
20819      retain string;
MPRINT(EM_DIAGRAM):   retain string;
20820      by key;
MPRINT(EM_DIAGRAM):   by key;
20821      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
20822      call execute("ods listing close;");
MPRINT(EM_DIAGRAM):   call execute("ods listing close;");
20823      call execute("ods output crosstabfreqs=_tempcross;");
MPRINT(EM_DIAGRAM):   call execute("ods output crosstabfreqs=_tempcross;");
20824      call execute("proc freq data=EMWS1.Ids_DATA addnames;");
MPRINT(EM_DIAGRAM):   call execute("proc freq data=EMWS1.Ids_DATA addnames;");
20825      end;
MPRINT(EM_DIAGRAM):   end;
20826      if first.key then string = '    table ';
MPRINT(EM_DIAGRAM):   if first.key then string = '    table ';
20827      string = trim(string)!!' '!!strip(term);
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(term);
20828      if ^last.key then string = trim(string)!!'*';
MPRINT(EM_DIAGRAM):   if ^last.key then string = trim(string)!!'*';
20829      else call execute(string!!'/missing;');
MPRINT(EM_DIAGRAM):   else call execute(string!!'/missing;');
20830      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
20831      call execute("run;");
MPRINT(EM_DIAGRAM):   call execute("run;");
20832      call execute("ods listing;");
MPRINT(EM_DIAGRAM):   call execute("ods listing;");
20833      end;
MPRINT(EM_DIAGRAM):   end;
20834      run;
MPRINT(EM_DIAGRAM):   run;
 
MPRINT(EM_DIAGRAM):   ods listing close;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=_tempcross;
MPRINT(EM_DIAGRAM):   proc freq data=EMWS1.Ids_DATA addnames;
MPRINT(EM_DIAGRAM):   table EducationalDegree* GeographicLiving /missing;
MPRINT(EM_DIAGRAM):   table EducationalDegree* FirstPolicyYear /missing;
MPRINT(EM_DIAGRAM):   table EducationalDegree* HasChildren /missing;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   ods listing;
NOTE: There were 6 observations read from the data set EMWS1.STAT_CROSSTAB.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: CALL EXECUTE generated line.
1         + ods listing close;
MPRINT(EM_DIAGRAM):   close
2         + ods output crosstabfreqs=_tempcross;
MPRINT(EM_DIAGRAM):   crosstabfreqs;
3         + proc freq data=EMWS1.Ids_DATA addnames;
4         +     table EducationalDegree* GeographicLiving                                                                                                                                                           /missing;
5         +     table EducationalDegree* FirstPolicyYear                                                                                                                                                            /missing;
6         +     table EducationalDegree* HasChildren                                                                                                                                                                /missing;
7         + run;
 
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: The data set WORK._TEMPCROSS has 228 observations and 14 variables.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
8         + ods listing;
MPRINT(EM_DIAGRAM):  ;
20835      %let typeOrder = 0;
20836      data _tempcross;
MPRINT(EM_DIAGRAM):   data _tempcross;
20837      length DATAROLE $20 lastTable $256;
MPRINT(EM_DIAGRAM):   length DATAROLE $20 lastTable $256;
20838      retain DATAROLE "TRAIN" TableOrder 0 lastTable ' ';
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TableOrder 0 lastTable ' ';
20839      set _tempcross;
MPRINT(EM_DIAGRAM):   set _tempcross;
20840      where _TYPE_ in('11', '111');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('11', '111');
20841      if table ne lasttable then do;
MPRINT(EM_DIAGRAM):   if table ne lasttable then do;
20842      TableOrder +1;
MPRINT(EM_DIAGRAM):   TableOrder +1;
20843      end;
MPRINT(EM_DIAGRAM):   end;
20844      lastTable=table;
MPRINT(EM_DIAGRAM):   lastTable=table;
20845      drop lasttable;
MPRINT(EM_DIAGRAM):   drop lasttable;
20846      if _type_ = '111' then call symput('typeOrder', '1');
MPRINT(EM_DIAGRAM):   if _type_ = '111' then call symput('typeOrder', '1');
20847      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 175 observations read from the data set WORK._TEMPCROSS.
      WHERE _TYPE_='11';
NOTE: The data set WORK._TEMPCROSS has 175 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20848      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20849      set _tempcross end=eof;
MPRINT(EM_DIAGRAM):   set _tempcross end=eof;
20850      by tableOrder;
MPRINT(EM_DIAGRAM):   by tableOrder;
20851      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
20852      call execute("data _tempcross;");
MPRINT(EM_DIAGRAM):   call execute("data _tempcross;");
20853      call execute("   length DATAROLE $20 Table $256 Variable1 Variable2 Variable3 $32 Value1 Value2 Value3 $200;");
MPRINT(EM_DIAGRAM):   call execute("   length DATAROLE $20 Table $256 Variable1 Variable2 Variable3 $32 Value1 Value2 Value3 $200;");
20854      call execute('label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";');
MPRINT(EM_DIAGRAM):   call execute('label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";');
20855      call execute("   set _tempcross;");
MPRINT(EM_DIAGRAM):   call execute("   set _tempcross;");
20856      end;
MPRINT(EM_DIAGRAM):   end;
20857      if first.tableOrder then do;
MPRINT(EM_DIAGRAM):   if first.tableOrder then do;
20858      call execute("Variable1='"!!strip(RowVariable)!!"';");
MPRINT(EM_DIAGRAM):   call execute("Variable1='"!!strip(RowVariable)!!"';");
20859      call execute("Variable2='"!!strip(ColVariable)!!"';");
MPRINT(EM_DIAGRAM):   call execute("Variable2='"!!strip(ColVariable)!!"';");
20860      if stratumVariables ne '' then call execute("Variable3='"!!strip(StratumVariables)!!"';");
MPRINT(EM_DIAGRAM):   if stratumVariables ne '' then call execute("Variable3='"!!strip(StratumVariables)!!"';");
20861      call execute("if table='"!!strip(table)!!"' then do;");
MPRINT(EM_DIAGRAM):   call execute("if table='"!!strip(table)!!"' then do;");
20862      call execute("Value1 = strip("!!strip(RowVariable)!!');');
MPRINT(EM_DIAGRAM):   call execute("Value1 = strip("!!strip(RowVariable)!!');');
20863      call execute("Value2 = strip("!!strip(ColVariable)!!');');
MPRINT(EM_DIAGRAM):   call execute("Value2 = strip("!!strip(ColVariable)!!');');
20864      if stratumVariables ne '' then call execute("Value3 = strip("!!strip(StratumVariables)!!');');
MPRINT(EM_DIAGRAM):   if stratumVariables ne '' then call execute("Value3 = strip("!!strip(StratumVariables)!!');');
20865      call execute("Output;");
MPRINT(EM_DIAGRAM):   call execute("Output;");
20866      call execute("end;");
MPRINT(EM_DIAGRAM):   call execute("end;");
20867      end;
MPRINT(EM_DIAGRAM):   end;
20868      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
20869      call execute('Keep DATAROLE Table Variable1 Variable2 Value1 Value2 Frequency Percent RowPercent ColPercent Missing;');
MPRINT(EM_DIAGRAM):   call execute('Keep DATAROLE Table Variable1 Variable2 Value1 Value2 Frequency Percent RowPercent ColPercent Missing;');
20870      call execute('run;');
MPRINT(EM_DIAGRAM):   call execute('run;');
20871      end;
MPRINT(EM_DIAGRAM):   end;
20872      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable stratumVariables is uninitialized.
MPRINT(EM_DIAGRAM):   data _tempcross;
MPRINT(EM_DIAGRAM):   length DATAROLE $20 Table $256 Variable1 Variable2 Variable3 $32 Value1 Value2 Value3 $200;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   set _tempcross;
MPRINT(EM_DIAGRAM):   Variable1='EducationalDegree';
MPRINT(EM_DIAGRAM):   Variable2='GeographicLiving';
MPRINT(EM_DIAGRAM):   if table='Table EducationalDegree * GeographicLiving' then do;
MPRINT(EM_DIAGRAM):   Value1 = strip(EducationalDegree);
MPRINT(EM_DIAGRAM):   Value2 = strip(GeographicLiving);
MPRINT(EM_DIAGRAM):   Output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Variable1='EducationalDegree';
MPRINT(EM_DIAGRAM):   Variable2='FirstPolicyYear';
MPRINT(EM_DIAGRAM):   if table='Table EducationalDegree * FirstPolicyYear' then do;
MPRINT(EM_DIAGRAM):   Value1 = strip(EducationalDegree);
MPRINT(EM_DIAGRAM):   Value2 = strip(FirstPolicyYear);
MPRINT(EM_DIAGRAM):   Output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Variable1='EducationalDegree';
MPRINT(EM_DIAGRAM):   Variable2='HasChildren';
MPRINT(EM_DIAGRAM):   if table='Table EducationalDegree * HasChildren' then do;
MPRINT(EM_DIAGRAM):   Value1 = strip(EducationalDegree);
MPRINT(EM_DIAGRAM):   Value2 = strip(HasChildren);
MPRINT(EM_DIAGRAM):   Output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Keep DATAROLE Table Variable1 Variable2 Value1 Value2 Frequency Percent RowPercent ColPercent Missing;
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 175 observations read from the data set WORK._TEMPCROSS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: CALL EXECUTE generated line.
1         + data _tempcross;
2         +    length DATAROLE $20 Table $256 Variable1 Variable2 Variable3 $32 Value1 Value2 Value3 $200;
MPRINT(EM_DIAGRAM):  20 Table $256 Variable1 Variable232 Value1 Value2200
3         + label DATAROLE = "Data Role";
4         +    set _tempcross;
5         + Variable1='EducationalDegree';
6         + Variable2='GeographicLiving';
7         + if table='Table EducationalDegree * GeographicLiving' then do;
8         + Value1 = strip(EducationalDegree);
9         + Value2 = strip(GeographicLiving);
10        + Output;
11        + end;
12        + Variable1='EducationalDegree';
13        + Variable2='FirstPolicyYear';
14        + if table='Table EducationalDegree * FirstPolicyYear' then do;
15        + Value1 = strip(EducationalDegree);
16        + Value2 = strip(FirstPolicyYear);
17        + Output;
18        + end;
19        + Variable1='EducationalDegree';
20        + Variable2='HasChildren';
21        + if table='Table EducationalDegree * HasChildren' then do;
22        + Value1 = strip(EducationalDegree);
23        + Value2 = strip(HasChildren);
24        + Output;
25        + end;
26        + Keep DATAROLE Table Variable1 Variable2 Value1 Value2 Frequency Percent RowPercent ColPercent Missing;
27        + run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      9:17    16:17   23:17
NOTE: Variable Variable3 is uninitialized.
NOTE: Variable Value3 is uninitialized.
NOTE: There were 175 observations read from the data set WORK._TEMPCROSS.
NOTE: The data set WORK._TEMPCROSS has 175 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20873      proc append base=EMWS1.Stat_CROSSTABREPORT data=_tempcross force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_CROSSTABREPORT data=_tempcross force;
20874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPCROSS to EMWS1.STAT_CROSSTABREPORT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 175 observations read from the data set WORK._TEMPCROSS.
NOTE: The data set EMWS1.STAT_CROSSTABREPORT has 175 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "17. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.07 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                17. Dezember 2015
Time:                13.07 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O171Y85N "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O171Y85N new;
MPRINT(EM_DIAGRAM):   run;
20976      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20977      * Stat: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Stat: Scoring DATA data;
20978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20979      data EMWS1.Stat_TRAIN
20980      / view=EMWS1.Stat_TRAIN
20981      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_TRAIN / view=EMWS1.Stat_TRAIN ;
20982      set EMWS1.Ids_DATA
20983      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA ;
20984      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.STAT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20985      quit;
 
20986      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20987      * Stat: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Stat: Computing metadata for TRAIN data;
20988      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.STAT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Stat_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Stat_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Stat_TRAIN out=WORK.M02CBKCH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02CBKCH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M02CBKCH(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02CBKCH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M02CBKCH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M24YEAZ4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T619NK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   set WORK.M24YEAZ4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Stat";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Stat: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'CLAIMSRATE' 'CUSTOMERAGE' 'CUSTOMERMONETARYVALUE' 'EDUCATIONALDEGREE' 'FIRSTPOLICYYEAR' 'GEOGRAPHICLIVING' 'GROSSMONTHLYSALARY' 'HASCHILDREN' 'PREMIUMSINLOBHEALTH' 'PREMIUMSINLOBHOUSEHOLD' 'PREMIUMSINLOBLIFE'
'PREMIUMSINLOBMOTOR' 'PREMIUMSINLOBWORKCOMP' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.STAT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "17. Dezember 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.07 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                17. Dezember 2015
Time:                13.07 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0WDO5RE "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Stat\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0WDO5RE new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
