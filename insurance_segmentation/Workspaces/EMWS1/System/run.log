NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
15519      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15520      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15521      put '<Node Id="Ids" Event="Run" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Run" Pid="3464" Gridid=""/>';
15522      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

15523      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids : Beginning update before running 
* datetime : 31DEC2015:13:05:31 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Ids\PROPERTIES.xml' encoding="UTF-8" NOBOM;
*------------------------------------------------------------* 
* 
* Ids : End update 
* datetime : 31DEC2015:13:05:31 
* 
*------------------------------------------------------------* 
15525      %em_getactionstatus(emlib =EMWS1, nodeid=Ids);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

15526      %let em_Train = N;
15527      %let em_Score = N;
15528      %let em_Report = N;
15529      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Ids" has already run. 
Node "Ids" succeeded. 
15530      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15531      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15532      put '<Node Id="Ids" Event="Complete" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Complete" Pid="3464" Gridid=""/>';
15533      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "TRANS" 
Traverser: WaitingNode "CLUS2" 
Traverser: WaitingNode "PROF2" 
traverser_readyNode_note 
15534      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15535      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15536      put '<Node Id="Repl" Event="Run" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Repl" Event="Run" Pid="3464" Gridid=""/>';
15537      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

15538      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Repl : Beginning update before running 
* datetime : 31DEC2015:13:05:31 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Repl_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Repl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Repl: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'insurance_segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'insurance segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
15774      %let emexceptionString =;
15775      %let EMEXCEPTIONSTRING=;
15776      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
15777      * UPDATE: Repl;
MPRINT(EM_DIAGRAM):   * UPDATE: Repl;
15778      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
15779      %let EM_ACTION = UPDATE;
15780      %let syscc = 0;
15781      filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
MPRINT(EM_DIAGRAM):     filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
15782      %inc x;
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
15783     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=);
15784     +   filename macFile catalog 'work.emutil.macro.source';
15785     +   %let _METAOBS = 0;
15787     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
15788     +                   or (&metadata eq ) %then %do;
15789     +       %goto doend;
15790     +   %end;
15791     +   data _null_;
15792     +      length _STRING_ $80;
15793     +      retain _STRING_;
15794     +      set &metadata end=eof;
15795     +      file macFile;
15796     +      %if %nrbquote(&where) ne %then %do;
15797     +          %let whereClause = where (%nrbquote(&where));
15798     +          %unquote(&whereClause);
15799     +      %end;
15800     +      if _N_=1 then do;
15801     +         string = "%"!!"macro &name;";
15802     +         put string;
15803     +      end;
15804     +      if (length(_STRING_) + length(trim(&key))+ 1 < 80) then do;
15805     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
15806     +         if eof then do;
15807     +            put _STRING_;
15808     +            string = "%"!!"mend &name;";
15809     +            put string;
15810     +            %if (&nummacro ne ) %then %do;
15811     +                string = strip(put(_N_, best.));
15812     +                put "%" "global &nummacro;";
15813     +                put "%" "let &nummacro = " string ";";
15814     +                call symput('_METAOBS', string);
15815     +            %end;
15816     +         end;
15817     +      end;
15818     +      else do;
15819     +         put _STRING_;
15820     +         _string_ = TRIM(&key);
15821     +         if eof then do;
15822     +            put _STRING_;
15823     +            string = "%"!!"mend &name;";
15824     +            put string;
15825     +        end;
15826     +      end;
15827     +      if eof then do;
15828     +         string = strip(put(_N_, best.));
15829     +         call symput('_METAOBS', string);
15830     +         %if (&nummacro ne ) %then %do;
15831     +             put "%" "global &nummacro;";
15832     +             put "%" "let &nummacro = " string ";";
15833     +         %end;
15834     +      end;
15835     +   run;
15837     +   %doend:
15838     +   %if ^&_METAOBS %then %do;
15839     +       data _null_;
15840     +          file macFile;
15841     +          put "%" "macro &name;";
15842     +          put "%" "mend &name;";
15843     +          %if (&nummacro ne ) %then %do;
15844     +              put "%" "global &nummacro;";
15845     +              put "%" "let &nummacro = 0;";
15846     +          %end;
15847     +      run;
15848     +   %end;
15849     +   %inc macFile;
15850     +   filename macFile;
15851     +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
15852      filename X;
MPRINT(EM_DIAGRAM):   filename X;
NOTE: Fileref X has been deassigned.
15853       %macro main;
15854      
15855         filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
15856         %include temp;
15857         filename temp;
15858      
15859         %if %upcase(&EM_ACTION) = CREATE %then %do;
15860      
15861             filename temp catalog 'sashelp.emmdfy.Replace_create.source';
15862             %include temp;
15863             filename temp;
15864             %create;
15865         %end;
15866         %else
15867         %if %upcase(&EM_ACTION) = TRAIN %then %do;
15868      
15869             filename temp catalog 'sashelp.emmdfy.Replace_train.source';
15870             %include temp;
15871             filename temp;
15872             %train;
15873         %end;
15874         %else
15875         %if %upcase(&EM_ACTION) = SCORE %then %do;
15876      
15877             filename temp catalog 'sashelp.emmdfy.Replace_score.source';
15878             %include temp;
15879             filename temp;
15880             %score;
15881         %end;
15882         %if %upcase(&EM_ACTION) = REPORT %then %do;
15883      
15884             filename temp catalog 'sashelp.emmdfy.Replace_report.source';
15885             %include temp;
15886             filename temp;
15887             %report;
15888         %end;
15889         %if %upcase(&EM_ACTION) = OPENOUTCLASSTABLE %then %do;
15890             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
15891             %include temp;
15892             filename temp;
15893             %em_replace_openoutclass;
15894         %end;
15895         %if %upcase(&EM_ACTION) = CLOSEOUTCLASSTABLE %then %do;
15896             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
15897             %include temp;
15898             filename temp;
15899             %em_replace_closeoutclass;
15900         %end;
15901      %mend main;
15902      
15903      %main;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMDFY.REPLACE_MACROS.SOURCE.
15904     +%macro SetProperties;
15905     +   %em_checkmacro(name=EM_PROPERTY_UNKNOWNLEVEL,    global=Y, value=MODE);
15906     +   %em_checkmacro(name=EM_PROPERTY_CALCMETHOD,      global=Y, value=NONE);
15907     +   %em_checkmacro(name=EM_PROPERTY_PERCENTSCUTOFF,  global=Y, value=0.5);
15908     +   %em_checkmacro(name=EM_PROPERTY_SPACINGSCUTOFF,  global=Y, value=9);
15909     +   %em_checkMacro(name=EM_PROPERTY_MADSCUTOFF,      global=Y, value=9);
15910     +   %em_checkMacro(name=EM_PROPERTY_STDDEVCUTOFF,    global=Y, value=3);
15911     +   %em_checkmacro(name=EM_PROPERTY_REPLACEMETHOD,   global=Y, value=COMPUTED);
15912     +   %em_checkmacro(name=EM_PROPERTY_HIDEVARIABLE,    global=Y, value=N);
15913     +   %em_checkmacro(name=EM_PROPERTY_INTERVALMETHOD,  global=Y, value=NONE);
15914     +   %em_checkmacro(name=EM_PROPERTY_REPORTCOUNT,     global=Y, value=Y);
15916     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
15918      
15919      *------------------------------------------------------------*;
15920      * End UPDATE: Repl;
15921      *------------------------------------------------------------*;

15922      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Repl\PROPERTIES.xml' encoding="UTF-8" NOBOM;
*------------------------------------------------------------* 
* 
* Repl : End update 
* datetime : 31DEC2015:13:05:32 
* 
*------------------------------------------------------------* 
15924      %em_getactionstatus(emlib =EMWS1, nodeid=Repl);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: View EMWS1.REPL_NEWVALUES.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      
15925      %let em_Train = N;
15926      %let em_Score = N;
15927      %let em_Report = N;
15928      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Repl" has already run. 
Node "Repl" succeeded. 
15929      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15930      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15931      put '<Node Id="Repl" Event="Complete" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Repl" Event="Complete" Pid="3464" Gridid=""/>';
15932      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "TRANS" 
Traverser: WaitingNode "CLUS2" 
Traverser: WaitingNode "PROF2" 
traverser_readyNode_note 
15933      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15934      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15935      put '<Node Id="Impt" Event="Run" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Run" Pid="3464" Gridid=""/>';
15936      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

15937      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 31DEC2015:13:05:32 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 31DEC2015:13:05:32 
* 
*------------------------------------------------------------* 
15957      %em_getactionstatus(emlib =EMWS1, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

15958      %let em_Train = N;
15959      %let em_Score = N;
15960      %let em_Report = N;
15961      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Impt" has already run. 
Node "Impt" succeeded. 
15962      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15963      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15964      put '<Node Id="Impt" Event="Complete" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="3464" Gridid=""/>';
15965      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "CLUS2" 
Traverser: WaitingNode "PROF2" 
traverser_readyNode_note 
15966      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15967      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15968      put '<Node Id="Trans" Event="Run" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans" Event="Run" Pid="3464" Gridid=""/>';
15969      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

15970      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Trans : Beginning update before running 
* datetime : 31DEC2015:13:05:33 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Trans_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Trans\PROPERTIES.xml' encoding="UTF-8" NOBOM;
*------------------------------------------------------------* 
* 
* Trans : End update 
* datetime : 31DEC2015:13:05:33 
* 
*------------------------------------------------------------* 
15990      %em_getactionstatus(emlib =EMWS1, nodeid=Trans);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

15991      %let em_Train = N;
15992      %let em_Score = N;
15993      %let em_Report = N;
15994      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Trans" has already run. 
Node "Trans" succeeded. 
15995      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
15996      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
15997      put '<Node Id="Trans" Event="Complete" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans" Event="Complete" Pid="3464" Gridid=""/>';
15998      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF2" 
traverser_readyNode_note 
15999      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16000      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16001      put '<Node Id="Clus2" Event="Run" Pid="3464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Clus2" Event="Run" Pid="3464" Gridid=""/>';
16002      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=WDFN33788459A,
      Local Host IP addr=fe80::5c78:ba6e:152:c92%5,
      Peer Hostname Name=WDFN33788459A.emea.global.corp.sap,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=54332,Lrecl=256,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16003      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Clus2 : Beginning update before running 
* datetime : 31DEC2015:13:05:34 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Clus2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
16022      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16023      set EMWS1.Trans_CMeta_TRAIN (obs=1);
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_CMeta_TRAIN (obs=1);
16024      retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
16025      drop _segFlag_;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
16026      if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
16027      _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
16028      role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
16029      level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
16030      label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
16031      end;
MPRINT(EM_DIAGRAM):   end;
16032      else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
16033      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
16034      level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
16035      label = 'Segment Description';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
16036      end;
MPRINT(EM_DIAGRAM):   end;
16037      else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
16038      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
16039      level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
16040      end;
MPRINT(EM_DIAGRAM):   end;
16041      output;
MPRINT(EM_DIAGRAM):   output;
16042      if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
16043      type = 'N';
MPRINT(EM_DIAGRAM):   type = 'N';
16044      index = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
16045      indexType = 'NONE';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
16046      format = '';
MPRINT(EM_DIAGRAM):   format = '';
16047      informat = '';
MPRINT(EM_DIAGRAM):   informat = '';
16048      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
16049      role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
16050      level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
16051      label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
16052      output;
MPRINT(EM_DIAGRAM):   output;
16053      name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
16054      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
16055      level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
16056      label = 'Segment Description';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
16057      output;
MPRINT(EM_DIAGRAM):   output;
16058      name = 'Distance';
MPRINT(EM_DIAGRAM):   name = 'Distance';
16059      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
16060      level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
16061      label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
16062      output;
MPRINT(EM_DIAGRAM):   output;
16063      end;
MPRINT(EM_DIAGRAM):   end;
16064      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _eof_ is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16065      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16066      * Clus2: Update Variables Set;
MPRINT(EM_DIAGRAM):   * Clus2: Update Variables Set;
16067      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

16068      data EMWS1.Clus2_VariableSet;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus2_VariableSet;
16069      length USE $1;
MPRINT(EM_DIAGRAM):   length USE $1;
16070      label USE = "Use";
MPRINT(EM_DIAGRAM):   label USE = "Use";
16071      length REPORT $1;
MPRINT(EM_DIAGRAM):   length REPORT $1;
16072      label REPORT = "Report";
MPRINT(EM_DIAGRAM):   label REPORT = "Report";
16073      set EMWS1.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_CMeta_TRAIN;
16074      where(ROLE in("INPUT" "REJECTED" "FREQ" "ID"));
MPRINT(EM_DIAGRAM):   where(ROLE in("INPUT" "REJECTED" "FREQ" "ID"));
16075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable USE is uninitialized.
NOTE: There were 17 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
      WHERE ROLE in ('FREQ', 'ID', 'INPUT', 'REJECTED');
NOTE: The data set EMWS1.CLUS2_VARIABLESET has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16076      data EMWS1.Clus2_VariableSet;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus2_VariableSet;
16077      set EMWS1.Clus2_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus2_VariableSet;
16078      if upcase(NAME) = 'CLAIMSRATE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'CLAIMSRATE' then do;
16079      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16080      end;
MPRINT(EM_DIAGRAM):   end;
16081      if upcase(NAME) = 'CUSTOMERAGE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'CUSTOMERAGE' then do;
16082      USE = 'N';
MPRINT(EM_DIAGRAM):   USE = 'N';
16083      end;
MPRINT(EM_DIAGRAM):   end;
16084      if upcase(NAME) = 'CUSTOMERIDENTITY' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'CUSTOMERIDENTITY' then do;
16085      USE = 'N';
MPRINT(EM_DIAGRAM):   USE = 'N';
16086      end;
MPRINT(EM_DIAGRAM):   end;
16087      if upcase(NAME) = 'CUSTOMERMONETARYVALUE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'CUSTOMERMONETARYVALUE' then do;
16088      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16089      end;
MPRINT(EM_DIAGRAM):   end;
16090      if upcase(NAME) = 'FIRSTPOLICYYEAR' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'FIRSTPOLICYYEAR' then do;
16091      USE = 'N';
MPRINT(EM_DIAGRAM):   USE = 'N';
16092      end;
MPRINT(EM_DIAGRAM):   end;
16093      if upcase(NAME) = 'IMP_EDUCATIONALDEGREE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_EDUCATIONALDEGREE' then do;
16094      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16095      end;
MPRINT(EM_DIAGRAM):   end;
16096      if upcase(NAME) = 'IMP_GEOGRAPHICLIVING' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_GEOGRAPHICLIVING' then do;
16097      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16098      end;
MPRINT(EM_DIAGRAM):   end;
16099      if upcase(NAME) = 'IMP_GROSSMONTHLYSALARY' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_GROSSMONTHLYSALARY' then do;
16100      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16101      end;
MPRINT(EM_DIAGRAM):   end;
16102      if upcase(NAME) = 'IMP_HASCHILDREN' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_HASCHILDREN' then do;
16103      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16104      end;
MPRINT(EM_DIAGRAM):   end;
16105      if upcase(NAME) = 'IMP_PREMIUMSINLOBHEALTH' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_PREMIUMSINLOBHEALTH' then do;
16106      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16107      end;
MPRINT(EM_DIAGRAM):   end;
16108      if upcase(NAME) = 'IMP_PREMIUMSINLOBLIFE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_PREMIUMSINLOBLIFE' then do;
16109      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16110      end;
MPRINT(EM_DIAGRAM):   end;
16111      if upcase(NAME) = 'IMP_PREMIUMSINLOBMOTOR' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_PREMIUMSINLOBMOTOR' then do;
16112      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16113      end;
MPRINT(EM_DIAGRAM):   end;
16114      if upcase(NAME) = 'IMP_PREMIUMSINLOBWORKCOMP' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_PREMIUMSINLOBWORKCOMP' then do;
16115      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16116      end;
MPRINT(EM_DIAGRAM):   end;
16117      if upcase(NAME) = 'IMP_REP_CUSTOMERAGE' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'IMP_REP_CUSTOMERAGE' then do;
16118      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16119      end;
MPRINT(EM_DIAGRAM):   end;
16120      if upcase(NAME) = 'LOYALTY' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'LOYALTY' then do;
16121      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16122      end;
MPRINT(EM_DIAGRAM):   end;
16123      if upcase(NAME) = 'PREMIUMSINLOBHOUSEHOLD' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'PREMIUMSINLOBHOUSEHOLD' then do;
16124      USE = 'Y';
MPRINT(EM_DIAGRAM):   USE = 'Y';
16125      end;
MPRINT(EM_DIAGRAM):   end;
16126      if upcase(NAME) = 'TOTAL_PREMIUM' then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = 'TOTAL_PREMIUM' then do;
16127      USE = 'N';
MPRINT(EM_DIAGRAM):   USE = 'N';
16128      end;
MPRINT(EM_DIAGRAM):   end;
16129      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.CLUS2_VARIABLESET.
NOTE: The data set EMWS1.CLUS2_VARIABLESET has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16130      * Clus2: End of Update Variables Set;
MPRINT(EM_DIAGRAM):    * Clus2: End of Update Variables Set;
16131      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
*------------------------------------------------------------* 
* 
* Clus2 : End update 
* datetime : 31DEC2015:13:05:34 
* 
*------------------------------------------------------------* 
16133      %em_getactionstatus(emlib =EMWS1, nodeid=Clus2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16134      %let em_Train = Y;
16135      %let em_Report = Y;
16136      %let em_Score = Y;
16137      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16138      %let emloopmode =;
16139      %let emloopnumber =0;
16140      %let emloopId =Clus2;
*------------------------------------------------------------* 
* 
* Clus2 : Running 
* datetime : 31DEC2015:13:05:34 
* 
*------------------------------------------------------------* 
16141      %let SYSCC =0;
16142      %let EMGROUPMODE =;
16143      %let EMGROUPID =;
MPRINT(EM_DIAGRAM):      filename temp catalog 'sashelp.emutil.em_vardist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_classdist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checksetinit.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checkerror.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odsliston.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odslistoff.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_getvarname.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    filename L3LY520W "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto log=L3LY520W new;
MPRINT(EM_DIAGRAM):   run;
