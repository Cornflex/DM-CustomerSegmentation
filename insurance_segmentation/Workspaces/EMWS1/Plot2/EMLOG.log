*------------------------------------------------------------*
User:                D059331
Date:                December 28, 2015
Time:                13:25:35
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:25:30" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 28, 2015
Time:                13:25:30
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CX52TC "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CX52TC new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:25:30" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:25:30" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20439      proc freq data=EMWS1.Plot2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Plot2_VariableSet noprint;
20440      table ROLE*LEVEL/out=WORK.Plot2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Plot2META;
20441      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.PLOT2_VARIABLESET.
NOTE: The data set WORK.PLOT2META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
20442      proc print data=WORK.Plot2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Plot2META label noobs;
20443      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20444      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20445      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20446      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20447      run;
 
NOTE: There were 3 observations read from the data set WORK.PLOT2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
20448      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M3TRXUS7;
MPRINT(EM_DIAGRAM):   set WORK.M3TRXUS7;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'TARGET';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role in('REJECTED' 'PREDICT' 'RESIDUAL' 'GROUP' 'ASSESS') and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'INPUT' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'FREQ' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'FREQ';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   run;
20469      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20470      * Plot2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBClass Macro ;
20471      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20472      %macro DMDBClass;
20473          ClaimsRate(ASC) CustomerAge(ASC) CustomerMonetaryValue(ASC)
20474         EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC)
20475         GrossMonthlySalary(ASC) HasChildren(ASC) PremiumsinLOBHealth(ASC)
20476         PremiumsinLOBHousehold(ASC) PremiumsinLOBLife(ASC) PremiumsinLOBMotor(ASC)
20477         PremiumsinLOBWorkComp(ASC)
20478      %mend DMDBClass;
20479      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20480      * Plot2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot2: Create DMDB;
20481      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20482      proc dmdb batch data=EMWS1.Filter_TRAIN
20483      dmdbcat=WORK.Plot2_DMDB
20484      maxlevel = 23
20485      nonorm
20486      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Plot2_DMDB maxlevel = 23 nonorm ;
MPRINT(EM_DIAGRAM):   class
20487      class %DMDBClass;
MPRINT(DMDBCLASS):   ClaimsRate(ASC) CustomerAge(ASC) CustomerMonetaryValue(ASC) EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC) GrossMonthlySalary(ASC) HasChildren(ASC) PremiumsinLOBHealth(ASC) PremiumsinLOBHousehold(ASC)
PremiumsinLOBLife(ASC) PremiumsinLOBMotor(ASC) PremiumsinLOBWorkComp(ASC)
MPRINT(EM_DIAGRAM):  ;
20488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10288   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10288 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20489      quit;
 
20490      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20491      * Plot2: Creating univariate histograms;
MPRINT(EM_DIAGRAM):   * Plot2: Creating univariate histograms;
20492      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20493      goptions ftext="SWISS";
MPRINT(EM_DIAGRAM):   goptions ftext="SWISS";
20494      goptions nodisplay device=PNG;
MPRINT(EM_DIAGRAM):   goptions nodisplay device=PNG;
20495      axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
MPRINT(EM_DIAGRAM):   axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
20496      axis2 width=2 minor=none;
MPRINT(EM_DIAGRAM):   axis2 width=2 minor=none;
20497      pattern1 value=solid;
MPRINT(EM_DIAGRAM):   pattern1 value=solid;
20498      proc gchart
20499      data=EMWS1.Filter_TRAIN gout=WORK.Plot2GRAPH;
MPRINT(EM_DIAGRAM):   proc gchart data=EMWS1.Filter_TRAIN gout=WORK.Plot2GRAPH;
20500      *;
MPRINT(EM_DIAGRAM):   *;
20501      title "ClaimsRate";
MPRINT(EM_DIAGRAM):   title "ClaimsRate";
20502      vbar ClaimsRate /
20503      name = "ClaimsRate" description = "ClaimsRate"
MPRINT(EM_DIAGRAM):   vbar ClaimsRate / name = "ClaimsRate" description = "ClaimsRate" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20504      FREQ
MPRINT(EM_DIAGRAM):   run;
20505      type=FREQ
20506      noframe
20507      missing
20508      raxis=axis1 maxis=axis2;
20509      run;
 
WARNING: The VBAR/VBAR3D chart for ClaimsRate could not be labeled because the labels are wider than the bars.
20510      title "CustomerAge";
MPRINT(EM_DIAGRAM):   title "CustomerAge";
20511      vbar CustomerAge /
20512      name = "CustomerAge" description = "CustomerAge"
MPRINT(EM_DIAGRAM):   vbar CustomerAge / name = "CustomerAge" description = "CustomerAge" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20513      FREQ
MPRINT(EM_DIAGRAM):   run;
20514      type=FREQ
20515      noframe
20516      missing
20517      raxis=axis1 maxis=axis2;
20518      run;
 
WARNING: The VBAR/VBAR3D chart for CustomerAge could not be labeled because the labels are wider than the bars.
20519      title "CustomerMonetaryValue";
MPRINT(EM_DIAGRAM):   title "CustomerMonetaryValue";
20520      vbar CustomerMonetaryValue /
20521      name = "CustomerMonetaryValue" description = "CustomerMonetaryValue"
MPRINT(EM_DIAGRAM):   vbar CustomerMonetaryValue / name = "CustomerMonetaryValue" description = "CustomerMonetaryValue" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20522      FREQ
MPRINT(EM_DIAGRAM):   run;
20523      type=FREQ
20524      noframe
20525      missing
20526      raxis=axis1 maxis=axis2;
20527      run;
 
WARNING: The VBAR/VBAR3D chart for CustomerMonetaryValue could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, CUSTOMER, changed to CUSTOME1. CUSTOMER is already used or not a valid SAS name.
20528      title "EducationalDegree";
MPRINT(EM_DIAGRAM):   title "EducationalDegree";
20529      vbar EducationalDegree /
20530      name = "EducationalDegree" description = "EducationalDegree"
MPRINT(EM_DIAGRAM):   vbar EducationalDegree / name = "EducationalDegree" description = "EducationalDegree" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20531      FREQ
MPRINT(EM_DIAGRAM):   run;
20532      type=FREQ
20533      noframe
20534      missing
20535      raxis=axis1 maxis=axis2;
20536      run;
 
20537      title "FirstPolicyYear";
MPRINT(EM_DIAGRAM):   title "FirstPolicyYear";
20538      vbar FirstPolicyYear /
20539      name = "FirstPolicyYear" description = "FirstPolicyYear"
MPRINT(EM_DIAGRAM):   vbar FirstPolicyYear / name = "FirstPolicyYear" description = "FirstPolicyYear" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20540      FREQ
MPRINT(EM_DIAGRAM):   run;
20541      type=FREQ
20542      noframe
20543      missing
20544      raxis=axis1 maxis=axis2;
20545      run;
 
WARNING: The VBAR/VBAR3D chart for FirstPolicyYear could not be labeled because the labels are wider than the bars.
20546      title "GeographicLiving";
MPRINT(EM_DIAGRAM):   title "GeographicLiving";
20547      vbar GeographicLiving /
20548      name = "GeographicLiving" description = "GeographicLiving"
20549      FREQ
MPRINT(EM_DIAGRAM):   vbar GeographicLiving / name = "GeographicLiving" description = "GeographicLiving" FREQ type=FREQ noframe missing discrete raxis=axis1 maxis=axis2;
20550      type=FREQ
MPRINT(EM_DIAGRAM):   run;
20551      noframe
20552      missing
20553      discrete
20554      raxis=axis1 maxis=axis2;
20555      run;
 
20556      title "GrossMonthlySalary";
MPRINT(EM_DIAGRAM):   title "GrossMonthlySalary";
20557      vbar GrossMonthlySalary /
20558      name = "GrossMonthlySalary" description = "GrossMonthlySalary"
MPRINT(EM_DIAGRAM):   vbar GrossMonthlySalary / name = "GrossMonthlySalary" description = "GrossMonthlySalary" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20559      FREQ
MPRINT(EM_DIAGRAM):   run;
20560      type=FREQ
20561      noframe
20562      missing
20563      raxis=axis1 maxis=axis2;
20564      run;
 
WARNING: The VBAR/VBAR3D chart for GrossMonthlySalary could not be labeled because the labels are wider than the bars.
20565      title "HasChildren";
MPRINT(EM_DIAGRAM):   title "HasChildren";
20566      vbar HasChildren /
20567      name = "HasChildren" description = "HasChildren"
20568      FREQ
MPRINT(EM_DIAGRAM):   vbar HasChildren / name = "HasChildren" description = "HasChildren" FREQ type=FREQ noframe missing discrete raxis=axis1 maxis=axis2;
20569      type=FREQ
MPRINT(EM_DIAGRAM):   run;
20570      noframe
20571      missing
20572      discrete
20573      raxis=axis1 maxis=axis2;
20574      run;
 
20575      title "PremiumsinLOBHealth";
MPRINT(EM_DIAGRAM):   title "PremiumsinLOBHealth";
20576      vbar PremiumsinLOBHealth /
20577      name = "PremiumsinLOBHealth" description = "PremiumsinLOBHealth"
MPRINT(EM_DIAGRAM):   vbar PremiumsinLOBHealth / name = "PremiumsinLOBHealth" description = "PremiumsinLOBHealth" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20578      FREQ
MPRINT(EM_DIAGRAM):   run;
20579      type=FREQ
20580      noframe
20581      missing
20582      raxis=axis1 maxis=axis2;
20583      run;
 
WARNING: The VBAR/VBAR3D chart for PremiumsinLOBHealth could not be labeled because the labels are wider than the bars.
20584      title "PremiumsinLOBHousehold";
MPRINT(EM_DIAGRAM):   title "PremiumsinLOBHousehold";
20585      vbar PremiumsinLOBHousehold /
20586      name = "PremiumsinLOBHousehold" description = "PremiumsinLOBHousehold"
MPRINT(EM_DIAGRAM):   vbar PremiumsinLOBHousehold / name = "PremiumsinLOBHousehold" description = "PremiumsinLOBHousehold" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20587      FREQ
MPRINT(EM_DIAGRAM):   run;
20588      type=FREQ
20589      noframe
20590      missing
20591      raxis=axis1 maxis=axis2;
20592      run;
 
WARNING: The VBAR/VBAR3D chart for PremiumsinLOBHousehold could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, PREMIUMS, changed to PREMIUM1. PREMIUMS is already used or not a valid SAS name.
20593      title "PremiumsinLOBLife";
MPRINT(EM_DIAGRAM):   title "PremiumsinLOBLife";
20594      vbar PremiumsinLOBLife /
20595      name = "PremiumsinLOBLife" description = "PremiumsinLOBLife"
MPRINT(EM_DIAGRAM):   vbar PremiumsinLOBLife / name = "PremiumsinLOBLife" description = "PremiumsinLOBLife" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20596      FREQ
MPRINT(EM_DIAGRAM):   run;
20597      type=FREQ
20598      noframe
20599      missing
20600      raxis=axis1 maxis=axis2;
20601      run;
 
WARNING: The VBAR/VBAR3D chart for PremiumsinLOBLife could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, PREMIUMS, changed to PREMIUM2. PREMIUMS is already used or not a valid SAS name.
20602      title "PremiumsinLOBMotor";
MPRINT(EM_DIAGRAM):   title "PremiumsinLOBMotor";
20603      vbar PremiumsinLOBMotor /
20604      name = "PremiumsinLOBMotor" description = "PremiumsinLOBMotor"
MPRINT(EM_DIAGRAM):   vbar PremiumsinLOBMotor / name = "PremiumsinLOBMotor" description = "PremiumsinLOBMotor" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20605      FREQ
MPRINT(EM_DIAGRAM):   run;
20606      type=FREQ
20607      noframe
20608      missing
20609      raxis=axis1 maxis=axis2;
20610      run;
 
WARNING: The VBAR/VBAR3D chart for PremiumsinLOBMotor could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, PREMIUMS, changed to PREMIUM3. PREMIUMS is already used or not a valid SAS name.
20611      title "PremiumsinLOBWorkComp";
MPRINT(EM_DIAGRAM):   title "PremiumsinLOBWorkComp";
20612      vbar PremiumsinLOBWorkComp /
20613      name = "PremiumsinLOBWorkComp" description = "PremiumsinLOBWorkComp"
MPRINT(EM_DIAGRAM):   vbar PremiumsinLOBWorkComp / name = "PremiumsinLOBWorkComp" description = "PremiumsinLOBWorkComp" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20614      FREQ
MPRINT(EM_DIAGRAM):   run;
20615      type=FREQ
20616      noframe
20617      missing
20618      raxis=axis1 maxis=axis2;
20619      run;
 
WARNING: The VBAR/VBAR3D chart for PremiumsinLOBWorkComp could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, PREMIUMS, changed to PREMIUM4. PREMIUMS is already used or not a valid SAS name.
20620      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           1.25 seconds
      cpu time            0.84 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10288 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: PROCEDURE GCHART used (Total process time):
      real time           1.25 seconds
      cpu time            0.84 seconds
 
 
20621      title;
MPRINT(EM_DIAGRAM):   title;
20622      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
20623      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20624      * Plot2: Creating variable by interval target charts;
MPRINT(EM_DIAGRAM):   * Plot2: Creating variable by interval target charts;
20625      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20626      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20627      * Plot2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBClass Macro ;
20628      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20629      %macro DMDBClass;
20630          EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC)
20631         HasChildren(ASC)
20632      %mend DMDBClass;
20633      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20634      * Plot2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBVar Macro ;
20635      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20636      %macro DMDBVar;
20637          ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20638         PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor
20639         PremiumsinLOBWorkComp
20640      %mend DMDBVar;
20641      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20642      * Plot2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot2: Create DMDB;
20643      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20644      proc dmdb batch data=EMWS1.Filter_TRAIN
20645      dmdbcat=WORK.Plot2_DMDB
20646      classout=work.classoutDs
20647      varout=work.varoutDs
20648      maxlevel = 513
20649      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Plot2_DMDB classout=work.classoutDs varout=work.varoutDs maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20650      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLiving(ASC) HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20651      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10288   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10288 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.CLASSOUTDS has 39 observations and 9 variables.
NOTE: The data set WORK.VAROUTDS has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20653      quit;
20654      *--- end code ---*;
 
20655      title8;
MPRINT(EM_DIAGRAM):    title8;
20656      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_classvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Class Variables";
20657      proc print data=work.classoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.classoutDs;
20658      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK.CLASSOUTDS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20659      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
20660      delete classoutDs;
MPRINT(EM_DIAGRAM):   delete classoutDs;
20661      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.CLASSOUTDS (memtype=DATA).
20662      title8;
MPRINT(EM_DIAGRAM):   title8;
20663      title8;
MPRINT(EM_DIAGRAM):   title8;
20664      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_intvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Interval Variables";
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20665      proc print data=work.varoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.varoutDs;
20666      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VAROUTDS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20667      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
20668      delete varoutDs;
MPRINT(EM_DIAGRAM):   delete varoutDs;
20669      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.VAROUTDS (memtype=DATA).
20670      title8;
MPRINT(EM_DIAGRAM):   title8;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20671      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=WORK nolist;
20672      delete Plot2_DMDB;
MPRINT(EM_DIAGRAM):   delete Plot2_DMDB;
20673      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.PLOT2_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
20674      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20675      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
20676      delete Plot2_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Plot2_DMDB / memtype=catalog;
20677      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.PLOT2_DMDB (memtype=CATALOG).
20678      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
20679      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20680      * Plot2: Copying graphs to node folder;
MPRINT(EM_DIAGRAM):   * Plot2: Copying graphs to node folder;
20681      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20682      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\ClaimsRate.gif";
MPRINT(EM_DIAGRAM):   filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\ClaimsRate.gif";
20683      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20684      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20685      replay CLAIMSRA;
MPRINT(EM_DIAGRAM):   replay CLAIMSRA;
NOTE:  57 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\ClaimsRate.gif
20686      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
20687      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20688      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20689      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerMonetaryValue.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerMonetaryValue.gif";
20690      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20691      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20692      replay CUSTOME1;
MPRINT(EM_DIAGRAM):   replay CUSTOME1;
NOTE:  73 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerMonetaryValue.gif
20693      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
20694      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20695      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20696      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerAge.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerAge.gif";
20697      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20698      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20699      replay CUSTOMER;
MPRINT(EM_DIAGRAM):   replay CUSTOMER;
NOTE:  113 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\CustomerAge.gif
20700      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20701      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20702      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20703      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\EducationalDegree.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\EducationalDegree.gif";
20704      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20705      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20706      replay EDUCATIO;
MPRINT(EM_DIAGRAM):   replay EDUCATIO;
NOTE:  59 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\EducationalDegree.gif
20707      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
20708      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20709      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20710      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\FirstPolicyYear.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\FirstPolicyYear.gif";
20711      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20712      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20713      replay FIRSTPOL;
MPRINT(EM_DIAGRAM):   replay FIRSTPOL;
NOTE:  119 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\FirstPolicyYear.gif
20714      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20715      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20716      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20717      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GeographicLiving.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GeographicLiving.gif";
20718      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20719      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20720      replay GEOGRAPH;
MPRINT(EM_DIAGRAM):   replay GEOGRAPH;
NOTE:  49 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GeographicLiving.gif
20721      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
20722      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20723      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20724      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GrossMonthlySalary.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GrossMonthlySalary.gif";
20725      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20726      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20727      replay GROSSMON;
MPRINT(EM_DIAGRAM):   replay GROSSMON;
NOTE:  107 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\GrossMonthlySalary.gif
20728      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20729      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20730      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20731      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\HasChildren.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\HasChildren.gif";
20732      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20733      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20734      replay HASCHILD;
MPRINT(EM_DIAGRAM):   replay HASCHILD;
NOTE:  45 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\HasChildren.gif
20735      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
20736      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20737      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20738      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHousehold.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHousehold.gif";
20739      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20740      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20741      replay PREMIUM1;
MPRINT(EM_DIAGRAM):   replay PREMIUM1;
NOTE:  67 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHousehold.gif
20742      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20743      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20744      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20745      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBLife.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBLife.gif";
20746      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20747      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20748      replay PREMIUM2;
MPRINT(EM_DIAGRAM):   replay PREMIUM2;
NOTE:  69 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBLife.gif
20749      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20750      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20751      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20752      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBMotor.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBMotor.gif";
20753      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20754      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20755      replay PREMIUM3;
MPRINT(EM_DIAGRAM):   replay PREMIUM3;
NOTE:  67 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBMotor.gif
20756      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20757      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20758      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20759      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBWorkComp.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBWorkComp.gif";
20760      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20761      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20762      replay PREMIUM4;
MPRINT(EM_DIAGRAM):   replay PREMIUM4;
NOTE:  67 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBWorkComp.gif
20763      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20764      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20765      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20766      filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHealth.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHealth.gif";
20767      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20768      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20769      replay PREMIUMS;
MPRINT(EM_DIAGRAM):   replay PREMIUMS;
NOTE:  65 records written to C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\GRAPH\PremiumsinLOBHealth.gif
20770      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
20771      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20772      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:25:34" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 28, 2015
Time:                13:25:34
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2R9M1SW "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2R9M1SW new;
MPRINT(EM_DIAGRAM):   run;
20874      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20875      * Plot2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Plot2: Scoring DATA data;
20876      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20877      data EMWS1.Plot2_TRAIN
20878      / view=EMWS1.Plot2_TRAIN
20879      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot2_TRAIN / view=EMWS1.Plot2_TRAIN ;
20880      set EMWS1.Filter_TRAIN
20881      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN ;
20882      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.PLOT2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20883      quit;
 
20884      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20885      * Plot2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Plot2: Computing metadata for TRAIN data;
20886      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Plot2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Plot2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Plot2_TRAIN out=WORK.M0RUWHBM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RUWHBM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RUWHBM(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RUWHBM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RUWHBM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2MOH02G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0K5U9KA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MOH02G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Plot2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Plot2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:25:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 28, 2015
Time:                13:25:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1JA0MDJ "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Plot2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1JA0MDJ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
