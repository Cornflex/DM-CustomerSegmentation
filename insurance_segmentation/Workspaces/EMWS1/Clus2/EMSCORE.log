MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 31, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:05:34" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 31, 2015
Time:                13:05:34
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3R1ZP7O "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3R1ZP7O new;
MPRINT(EM_DIAGRAM):   run;
21205      proc transpose data=EMWS1.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
21206      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
21207      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
21208      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.CLUS2_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21209      proc sort data=WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_OUTVAR;
21210      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21211      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21212      proc sort data=EMWS1.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
21213      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21214      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.CLUS2_VARIABLESET.
NOTE: The data set WORK.CLUS2_SORTEDVARS has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21215      data WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_OUTVAR;
21216      merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
21217      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21218      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
21219      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS2_OUTVAR.
NOTE: There were 17 observations read from the data set WORK.CLUS2_SORTEDVARS.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21220      filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21221      *------------------------------------------------------------*;
21222      * Clus2: Scoring DATA data;
21223      *------------------------------------------------------------*;
21224      data EMWS1.Clus2_TRAIN
21225      / view=EMWS1.Clus2_TRAIN
21226      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus2_TRAIN / view=EMWS1.Clus2_TRAIN ;
21227      set EMWS1.Trans_TRAIN
21228      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN ;
21229      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\EMFLOWSCORE.sas.
21230     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21231     +*** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
21232     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21233     +
21234     +
21235     +*** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
21236     +drop _dm_bad; _dm_bad = 0;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
21237     +
21238     +*** Standardize ClaimsRate ;
MPRINT(EM_DIAGRAM):   *** Standardize ClaimsRate ;
21239     +drop T_ClaimsRate ;
MPRINT(EM_DIAGRAM):   drop T_ClaimsRate ;
21240     +if missing( ClaimsRate ) then T_ClaimsRate = .;
MPRINT(EM_DIAGRAM):   if missing( ClaimsRate ) then T_ClaimsRate = .;
21241     +else T_ClaimsRate = (ClaimsRate - 0.74278480769098) * 0.34282299968436;
MPRINT(EM_DIAGRAM):   else T_ClaimsRate = (ClaimsRate - 0.74278480769098) * 0.34282299968436;
21242     +
21243     +*** Standardize CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   *** Standardize CustomerMonetaryValue ;
21244     +drop T_CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   drop T_CustomerMonetaryValue ;
21245     +if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
MPRINT(EM_DIAGRAM):   if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
21246     +else T_CustomerMonetaryValue = (CustomerMonetaryValue
21247     +         - 177.89260352564) * 0.00051392438417;
MPRINT(EM_DIAGRAM):   else T_CustomerMonetaryValue = (CustomerMonetaryValue - 177.89260352564) * 0.00051392438417;
21248     +
21249     +*** Standardize IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_GrossMonthlySalary ;
21250     +drop T_IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   drop T_IMP_GrossMonthlySalary ;
21251     +if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
21252     +else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary
21253     +         - 5012.8385565301) * 0.00043274126676;
MPRINT(EM_DIAGRAM):   else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary - 5012.8385565301) * 0.00043274126676;
21254     +
21255     +*** Standardize IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBHealth ;
21256     +drop T_IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBHealth ;
21257     +if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
21258     +else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth
21259     +         - 171.58083292696) * 0.00338081900561;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth - 171.58083292696) * 0.00338081900561;
21260     +
21261     +*** Standardize IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBLife ;
21262     +drop T_IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBLife ;
21263     +if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
21264     +else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife
21265     +         - 41.8557819858754) * 0.02116841219401;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife - 41.8557819858754) * 0.02116841219401;
21266     +
21267     +*** Standardize IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBMotor ;
21268     +drop T_IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBMotor ;
21269     +if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
21270     +else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor
21271     +         - 300.470252387456) * 0.00472668476828;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor - 300.470252387456) * 0.00472668476828;
21272     +
21273     +*** Standardize IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBWorkComp ;
21274     +drop T_IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBWorkComp ;
21275     +if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
21276     +else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp
21277     +         - 41.2775142017676) * 0.01949395258122;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp - 41.2775142017676) * 0.01949395258122;
21278     +
21279     +*** Standardize IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_REP_CustomerAge ;
21280     +drop T_IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   drop T_IMP_REP_CustomerAge ;
21281     +if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
21282     +else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge
21283     +         - 47.900758902511) * 0.05754504433;
MPRINT(EM_DIAGRAM):   else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge - 47.900758902511) * 0.05754504433;
21284     +
21285     +*** Standardize LOYALTY ;
MPRINT(EM_DIAGRAM):   *** Standardize LOYALTY ;
21286     +drop T_LOYALTY ;
MPRINT(EM_DIAGRAM):   drop T_LOYALTY ;
21287     +if missing( LOYALTY ) then T_LOYALTY = .;
MPRINT(EM_DIAGRAM):   if missing( LOYALTY ) then T_LOYALTY = .;
21288     +else T_LOYALTY = (LOYALTY - 28.9829517779525) * 0.15146587841461;
MPRINT(EM_DIAGRAM):   else T_LOYALTY = (LOYALTY - 28.9829517779525) * 0.15146587841461;
21289     +
21290     +*** Standardize PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   *** Standardize PremiumsinLOBHousehold ;
21291     +drop T_PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   drop T_PremiumsinLOBHousehold ;
21292     +if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
MPRINT(EM_DIAGRAM):   if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
21293     +else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold
21294     +         - 210.431191724937) * 0.00283610717435;
MPRINT(EM_DIAGRAM):   else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold - 210.431191724937) * 0.00283610717435;
21295     +
21296     +*** Generate dummy variables for IMP_GeographicLiving ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_GeographicLiving ;
21297     +drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3
21298     +        IMP_GeographicLiving4 ;
MPRINT(EM_DIAGRAM):   drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 ;
21299     +if missing( IMP_GeographicLiving ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_GeographicLiving ) then do;
21300     +   IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21301     +   IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21302     +   IMP_GeographicLiving3 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21303     +   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
21304     +end;
MPRINT(EM_DIAGRAM):   end;
21305     +else do;
MPRINT(EM_DIAGRAM):   else do;
21306     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21307     +   _dm12 = put( IMP_GeographicLiving , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_GeographicLiving , BEST12. );
21308     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32422559943915;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16723350696889;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25050370517151;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = 0.60893624085983;
21309     +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
21310     +      IMP_GeographicLiving1 = -0.32422559943915;
21311     +      IMP_GeographicLiving2 = -0.16723350696889;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
21312     +      IMP_GeographicLiving3 = -0.25050370517151;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = 0.77099315772144;
21313     +      IMP_GeographicLiving4 = 0.60893624085983;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16723350696889;
21314     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25050370517151;
21315     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   end;
21316     +      IMP_GeographicLiving1 = 0.77099315772144;
21317     +      IMP_GeographicLiving2 = -0.16723350696889;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
21318     +      IMP_GeographicLiving3 = -0.25050370517151;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32422559943915;
21319     +      IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16723350696889;
21320     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = 0.99789230085265;
21321     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   end;
21322     +      IMP_GeographicLiving1 = -0.32422559943915;
21323     +      IMP_GeographicLiving2 = -0.16723350696889;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
21324     +      IMP_GeographicLiving3 = 0.99789230085265;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32422559943915;
21325     +      IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = 1.4947705352625;
21326     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25050370517151;
21327     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   end;
21328     +      IMP_GeographicLiving1 = -0.32422559943915;
21329     +      IMP_GeographicLiving2 = 1.4947705352625;
MPRINT(EM_DIAGRAM):   else do;
21330     +      IMP_GeographicLiving3 = -0.25050370517151;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21331     +      IMP_GeographicLiving4 = -0.41051213896014;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21332     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21333     +   else do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21334     +      IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   end;
21335     +      IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   end;
21336     +      IMP_GeographicLiving3 = .;
21337     +      IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_HasChildren ;
21338     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop IMP_HasChildren0 IMP_HasChildren1 ;
21339     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_HasChildren ) then do;
21340     +end;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21341     +
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21342     +*** Generate dummy variables for IMP_HasChildren ;
MPRINT(EM_DIAGRAM):   end;
21343     +drop IMP_HasChildren0 IMP_HasChildren1 ;
21344     +if missing( IMP_HasChildren ) then do;
MPRINT(EM_DIAGRAM):   else do;
21345     +   IMP_HasChildren0 = .;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
21346     +   IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21347     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_HasChildren , BEST12. );
21348     +else do;
21349     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
21350     +   _dm12 = put( IMP_HasChildren , BEST12. );
21351     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = -0.45478729278124;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = 0.45478729278124;
MPRINT(EM_DIAGRAM):   end;
21352     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
21353     +      IMP_HasChildren0 = -0.45478729278124;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = 1.09930828188709;
21354     +      IMP_HasChildren1 = 0.45478729278124;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = -1.09930828188709;
21355     +   end;
MPRINT(EM_DIAGRAM):   end;
21356     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
21357     +      IMP_HasChildren0 = 1.09930828188709;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21358     +      IMP_HasChildren1 = -1.09930828188709;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21359     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21360     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
21361     +      IMP_HasChildren0 = .;
21362     +      IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_EducationalDegree ;
21363     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop T_IMP_EducationalDegree ;
21364     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_EducationalDegree ) then do;
21365     +end;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21366     +
MPRINT(EM_DIAGRAM):   end;
21367     +*** Generate dummy variables for IMP_EducationalDegree ;
21368     +drop T_IMP_EducationalDegree ;
MPRINT(EM_DIAGRAM):   else do;
21369     +if missing( IMP_EducationalDegree ) then do;
MPRINT(EM_DIAGRAM):   length _dm15 $ 15;
21370     +   T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   drop _dm15 ;
21371     +end;
MPRINT(EM_DIAGRAM):   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21372     +else do;
21373     +   length _dm15 $ 15; drop _dm15 ;
MPRINT(DMNORMIP):   call dmnorm(_dm15,
21374     +   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21375     +   %DMNORMIP( _dm15 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm15 = '3 - BSC/MSC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 0.74260910169779;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm15 = '2 - HIGH SCHOOL' then do;
21376     +   if _dm15 = '3 - BSC/MSC'  then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -0.77133883677817;
21377     +      T_IMP_EducationalDegree = 0.74260910169779;
MPRINT(EM_DIAGRAM):   end;
21378     +   end;
21379     +   else if _dm15 = '2 - HIGH SCHOOL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '1 - BASIC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -1.64086790737535;
21380     +      T_IMP_EducationalDegree = -0.77133883677817;
MPRINT(EM_DIAGRAM):   end;
21381     +   end;
21382     +   else if _dm15 = '1 - BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '4 - PHD' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 1.74524048924962;
21383     +      T_IMP_EducationalDegree = -1.64086790737535;
MPRINT(EM_DIAGRAM):   end;
21384     +   end;
21385     +   else if _dm15 = '4 - PHD'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21386     +      T_IMP_EducationalDegree = 1.74524048924962;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21387     +   end;
MPRINT(EM_DIAGRAM):   end;
21388     +   else do;
MPRINT(EM_DIAGRAM):   end;
21389     +      T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
21390     +      _DM_BAD = 1;
21391     +   end;
21392     +end;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
21393     +
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
21394     +*** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21395     +
MPRINT(EM_DIAGRAM):   goto CLUS2vlex ;
21396     +
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
21397     +*** Omitted Cases;
21398     +if _dm_bad then do;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
21399     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
21400     +   goto CLUS2vlex ;
21401     +end; *** omitted;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
21402     +
21403     +*** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   array CLUS2vads [5] _temporary_;
21404     +label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
21405     +label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 5;
MPRINT(EM_DIAGRAM):   CLUS2vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ClaimsRate ) then do;
21406     +array CLUS2vads [5] _temporary_;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ClaimsRate - -0.01260105144505 )**2;
21407     +drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ClaimsRate - 0.00030583971189 )**2;
21408     +_vqmvar = 0;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ClaimsRate - -0.02275356560844 )**2;
21409     +do _vqclus = 1 to 5; CLUS2vads [_vqclus] = 0; end;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ClaimsRate - -0.02990614488976 )**2;
21410     +if not missing( T_ClaimsRate ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ClaimsRate - 0.05802616820402 )**2;
21411     +   CLUS2vads [1] + ( T_ClaimsRate - -0.01260105144505 )**2;
MPRINT(EM_DIAGRAM):   end;
21412     +   CLUS2vads [2] + ( T_ClaimsRate - 0.00030583971189 )**2;
21413     +   CLUS2vads [3] + ( T_ClaimsRate - -0.02275356560844 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21414     +   CLUS2vads [4] + ( T_ClaimsRate - -0.02990614488976 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_CustomerMonetaryValue ) then do;
21415     +   CLUS2vads [5] + ( T_ClaimsRate - 0.05802616820402 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CustomerMonetaryValue - 0.06081460838246 )**2;
21416     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CustomerMonetaryValue - 0.00143806283742 )**2;
21417     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CustomerMonetaryValue - 0.01634717870663 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CustomerMonetaryValue - 0.01533956506821 )**2;
21418     +if not missing( T_CustomerMonetaryValue ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CustomerMonetaryValue - -0.06012263937542 )**2;
21419     +   CLUS2vads [1] + ( T_CustomerMonetaryValue - 0.06081460838246 )**2;
MPRINT(EM_DIAGRAM):   end;
21420     +   CLUS2vads [2] + ( T_CustomerMonetaryValue - 0.00143806283742 )**2;
21421     +   CLUS2vads [3] + ( T_CustomerMonetaryValue - 0.01634717870663 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21422     +   CLUS2vads [4] + ( T_CustomerMonetaryValue - 0.01533956506821 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_GrossMonthlySalary ) then do;
21423     +   CLUS2vads [5] + ( T_CustomerMonetaryValue - -0.06012263937542 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_GrossMonthlySalary - -1.09481481093318 )**2;
21424     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_GrossMonthlySalary - -0.86301974179088 )**2;
21425     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_GrossMonthlySalary - 0.15389607215452 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_GrossMonthlySalary - 0.06912925317816 )**2;
21426     +if not missing( T_IMP_GrossMonthlySalary ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_GrossMonthlySalary - 0.96641587399498 )**2;
21427     +   CLUS2vads [1] + ( T_IMP_GrossMonthlySalary - -1.09481481093318 )**2;
MPRINT(EM_DIAGRAM):   end;
21428     +   CLUS2vads [2] + ( T_IMP_GrossMonthlySalary - -0.86301974179088 )**2;
21429     +   CLUS2vads [3] + ( T_IMP_GrossMonthlySalary - 0.15389607215452 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21430     +   CLUS2vads [4] + ( T_IMP_GrossMonthlySalary - 0.06912925317816 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBHealth ) then do;
21431     +   CLUS2vads [5] + ( T_IMP_GrossMonthlySalary - 0.96641587399498 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_PremiumsinLOBHealth - -0.02999705147399 )**2;
21432     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_PremiumsinLOBHealth - 0.21924147942219 )**2;
21433     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_PremiumsinLOBHealth - -0.09196010391119 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_PremiumsinLOBHealth - -0.16861869074931 )**2;
21434     +if not missing( T_IMP_PremiumsinLOBHealth ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_PremiumsinLOBHealth - 0.11752604795898 )**2;
21435     +   CLUS2vads [1] + ( T_IMP_PremiumsinLOBHealth - -0.02999705147399 )**2;
MPRINT(EM_DIAGRAM):   end;
21436     +   CLUS2vads [2] + ( T_IMP_PremiumsinLOBHealth - 0.21924147942219 )**2;
21437     +   CLUS2vads [3] + ( T_IMP_PremiumsinLOBHealth - -0.09196010391119 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21438     +   CLUS2vads [4] + ( T_IMP_PremiumsinLOBHealth - -0.16861869074931 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBLife ) then do;
21439     +   CLUS2vads [5] + ( T_IMP_PremiumsinLOBHealth - 0.11752604795898 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_PremiumsinLOBLife - 1.70486542916924 )**2;
21440     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_PremiumsinLOBLife - 0.0036368677869 )**2;
21441     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_PremiumsinLOBLife - -0.19892770126015 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_PremiumsinLOBLife - -0.56113817937738 )**2;
21442     +if not missing( T_IMP_PremiumsinLOBLife ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_PremiumsinLOBLife - 0.00285760290798 )**2;
21443     +   CLUS2vads [1] + ( T_IMP_PremiumsinLOBLife - 1.70486542916924 )**2;
MPRINT(EM_DIAGRAM):   end;
21444     +   CLUS2vads [2] + ( T_IMP_PremiumsinLOBLife - 0.0036368677869 )**2;
21445     +   CLUS2vads [3] + ( T_IMP_PremiumsinLOBLife - -0.19892770126015 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21446     +   CLUS2vads [4] + ( T_IMP_PremiumsinLOBLife - -0.56113817937738 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBMotor ) then do;
21447     +   CLUS2vads [5] + ( T_IMP_PremiumsinLOBLife - 0.00285760290798 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_PremiumsinLOBMotor - -0.99956847767285 )**2;
21448     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_PremiumsinLOBMotor - -0.32171231910435 )**2;
21449     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_PremiumsinLOBMotor - 0.21655277358803 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_PremiumsinLOBMotor - 0.63363707740186 )**2;
21450     +if not missing( T_IMP_PremiumsinLOBMotor ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_PremiumsinLOBMotor - -0.19603686771174 )**2;
21451     +   CLUS2vads [1] + ( T_IMP_PremiumsinLOBMotor - -0.99956847767285 )**2;
MPRINT(EM_DIAGRAM):   end;
21452     +   CLUS2vads [2] + ( T_IMP_PremiumsinLOBMotor - -0.32171231910435 )**2;
21453     +   CLUS2vads [3] + ( T_IMP_PremiumsinLOBMotor - 0.21655277358803 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21454     +   CLUS2vads [4] + ( T_IMP_PremiumsinLOBMotor - 0.63363707740186 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
21455     +   CLUS2vads [5] + ( T_IMP_PremiumsinLOBMotor - -0.19603686771174 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_PremiumsinLOBWorkComp - 1.49762462905868 )**2;
21456     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.06371076512666 )**2;
21457     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_PremiumsinLOBWorkComp - -0.16562285336111 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_PremiumsinLOBWorkComp - -0.50410184523598 )**2;
21458     +if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_PremiumsinLOBWorkComp - -0.03652389577082 )**2;
21459     +   CLUS2vads [1] + ( T_IMP_PremiumsinLOBWorkComp - 1.49762462905868 )**2;
MPRINT(EM_DIAGRAM):   end;
21460     +   CLUS2vads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.06371076512666 )**2;
21461     +   CLUS2vads [3] + ( T_IMP_PremiumsinLOBWorkComp - -0.16562285336111 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21462     +   CLUS2vads [4] + ( T_IMP_PremiumsinLOBWorkComp - -0.50410184523598 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_REP_CustomerAge ) then do;
21463     +   CLUS2vads [5] + ( T_IMP_PremiumsinLOBWorkComp - -0.03652389577082 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_REP_CustomerAge - -1.36333536717752 )**2;
21464     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_REP_CustomerAge - -1.03140313978479 )**2;
21465     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_REP_CustomerAge - 0.17554148934151 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_REP_CustomerAge - 0.09426762043582 )**2;
21466     +if not missing( T_IMP_REP_CustomerAge ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_REP_CustomerAge - 1.17346246282471 )**2;
21467     +   CLUS2vads [1] + ( T_IMP_REP_CustomerAge - -1.36333536717752 )**2;
MPRINT(EM_DIAGRAM):   end;
21468     +   CLUS2vads [2] + ( T_IMP_REP_CustomerAge - -1.03140313978479 )**2;
21469     +   CLUS2vads [3] + ( T_IMP_REP_CustomerAge - 0.17554148934151 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21470     +   CLUS2vads [4] + ( T_IMP_REP_CustomerAge - 0.09426762043582 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_LOYALTY ) then do;
21471     +   CLUS2vads [5] + ( T_IMP_REP_CustomerAge - 1.17346246282471 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_LOYALTY - 0.0408668676427 )**2;
21472     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_LOYALTY - -0.03628650693045 )**2;
21473     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_LOYALTY - 0.01289927880442 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_LOYALTY - 0.03470928612816 )**2;
21474     +if not missing( T_LOYALTY ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_LOYALTY - -0.0426643998811 )**2;
21475     +   CLUS2vads [1] + ( T_LOYALTY - 0.0408668676427 )**2;
MPRINT(EM_DIAGRAM):   end;
21476     +   CLUS2vads [2] + ( T_LOYALTY - -0.03628650693045 )**2;
21477     +   CLUS2vads [3] + ( T_LOYALTY - 0.01289927880442 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21478     +   CLUS2vads [4] + ( T_LOYALTY - 0.03470928612816 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_PremiumsinLOBHousehold ) then do;
21479     +   CLUS2vads [5] + ( T_LOYALTY - -0.0426643998811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PremiumsinLOBHousehold - 1.01201307468596 )**2;
21480     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PremiumsinLOBHousehold - 0.0982925706468 )**2;
21481     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PremiumsinLOBHousehold - -0.13242330942728 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PremiumsinLOBHousehold - -0.38233839596612 )**2;
21482     +if not missing( T_PremiumsinLOBHousehold ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PremiumsinLOBHousehold - -0.0015702461965 )**2;
21483     +   CLUS2vads [1] + ( T_PremiumsinLOBHousehold - 1.01201307468596 )**2;
MPRINT(EM_DIAGRAM):   end;
21484     +   CLUS2vads [2] + ( T_PremiumsinLOBHousehold - 0.0982925706468 )**2;
21485     +   CLUS2vads [3] + ( T_PremiumsinLOBHousehold - -0.13242330942728 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21486     +   CLUS2vads [4] + ( T_PremiumsinLOBHousehold - -0.38233839596612 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving1 ) then do;
21487     +   CLUS2vads [5] + ( T_PremiumsinLOBHousehold - -0.0015702461965 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_GeographicLiving1 - -0.00342283794804 )**2;
21488     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_GeographicLiving1 - 0.01983451577429 )**2;
21489     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_GeographicLiving1 - -0.00500724992857 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_GeographicLiving1 - 0.00149140944947 )**2;
21490     +if not missing( IMP_GeographicLiving1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_GeographicLiving1 - -0.01124289132675 )**2;
21491     +   CLUS2vads [1] + ( IMP_GeographicLiving1 - -0.00342283794804 )**2;
MPRINT(EM_DIAGRAM):   end;
21492     +   CLUS2vads [2] + ( IMP_GeographicLiving1 - 0.01983451577429 )**2;
21493     +   CLUS2vads [3] + ( IMP_GeographicLiving1 - -0.00500724992857 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21494     +   CLUS2vads [4] + ( IMP_GeographicLiving1 - 0.00149140944947 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving2 ) then do;
21495     +   CLUS2vads [5] + ( IMP_GeographicLiving1 - -0.01124289132675 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_GeographicLiving2 - -0.02104527780592 )**2;
21496     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_GeographicLiving2 - -0.01256610551325 )**2;
21497     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_GeographicLiving2 - 0.0138651621524 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_GeographicLiving2 - 0.00510982800582 )**2;
21498     +if not missing( IMP_GeographicLiving2 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_GeographicLiving2 - 0.00291926478716 )**2;
21499     +   CLUS2vads [1] + ( IMP_GeographicLiving2 - -0.02104527780592 )**2;
MPRINT(EM_DIAGRAM):   end;
21500     +   CLUS2vads [2] + ( IMP_GeographicLiving2 - -0.01256610551325 )**2;
21501     +   CLUS2vads [3] + ( IMP_GeographicLiving2 - 0.0138651621524 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21502     +   CLUS2vads [4] + ( IMP_GeographicLiving2 - 0.00510982800582 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving3 ) then do;
21503     +   CLUS2vads [5] + ( IMP_GeographicLiving2 - 0.00291926478716 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_GeographicLiving3 - 0.00535884089663 )**2;
21504     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_GeographicLiving3 - -0.0033763623975 )**2;
21505     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_GeographicLiving3 - 0.0001136358124 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_GeographicLiving3 - 0.01438524887878 )**2;
21506     +if not missing( IMP_GeographicLiving3 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_GeographicLiving3 - -0.01702698336772 )**2;
21507     +   CLUS2vads [1] + ( IMP_GeographicLiving3 - 0.00535884089663 )**2;
MPRINT(EM_DIAGRAM):   end;
21508     +   CLUS2vads [2] + ( IMP_GeographicLiving3 - -0.0033763623975 )**2;
21509     +   CLUS2vads [3] + ( IMP_GeographicLiving3 - 0.0001136358124 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21510     +   CLUS2vads [4] + ( IMP_GeographicLiving3 - 0.01438524887878 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving4 ) then do;
21511     +   CLUS2vads [5] + ( IMP_GeographicLiving3 - -0.01702698336772 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_GeographicLiving4 - 0.01171882962456 )**2;
21512     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_GeographicLiving4 - -0.00799728646532 )**2;
21513     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_GeographicLiving4 - -0.0039366444855 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_GeographicLiving4 - -0.01626961014543 )**2;
21514     +if not missing( IMP_GeographicLiving4 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_GeographicLiving4 - 0.02257878902464 )**2;
21515     +   CLUS2vads [1] + ( IMP_GeographicLiving4 - 0.01171882962456 )**2;
MPRINT(EM_DIAGRAM):   end;
21516     +   CLUS2vads [2] + ( IMP_GeographicLiving4 - -0.00799728646532 )**2;
21517     +   CLUS2vads [3] + ( IMP_GeographicLiving4 - -0.0039366444855 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21518     +   CLUS2vads [4] + ( IMP_GeographicLiving4 - -0.01626961014543 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren0 ) then do;
21519     +   CLUS2vads [5] + ( IMP_GeographicLiving4 - 0.02257878902464 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_HasChildren0 - -0.04602432352603 )**2;
21520     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_HasChildren0 - -0.32688163225179 )**2;
21521     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_HasChildren0 - -0.44144025617647 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_HasChildren0 - -0.42181195889026 )**2;
21522     +if not missing( IMP_HasChildren0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_HasChildren0 - 1.09492348985863 )**2;
21523     +   CLUS2vads [1] + ( IMP_HasChildren0 - -0.04602432352603 )**2;
MPRINT(EM_DIAGRAM):   end;
21524     +   CLUS2vads [2] + ( IMP_HasChildren0 - -0.32688163225179 )**2;
21525     +   CLUS2vads [3] + ( IMP_HasChildren0 - -0.44144025617647 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
21526     +   CLUS2vads [4] + ( IMP_HasChildren0 - -0.42181195889026 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren1 ) then do;
21527     +   CLUS2vads [5] + ( IMP_HasChildren0 - 1.09492348985863 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( IMP_HasChildren1 - 0.04602432352603 )**2;
21528     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( IMP_HasChildren1 - 0.32688163225179 )**2;
21529     +else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( IMP_HasChildren1 - 0.44144025617647 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( IMP_HasChildren1 - 0.42181195889026 )**2;
21530     +if not missing( IMP_HasChildren1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( IMP_HasChildren1 - -1.09492348985863 )**2;
21531     +   CLUS2vads [1] + ( IMP_HasChildren1 - 0.04602432352603 )**2;
MPRINT(EM_DIAGRAM):   end;
21532     +   CLUS2vads [2] + ( IMP_HasChildren1 - 0.32688163225179 )**2;
21533     +   CLUS2vads [3] + ( IMP_HasChildren1 - 0.44144025617647 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
21534     +   CLUS2vads [4] + ( IMP_HasChildren1 - 0.42181195889026 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_EducationalDegree ) then do;
21535     +   CLUS2vads [5] + ( IMP_HasChildren1 - -1.09492348985863 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMP_EducationalDegree - -1.15953948678551 )**2;
21536     +end;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMP_EducationalDegree - 0.12796989017307 )**2;
21537     +else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMP_EducationalDegree - -0.93986369881044 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMP_EducationalDegree - 0.89911595088543 )**2;
21538     +if not missing( T_IMP_EducationalDegree ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMP_EducationalDegree - 0.09821603208008 )**2;
21539     +   CLUS2vads [1] + ( T_IMP_EducationalDegree - -1.15953948678551 )**2;
MPRINT(EM_DIAGRAM):   end;
21540     +   CLUS2vads [2] + ( T_IMP_EducationalDegree - 0.12796989017307 )**2;
21541     +   CLUS2vads [3] + ( T_IMP_EducationalDegree - -0.93986369881044 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21542     +   CLUS2vads [4] + ( T_IMP_EducationalDegree - 0.89911595088543 )**2;
MPRINT(EM_DIAGRAM):   _vqnvar = 13 - _vqmvar;
21543     +   CLUS2vads [5] + ( T_IMP_EducationalDegree - 0.09821603208008 )**2;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.5124791136477E-11 then do;
21544     +end;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21545     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   end;
21546     +_vqnvar = 13 - _vqmvar;
MPRINT(EM_DIAGRAM):   else do;
21547     +if _vqnvar <= 2.5124791136477E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [1];
21548     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
21549     +end;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 5;
21550     +else do;
MPRINT(EM_DIAGRAM):   if CLUS2vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [_vqclus];
21551     +   _SEGMENT_ = 1; Distance = CLUS2vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
21552     +   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
MPRINT(EM_DIAGRAM):   end;
21553     +   do _vqclus = 2 to 5;
MPRINT(EM_DIAGRAM):   end;
21554     +      if CLUS2vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (13 / _vqnvar));
21555     +         _SEGMENT_ = _vqclus; Distance = CLUS2vads [_vqclus];
MPRINT(EM_DIAGRAM):   end;
21556     +         _vqfzdst = Distance * 0.99999999999988;
21557     +      end;
MPRINT(EM_DIAGRAM):   CLUS2vlex :;
21558     +   end;
21559     +   Distance = sqrt(Distance * (13 / _vqnvar));
MPRINT(EM_DIAGRAM):   ***************************************;
21560     +end;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
21561     +CLUS2vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21562     +
MPRINT(EM_DIAGRAM):   * Clus2: Creating Segment Label;
21563     +***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21564     +*** End Scoring Code from PROC DMVQ ***;
21565     +***************************************;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
21566     +*------------------------------------------------------------*;
21567     +* Clus2: Creating Segment Label;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
21568     +*------------------------------------------------------------*;
21569     +length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21570     +label _SEGMENT_LABEL_='Segment Description';
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
21571     +if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21572     +else
21573     +if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
21574     +else
21575     +if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
21576     +else
21577     +if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
21578     +else
21579     +if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
21580      run;

NOTE: DATA STEP view saved on file EMWS1.CLUS2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
21581      quit;
21582      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
21583      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21584      * Clus2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus2: Computing metadata for TRAIN data;
21585      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus2_TRAIN out=WORK.M3APO0VK noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3APO0VK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3APO0VK(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3APO0VK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3APO0VK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3HZ_WLH NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LSS5YV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HZ_WLH;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
