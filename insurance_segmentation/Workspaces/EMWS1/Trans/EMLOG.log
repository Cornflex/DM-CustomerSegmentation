*------------------------------------------------------------*
User:                raquel
Date:                December 29, 2015
Time:                01:43:36
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:32:21" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 29, 2015
Time:                01:32:21
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2VMHD0T "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2VMHD0T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:32:21" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                raquel";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:32:21" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                raquel";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20861      proc freq data=EMWS1.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Trans_VariableSet noprint;
20862      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
20863      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20864      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
20865      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20866      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20867      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20868      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20869      run;
 
NOTE: There were 5 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20870      title10;
MPRINT(EM_DIAGRAM):   title10;
20871      data WORK.M20YJSR8;
MPRINT(EM_DIAGRAM):    data WORK.M20YJSR8;
20872      set WORK.M20YJSR8;
MPRINT(EM_DIAGRAM):   set WORK.M20YJSR8;
20873      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
20874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.M20YJSR8.
NOTE: The data set WORK.M20YJSR8 has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.Impt_TRAIN;
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
20939      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
20940      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
20941      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20942      data WORK.M07GP3A2;
MPRINT(EM_DIAGRAM):   data WORK.M07GP3A2;
20943      set WORK.M07GP3A2;
MPRINT(EM_DIAGRAM):   set WORK.M07GP3A2;
20944      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
20945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M07GP3A2.
NOTE: The data set WORK.M07GP3A2 has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20946      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20947      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
20948      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20949      %macro DMDBClass;
20950          IMP_CustomerAge(ASC) IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC)
20951         IMP_HasChildren(ASC)
20952      %mend DMDBClass;
20953      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20954      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
20955      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20956      %macro DMDBVar;
20957          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
20958         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
20959         IMP_PremiumsinLOBWorkComp IMP_REP_FirstPolicyYear PremiumsinLOBHousehold
20960      %mend DMDBVar;
20961      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20962      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
20963      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20964      proc dmdb batch data=EMWS1.Impt_TRAIN
20965      dmdbcat=WORK.EM_DMDB
20966      classout=WORK.Transclassout
20967      maxlevel = 513
20968      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Impt_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20969      class %DMDBClass;
MPRINT(DMDBCLASS):   IMP_CustomerAge(ASC) IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC) IMP_HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20970      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_FirstPolicyYear PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):  ;
20971      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 78 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20972      quit;
20973      *--- end code ---*;
 
20974      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
20975      set WORK.M20YJSR8;
MPRINT(EM_DIAGRAM):   set WORK.M20YJSR8;
20976      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
20977      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M20YJSR8.
NOTE: The data set WORK.TRANSINTERVALMETA has 9 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20979      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
20980      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20981      data WORK.M33K70_Y;
MPRINT(EM_DIAGRAM):   data WORK.M33K70_Y;
20982      set WORK.M33K70_Y;
MPRINT(EM_DIAGRAM):   set WORK.M33K70_Y;
20983      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
20984      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M33K70_Y.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M33K70_Y has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
*  Trans: Optimal binning transformation requires a targetvariable.  Transformation will be ignored.
*------------------------------------------------------------*
*------------------------------------------------------------*
*  Trans: Equalize transformation requires a class target variable.  Transformation will be ignored.
*------------------------------------------------------------*
*------------------------------------------------------------*
*  Trans: Optimize equalize max. transformation requires a class target variable.  Transformation will be ignored.
*------------------------------------------------------------*
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.18 seconds
 
20987      %exploreSample(DATA=EMWS1.Impt_TRAIN, OUTPUT=EMWS1.Trans_SAMPLE_DATA, METADATA=EMWS1.Impt_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
20988     +/*------------------------------------------------------------------
20989     +  MACRO EXPLOREOBS
20991     +  SUPPORT:  SASDHD - David Duling
20992     +  PRODUCT:  Enterprise Miner
20994     +  DESCRIPTION:
20995     +  Generates maximum and default numbers of observations to
20996     +  download for visualization depending on the record length.
20998     +  Values were determined by trial and error using typical
20999     +  Windows workstation configurations.
21001     +  Discrete sets of values are returned so that user experience
21002     +  will be consitent with similar sized data sets.
21004     +  These macro variables are set:
21005     +  _exploreobs_max -- maximum number of obs downloadable
21006     +  _exploreobs_def -- default number of obs to be downloaded
21007     +  _exploreobs_recl - record length.  Might be useful for reporting.
21009     +  Use the _exploreobs_max to set limit the GUI selection of
21010     +  observations for downloading.  The GUI selection for obs
21011     +  could be reduced to "Default" and "Max".
21013     +  Parameters
21014     +  data=   libname.memname of input data
21015     +  vars=   subset list of variables.
21016     +          downloading 1 out of 500 really does work like downloading
21017     +          1 out of 1 vars.  Users may select a subset of vars for
21018     +                   visualizations.  Pass in the list as space delimited
21019     +          var names.  If vars is not specified, the record length
21020     +          of the entire data will be used.
21021     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
21023     +  Control
21024     +  Users may control the values by entering these macro variables.
21025     +            EM_EXPLOREOBS_MAX
21026     +            EM_EXPLOREOBS_DEFAULT
21027     +  These values override the computed values.
21029     +  Debugging
21030     +  %let _exploreobs_debug=1 ;
21031     +--------------------------------------------------------------------
21032     +  HISTORY: 20APR2004. sasdhd. pushed.
21033     +           18DEC2004. sasdhd. S0280556.
21034     +           07SEP2007. sasdhd. HK1009586
21035     +--------------------------------------------------------------------*/
21037     +%macro exploreobs(data=,vars=, nbytes=) ;
21039     +   /*--- variable definitions ---*/
21040     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
21041     +   %local xobs xvars xlen vlen xi vname vlist ;
21042     +   %local _exp_source _exp_notes ;
21044     +   /*--- USER definitions ---*/
21045     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
21047     +   /*--- variable intializations ---*/
21048     +   %let _exploreobs_max=0 ;
21049     +   %let _exploreobs_def=0 ;
21050     +   %let _exploreobs_recl=0 ;
21051     +   %let xvars= 0 ;
21052     +   %let xlen = 0 ;
21053     +   %let xobs = 0 ;
21055     +   /*--- data error checks ---*/
21056     +   %if "&data" eq "" %then %do ;
21057     +            %put NOTE: DATA is not specified. ;
21058     +            %goto term ;
21059     +      %end ;
21061     +   %let dsid=%sysfunc(open(&data)) ;
21062     +   %if not &dsid %then %do ;
21063     +            %put NOTE: DATA &data is not available. ;
21064     +            %goto term ;
21065     +      %end ;
21067     +   /*--- if a vars list exists generate a subset ---*/
21068     +   %if &vars ne %then %do ;
21069     +         %let dsid=%sysfunc(close(&dsid)) ;
21070     +         %if &_exploreobs_debug ne 1 %then %do ;
21071     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
21072     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
21073     +                  options nosource nonotes ;
21074     +         %end ;
21075     +         data _exploreobs_temp_data ;
21076     +         set &data(obs=0) ;
21077     +          keep &vars ;
21078     +         run;
21079     +         %if &_exploreobs_debug ne 1 %then %do ;
21080     +                  options &_exp_source &_exp_notes ;
21081     +         %end ;
21082     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
21083     +         %if &dsid eq 0 %then %do ;
21084     +                  %put NOTE: Sample is not available.;
21085     +                  %goto term ;
21086     +            %end ;
21087     +      %end ;
21089     +   /*--- get var attributes ---*/
21090     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
21091     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
21092     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
21093     +   %let dsid= %sysfunc(close(&dsid)) ;
21095     +   /*--- set default and max obs ---*/
21096     +   %let _exploreobs_recl=%eval(&xlen) ;
21097     +   %if &_exploreobs_recl eq 0 %then %do ;
21098     +             %let _exploreobs_max= 0 ;
21099     +             %let _exploreobs_def= 0 ;
21100     +             %goto term ;
21102     +   %end ;
21103     +   %else
21104     +   %if &_exploreobs_recl le 32 %then %do ;
21105     +             %let _exploreobs_max=100000 ;
21106     +             %let _exploreobs_def= 10000 ;
21107     +   %end ;
21108     +   %else
21109     +   %if &_exploreobs_recl le 128 %then %do ;
21110     +             %let _exploreobs_max=60000 ;
21111     +             %let _exploreobs_def= 6000 ;
21112     +   %end ;
21113     +   %else
21114     +   %if &_exploreobs_recl lt 1000 %then %do ;
21115     +             %let _exploreobs_max=20000 ;
21116     +             %let _exploreobs_def= 2000 ;
21117     +   %end ;
21118     +   %else
21119     +   %if &_exploreobs_recl lt 5000 %then %do ;
21120     +             %let _exploreobs_max= 10000 ;
21121     +             %let _exploreobs_def=  1000 ;
21122     +   %end ;
21123     +   %else
21124     +   %if &_exploreobs_recl lt 20000 %then %do ;
21125     +             %let _exploreobs_max= 5000 ;
21126     +             %let _exploreobs_def=  500 ;
21127     +   %end ;
21128     +   %else %do ;
21129     +             %let _exploreobs_max= 1000 ;
21130     +             %let _exploreobs_def=  200 ;
21131     +   %end ;
21133     +   /*--- Users options ---*/
21134     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
21135     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
21136     +   %end;
21137     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
21138     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
21139     +   %end;
21141     +    /*--- S0868273 ---*/
21142     +    %if "&NBYTES" ne "" %then %do;
21143     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
21144     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
21145     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
21146     +       %end;
21148     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
21149     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
21150     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
21151     +          %if ^&_exploreobs_def %then
21152     +              %let _exploreobs_def = 1;
21154     +       %end;
21155     +    %end;
21157     +   /*--- Terminate ---*/
21158     +   %term:
21160     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
21161     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Impt_TRAIN : vars= 26 : recl= 218 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS1.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS1.Impt_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 2000 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: The data set EMWS1.TRANS_SAMPLE_DATA has 2000 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:43:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 29, 2015
Time:                01:43:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1T0_E78 "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1T0_E78 new;
MPRINT(EM_DIAGRAM):   run;
20768      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
20769      TOTAL_PREMIUM = IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold;
MPRINT(EM_DIAGRAM):   TOTAL_PREMIUM = IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold;
20770      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT1.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20771      quit;
 
20772      data WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT1;
20773      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
20774      retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
20775      set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
20776      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK._CODEINPUT1 has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20777      proc sort data=WORK._CODEINPUT1 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT1 NODUPKEY;
20778      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
20779      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._CODEINPUT1.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT1 has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20780      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
20781      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT1 to WORK.TRANS_FORMULAVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK.TRANS_FORMULAVARS has 5 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20782      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
20783      LOYALTY = YEAR( DATE()) - IMP_FirstPolicyYear;
MPRINT(EM_DIAGRAM):   LOYALTY = YEAR( DATE()) - IMP_FirstPolicyYear;
20784      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT2.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20785      quit;
 
20786      data WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT2;
20787      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
20788      retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
20789      set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
20790      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20791      proc sort data=WORK._CODEINPUT2 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT2 NODUPKEY;
20792      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
20793      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20794      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
20795      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT2 to WORK.TRANS_FORMULAVARS.
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 1 observations added.
NOTE: The data set WORK.TRANS_FORMULAVARS has 6 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20796      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):    data WORK.TRANS_FORMULAVARS;
20797      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
20798      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
20799      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
20800      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20801      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
20802      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
20803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20804      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
20805      set EMWS1.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
20806      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
20807      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
20808      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20809      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
20810      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
20811      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20812      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS;
20813      merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
20814      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
20815      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
20816      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 14 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_FORMULAVARS has 5 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20817      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
20818      by _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   by _FormulaNum UNAME;
20819      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 5 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20820      data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
20821      length ROLE $32 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 REPORT $1;
20822      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
20823      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
20824      if INPUTROLE = 'TARGET' then output _target;
MPRINT(EM_DIAGRAM):   if INPUTROLE = 'TARGET' then output _target;
20825      if first._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if first._FormulaNum then do;
20826      if ^last._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if ^last._FormulaNum then do;
20827      INPUTNAME='';
MPRINT(EM_DIAGRAM):   INPUTNAME='';
20828      INPUTROLE='';
MPRINT(EM_DIAGRAM):   INPUTROLE='';
20829      INPUTTYPE='';
MPRINT(EM_DIAGRAM):   INPUTTYPE='';
20830      INPUTREPORT='';
MPRINT(EM_DIAGRAM):   INPUTREPORT='';
20831      end;
MPRINT(EM_DIAGRAM):   end;
20832      output WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   output WORK.TRANS_FORMULAVARS;
20833      end;
MPRINT(EM_DIAGRAM):   end;
20834      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 1 observations and 10 variables.
NOTE: The data set WORK._TARGET has 0 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20835      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
20836      set EMWS1.Trans_FORMULA;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_FORMULA;
20837      _FormulaNum = _N_;
MPRINT(EM_DIAGRAM):   _FormulaNum = _N_;
20838      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.TRANS_FORMULA.
NOTE: The data set WORK._TEMP has 2 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20839      data WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CODEFORMULA;
20840      length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
MPRINT(EM_DIAGRAM):   length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
20841      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA = "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,  NOQUOTE))" LEVEL =
20842         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,  NOQUOTE))" REPORT = "%sysfunc(sasmsg(sashelp.dmine, meta_report_vlabel,  NOQUOTE))" _targetFlag = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetbased_vlabel,  NOQUOTE))" INPUTNAME =
20843         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputname_vlabel,  NOQUOTE))" INPUTLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputlevel_vlabel,  NOQUOTE))" INPUTROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputrole_vlabel,  NOQUOTE))" INPUTTYPE =
20844         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputtype_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FORMULA = "Formula" ROLE = "Role" LEVEL = "Measurement Level" REPORT = "Report" _targetFlag = "Target Based" INPUTNAME = "Input Name" INPUTLEVEL = "Input Level" INPUTROLE = "Input Role" INPUTTYPE = "Input
Type";
20845      drop _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   drop _FormulaNum UNAME;
20846      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
20847      merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
MPRINT(EM_DIAGRAM):   merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
20848      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
20849      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
20850      if _c then _targetFlag=1;
MPRINT(EM_DIAGRAM):   if _c then _targetFlag=1;
20851      if INPUT ne '' then if _a and ^_b then delete;
MPRINT(EM_DIAGRAM):   if INPUT ne '' then if _a and ^_b then delete;
20852      if ROLE = '' then do;
MPRINT(EM_DIAGRAM):   if ROLE = '' then do;
20853      if INPUTROLE = '' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if INPUTROLE = '' then ROLE='INPUT';
20854      else ROLE = INPUTROLE;
MPRINT(EM_DIAGRAM):   else ROLE = INPUTROLE;
20855      end;
MPRINT(EM_DIAGRAM):   end;
20856      if REPORT = '' then do;
MPRINT(EM_DIAGRAM):   if REPORT = '' then do;
20857      if INPUTREPORT = '' then REPORT='N';
MPRINT(EM_DIAGRAM):   if INPUTREPORT = '' then REPORT='N';
20858      else REPORT = INPUTREPORT;
MPRINT(EM_DIAGRAM):   else REPORT = INPUTREPORT;
20859      end;
MPRINT(EM_DIAGRAM):   end;
20860      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INPUT is uninitialized.
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: There were 1 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 0 observations read from the data set WORK._TARGET.
NOTE: The data set WORK.TRANS_CODEFORMULA has 2 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20861      filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAFLOWCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAFLOWCODE.sas";
20862      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20863      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
20864      file _code;
MPRINT(EM_DIAGRAM):   file _code;
20865      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
20866      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
20867      end;
MPRINT(EM_DIAGRAM):   end;
20868      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20869      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
20870      end;
MPRINT(EM_DIAGRAM):   end;
20871      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
20872      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
20873      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
20874      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
20875      end;
MPRINT(EM_DIAGRAM):   end;
20876      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
20877      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
20878      end;
MPRINT(EM_DIAGRAM):   end;
20879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAFLOWCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=29Dec2015:01:43:35,
      Create Time=29Dec2015:01:43:35
 
NOTE: 2 records were written to the file _CODE.
      The minimum record length was 47.
      The maximum record length was 142.
NOTE: There were 2 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20880      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
20881      filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAPUBLISHCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAPUBLISHCODE.sas";
20882      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20883      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
20884      file _code;
MPRINT(EM_DIAGRAM):   file _code;
20885      if _targetFlag eq 0 then do;
MPRINT(EM_DIAGRAM):   if _targetFlag eq 0 then do;
20886      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
20887      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
20888      end;
MPRINT(EM_DIAGRAM):   end;
20889      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
20890      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
20891      end;
MPRINT(EM_DIAGRAM):   end;
20892      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
20893      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
20894      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
20895      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
20896      end;
MPRINT(EM_DIAGRAM):   end;
20897      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
20898      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
20899      end;
MPRINT(EM_DIAGRAM):   end;
20900      end;
MPRINT(EM_DIAGRAM):   end;
20901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULAPUBLISHCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=29Dec2015:01:43:35,
      Create Time=29Dec2015:01:43:35
 
NOTE: 2 records were written to the file _CODE.
      The minimum record length was 47.
      The maximum record length was 142.
NOTE: There were 2 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20902      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
20903      filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULADELTACODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULADELTACODE.sas";
20904      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
20905      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
20906      file _code;
MPRINT(EM_DIAGRAM):   file _code;
20907      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
20908      if ROLE eq '' then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if ROLE eq '' then ROLE = 'REJECTED';
20909      if REPORT eq '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   if REPORT eq '' then REPORT = 'N';
20910      String = 'if NAME="'!!strip(name)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(name)!!'" then do;';
20911      put / string;
MPRINT(EM_DIAGRAM):   put / string;
20912      String = '   ROLE ="'!!strip(role)!!'";';
MPRINT(EM_DIAGRAM):   String = '   ROLE ="'!!strip(role)!!'";';
20913      put string;
MPRINT(EM_DIAGRAM):   put string;
20914      String = '   REPORT ="'!!strip(report)!!'";';
MPRINT(EM_DIAGRAM):   String = '   REPORT ="'!!strip(report)!!'";';
20915      put string;
MPRINT(EM_DIAGRAM):   put string;
20916      if LEVEL ne '' then do;
MPRINT(EM_DIAGRAM):   if LEVEL ne '' then do;
20917      String = '   LEVEL ="'!!strip(level)!!'";';
MPRINT(EM_DIAGRAM):   String = '   LEVEL ="'!!strip(level)!!'";';
20918      put string;
MPRINT(EM_DIAGRAM):   put string;
20919      end;
MPRINT(EM_DIAGRAM):   end;
20920      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
20921      if INPUTNAME ne '' then do;
MPRINT(EM_DIAGRAM):   if INPUTNAME ne '' then do;
20922      String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
20923      put String;
MPRINT(EM_DIAGRAM):   put String;
20924      end;
MPRINT(EM_DIAGRAM):   end;
20925      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\FORMULADELTACODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=29Dec2015:01:43:35,
      Create Time=29Dec2015:01:43:35
 
NOTE: 12 records were written to the file _CODE.
      The minimum record length was 0.
      The maximum record length was 32.
NOTE: There were 2 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20926      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
20927      proc print data = EMWS1.Trans_FORMULA(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Trans_FORMULA(obs=500) noobs label;
20928      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_formulatransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Formula Transformations";
20929      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name ROLE LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
20930      var Name ROLE LEVEL FORMULA;
20931      run;
 
NOTE: There were 2 observations read from the data set EMWS1.TRANS_FORMULA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20932      title9;
MPRINT(EM_DIAGRAM):   title9;
20933      title10;
MPRINT(EM_DIAGRAM):   title10;
20934      filename emflow "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20935      *------------------------------------------------------------*;
20936      * Trans: Scoring DATA data;
20937      *------------------------------------------------------------*;
20938      data EMWS1.Trans_TRAIN
20939      / view=EMWS1.Trans_TRAIN
20940      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_TRAIN / view=EMWS1.Trans_TRAIN ;
20941      set EMWS1.Impt_TRAIN
20942      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_TRAIN ;
20943      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas.
20944     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20945     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
20946     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20947     +TOTAL_PREMIUM =IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   TOTAL_PREMIUM =IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold ;
20948     +LOYALTY =YEAR( DATE()) -  IMP_FirstPolicyYear ;
MPRINT(EM_DIAGRAM):   LOYALTY =YEAR( DATE()) - IMP_FirstPolicyYear ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
20949      run;
 
NOTE: DATA STEP view saved on file EMWS1.TRANS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20950      quit;
20951      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
20952      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20953      * Trans: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Trans: Computing metadata for TRAIN data;
20954      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Trans_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Trans_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Trans_TRAIN out=WORK.M384GCME noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M384GCME;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M384GCME(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M384GCME;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M384GCME;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0TN217E NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2588NEC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TN217E;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Impt_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Trans";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="TOTAL_PREMIUM" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="LOYALTY" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:43:36" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 29, 2015
Time:                01:43:36
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O10EHFZF "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O10EHFZF new;
MPRINT(EM_DIAGRAM):   run;
21291      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21292      * &msgString;
MPRINT(EM_DIAGRAM):   * &msgString;
21293      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21294      filename _flowref "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   filename _flowref "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
21295      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
21296      %INCLUDE _flowref;
NOTE: %INCLUDE (level 1) file _FLOWREF is file \\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas.
21297     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21298     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
21299     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21300     +TOTAL_PREMIUM =IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   TOTAL_PREMIUM =IMP_PremiumsinLOBHealth + IMP_PremiumsinLOBLife + IMP_PremiumsinLOBMotor + IMP_PremiumsinLOBWorkComp + PremiumsinLOBHousehold ;
21301     +LOYALTY =YEAR( DATE()) -  IMP_FirstPolicyYear ;
MPRINT(EM_DIAGRAM):   LOYALTY =YEAR( DATE()) - IMP_FirstPolicyYear ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
21302      run;
 
NOTE: Dependency structure written to data set WORK.TRANS_SCOREINPUTS.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21303      quit;
21304      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
21305      set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
21306      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
21307      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
21308      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21309      proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
21310      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21312      filename _flowref;
MPRINT(EM_DIAGRAM):   filename _flowref;
NOTE: Fileref _FLOWREF has been deassigned.
21313      %let SYSCC = 0;
21314      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21315      * transformcombinevariables;
MPRINT(EM_DIAGRAM):   * transformcombinevariables;
21316      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21317      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
21318      length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
MPRINT(EM_DIAGRAM):   length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
21319      set
21320      EMWS1.Trans_FORMULA
21321      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_FORMULA ;
21322      _MetaFlag=0;
MPRINT(EM_DIAGRAM):   _MetaFlag=0;
21323      uname = upcase(name);
MPRINT(EM_DIAGRAM):   uname = upcase(name);
21324      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable inputName is uninitialized.
NOTE: Variable inputLevel is uninitialized.
NOTE: Variable inputType is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TRANS_FORMULA.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 2 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21325      data _temp;
MPRINT(EM_DIAGRAM):    data _temp;
21326      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
21327      set EMWS1.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
21328      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
21329      where upcase(CREATOR) = upcase("Trans");
MPRINT(EM_DIAGRAM):   where upcase(CREATOR) = upcase("Trans");
21330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
      WHERE UPCASE(CREATOR)='TRANS';
NOTE: The data set WORK._TEMP has 3 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21331      proc sort data=_temp(drop=CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=_temp(drop=CREATOR);
21332      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21333      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21334      proc sort data=WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.TRANS_OUTPUTVARS;
21335      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21336      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 2 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21337      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
21338      merge WORK.TRANS_OUTPUTVARS _temp;
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_OUTPUTVARS _temp;
21339      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21340      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21341      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21342      * Trans: Get Metadata for the Score Inputs Variables;
MPRINT(EM_DIAGRAM):   * Trans: Get Metadata for the Score Inputs Variables;
21343      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21344      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
21345      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
21346      set EMWS1.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
21347      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
21348      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21349      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
21350      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21351      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21352      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
21353      merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
21354      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
21355      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
21356      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: There were 14 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21357      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21358      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
21359      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21360      proc dmdb data=EMWS1.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS1.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
21361      ;
MPRINT(EM_DIAGRAM):   ;
21362      var
21363      IMP_PremiumsinLOBHealth
21364      IMP_PremiumsinLOBLife
21365      IMP_PremiumsinLOBMotor
21366      IMP_PremiumsinLOBWorkComp
21367      PremiumsinLOBHousehold
21368      IMP_FirstPolicyYear
21369      LOYALTY
21370      TOTAL_PREMIUM
21371      ;
MPRINT(EM_DIAGRAM):   var IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold IMP_FirstPolicyYear LOYALTY TOTAL_PREMIUM ;
21372      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 56659:24
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK.TRANS_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
21373      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21374      * Trans: Combine Information and Statistics for Class Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Class Variables;
21375      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21376      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
21377      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21378      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21379      proc sort data=WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_CLASSSTATS;
21380      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21382      data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
21383      retain nlevel nmiss;
MPRINT(EM_DIAGRAM):   retain nlevel nmiss;
21384      set WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS;
21385      by Name;
MPRINT(EM_DIAGRAM):   by Name;
21386      if first.Name then do;
MPRINT(EM_DIAGRAM):   if first.Name then do;
21387      nlevel= 0;
MPRINT(EM_DIAGRAM):   nlevel= 0;
21388      nmiss= 0;
MPRINT(EM_DIAGRAM):   nmiss= 0;
21389      end;
MPRINT(EM_DIAGRAM):   end;
21390      if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
MPRINT(EM_DIAGRAM):   if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
21391      else nlevel + 1;
MPRINT(EM_DIAGRAM):   else nlevel + 1;
21392      if last.name then output;
MPRINT(EM_DIAGRAM):   if last.name then output;
21393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21394      /*Merge Statistics for Class Output Vars */
21395      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
21396      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
21397      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
21398      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21399      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
21400      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
21401      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
21402      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
21403      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
21404      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
21405      if Formula = '' then Formula = "User Code";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "User Code";
21406      end;
MPRINT(EM_DIAGRAM):   end;
21407      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21408      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
21409      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21410      /*Merge Statistics for Class Input Vars */
21411      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
21412      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21413      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21414      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
21415      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
21416      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21417      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
21418      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
21419      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
21420      end;
MPRINT(EM_DIAGRAM):   end;
21421      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21422      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21423      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21424      * Trans: Combine Information and Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Interval Variables;
21425      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21426      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
21427      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21428      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21429      proc sort data=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_VARSTATS;
21430      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21431      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set WORK.TRANS_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Output Vars;
21432      *Merge Statistics for Output Vars;
21433      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
21434      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
21435      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
21436      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21437      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
21438      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
21439      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
21440      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
21441      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
21442      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
21443      if Formula = '' then Formula = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "Mixture of variables";
21444      end;
MPRINT(EM_DIAGRAM):   end;
21445      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21446      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
21447      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 8 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Input Vars;
21448      *Merge Statistics for Input Vars;
21449      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
21450      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21452      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
21453      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
21454      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21455      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
21456      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
21457      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
21458      end;
MPRINT(EM_DIAGRAM):   end;
21459      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21460      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 8 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21461      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21462      * Trans: Combine statistics for class and interval variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine statistics for class and interval variables;
21463      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21464      data EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_STATISTICS;
21465      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
21466      label SOURCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_source_vlabel,  NOQUOTE))" _METHOD_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_method_vlabel,  NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA =
21467         "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,   NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel, NOQUOTE))" NMISS =
21468         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
21469         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
21470         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" _METHOD_ = "Method" NAME = "Variable Name" FORMULA = "Formula" NLEVEL = "Number of Levels" N = "Non Missing" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS
= "Skewness" KURTOSIS = "Kurtosis" LABEL = "Label";
21471      set
21472      WORK.TRANS_CLASSSTATS
21473      WORK.TRANS_VARSTATS
21474      ;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS WORK.TRANS_VARSTATS ;
21475      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
21476      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 8 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 8 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21477      proc sort data=EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_STATISTICS;
21478      by SOURCE _METHOD_ NAME;
MPRINT(EM_DIAGRAM):   by SOURCE _METHOD_ NAME;
21479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.TRANS_STATISTICS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 8 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21480      proc sort data = EMWS1.Trans_STATISTICS NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Trans_STATISTICS NOTHREADS;
21481      by SOURCE NAME;
MPRINT(EM_DIAGRAM):   by SOURCE NAME;
21482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.TRANS_STATISTICS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 8 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21483      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21484      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
21485      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Interval Variables";
21486      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
21487      var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
21488      where SOURCE eq 'INPUT' and mean ne .;
21489      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21490      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
21491      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervaloutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Interval Variables";
21492      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
21493      var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
21494      where SOURCE eq 'OUTPUT' and mean ne .;
21495      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21496      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
21497      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Class Variables";
21498      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
21499      var Name NLEVEL NMISS;
21500      where SOURCE eq 'INPUT' and nlevel ne .;
21501      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21502      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
21503      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classoutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Class Variables";
21504      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
21505      var Name _METHOD_ NLEVEL NMISS;
21506      where SOURCE eq 'OUTPUT' and nlevel ne .;
21507      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21508      title9;
MPRINT(EM_DIAGRAM):   title9;
21509      title10;
MPRINT(EM_DIAGRAM):   title10;
21510      data EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS1.Trans_EMSCOREVAR;
21511      length Name $32 formula $300 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $300 file $200;
21512      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
21513      set EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_STATISTICS;
21514      where SOURCE='Output';
MPRINT(EM_DIAGRAM):   where SOURCE='Output';
21515      select( _METHOD_);
MPRINT(EM_DIAGRAM):   select( _METHOD_);
21516      when('Computed') do;
MPRINT(EM_DIAGRAM):   when('Computed') do;
21517      file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
21518      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
21519      end;
MPRINT(EM_DIAGRAM):   end;
21520      when('Formula') do;
MPRINT(EM_DIAGRAM):   when('Formula') do;
21521      if Formula eq 'Mixture of variables' then do;
MPRINT(EM_DIAGRAM):   if Formula eq 'Mixture of variables' then do;
21522      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
21523      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
21524      end;
MPRINT(EM_DIAGRAM):   end;
21525      if Formula = 'User Code' then do;
MPRINT(EM_DIAGRAM):   if Formula = 'User Code' then do;
21526      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
21527      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
21528      end;
MPRINT(EM_DIAGRAM):   end;
21529      end;
MPRINT(EM_DIAGRAM):   end;
21530      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
21531      end;
MPRINT(EM_DIAGRAM):   end;
21532      output;
MPRINT(EM_DIAGRAM):   output;
21533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE SOURCE='Output';
NOTE: The data set EMWS1.TRANS_EMSCOREVAR has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
