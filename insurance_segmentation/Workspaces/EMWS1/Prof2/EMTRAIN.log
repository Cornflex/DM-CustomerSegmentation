MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:28:03" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 30, 2015
Time:                15:28:03
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0W7EZ37 "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0W7EZ37 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:28:03" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:28:03" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
28840      proc freq data=EMWS1.Prof2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_VariableSet noprint;
28841      table ROLE*LEVEL/out=WORK.Prof2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Prof2META;
28842      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set WORK.PROF2META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

28843      proc print data=WORK.Prof2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Prof2META label noobs;
28844      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
28845      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
28846      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28847      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
28848      run;

NOTE: There were 8 observations read from the data set WORK.PROF2META.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28849      title10;
MPRINT(EM_DIAGRAM):   title10;
28850      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'insurance_segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'insurance segmentation';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29195      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29196      * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
29197      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
29198      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

29199      %let EMEXCEPTIONSTRING=;
29200      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29201      * TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof2;
29202      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29203      %let EM_ACTION = TRAIN;
29204      %let syscc = 0;
29205      %macro main;
29206         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
29207             options MPRINT;
29208         %end;
29209      
29210         filename temp catalog 'sashelp.emexpl.profile_macros.source';
29211         %include temp;
29212         filename temp;
29213      
29214         /* Initialize property macro variables */
29215         %SetProperties;
29216      
29217         %if %upcase(&EM_ACTION) = CREATE %then %do;
29218      
29219             filename temp catalog 'sashelp.emexpl.profile_create.source';
29220             %include temp;
29221             filename temp;
29222             %create;
29223         %end;
29224         %else
29225         %if %upcase(&EM_ACTION) = TRAIN %then %do;
29226      
29227             filename temp catalog 'sashelp.emexpl.profile_train.source';
29228             %include temp;
29229             filename temp;
29230             %train;
29231         %end;
29232      %mend main;
29233      
29234      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
29235     +%macro SetProperties;
29236     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
29237     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
29238     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
29239     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
29240     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
29241     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
29242     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
29243     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
29244     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
29245     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
29246     +%mend SetProperties;
29249     +%macro makeVarMacros(level= );
29251     +    %let numvars = 0;
29252     +    %let where   = '';
29254     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29255     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
29256     +    %else
29257     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
29259     +    %if &level = INTERVAL %then %do;
29260     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
29261     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29262     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
29263     +    %end;
29264     +    %else %do;
29265     +        %if &level = NOMINAL %then %do;
29266     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
29267     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
29268     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
29269     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
29270     +             %end;
29271     +             %else
29272     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
29274     +        %end;
29275     +        %else %do;
29276     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
29277     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29278     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
29279     +        %end;
29280     +    %end;
29282     +    %if &numvars>0 %then %do;
29283     +         %let numloop = %sysfunc(ceil(&numvars/10000));
29284     +         %let loopcount = 0;
29286     +         %do %while((&numloop - &loopcount) > 0);
29287     +             %let first = %eval((&loopcount*10000) + 1);
29288     +             %let last  = %eval(&first + 10000);
29289     +             %let loopcount = %eval(&loopcount +1);
29290     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
29291     +             filename X catalog "&centry";
29292     +             data _null_;
29293     +                length _STRING_ $80;
29294     +                retain _STRING_ ;
29295     +                file X;
29296     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
29298     +                where &where;
29300     +                if _N_=1 then
29301     +                   put '%macro _PROFVAR;';
29303     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
29304     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
29305     +                   if eof then do;
29306     +                      put _STRING_;
29307     +                      put '%mend _PROFVAR;';
29308     +                   end;
29309     +                end;
29310     +                else do;
29311     +                   put _STRING_;
29312     +                  _string_ = TRIM(NAME);
29313     +                   if eof then do;
29314     +                      put _string_;
29315     +                      put '%mend _PROFVAR;';
29316     +                   end;
29317     +                end;
29318     +             run;
29319     +             filename X;
29320     +         %end;
29321     +    %end;
29323     +%mend makeVarMacros;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
29326     +%macro _looparbor(level=, target=, rules=);
29327     +    %local where;
29329     +    %if (&level eq or &target eq ) %then %goto doenda;
29330     +    %if &rules eq %then &rules = _TEMPRULE;
29332     +    %let lnumvars = 0;
29333     +    %let where   = '';
29335     +    %if &level = INTERVAL %then %do;
29336     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
29337     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29338     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
29339     +    %end;
29340     +    %else %do;
29341     +        %if &level = NOMINAL %then %do;
29342     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
29343     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29344     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
29345     +        %end;
29346     +        %else %do;
29347     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
29348     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29349     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
29350     +        %end;
29351     +    %end;
29353     +    %if &lnumvars>0 %then %do;
29354     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
29355     +         %let loopcount = 0;
29357     +         %do %while((&numloop - &loopcount) > 0);
29358     +             %let loopcount = %eval(&loopcount +1);
29359     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
29360     +             filename X catalog "&centry";
29361     +             %inc X;
29363     +             proc arbor data=&EM_NODEID._TMP
29365     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
29366     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
29367     +                 Maxbranch=5 Maxdepth=1
29368     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
29369     +             %end;
29370     +             %else %do;
29371     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
29372     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
29373     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
29374     +             %end;
29376     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
29378     +                input %_PROFVAR
29380     +                    / level = &level;
29381     +                target _SEG / level=binary;
29383     +                Performance Disk NodeSize=10000;
29384     +                Assess NoValidata measure=MISC;
29385     +                SUBTREE BEST;
29387     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
29388     +                    save IMPORTANCE=_LOOPTEMPRULE;
29389     +                %end;
29390     +                %else %do;
29391     +                    save RULES=_LOOPTEMPRULE;
29392     +                %end;
29393     +             run;
29394     +             quit;
29396     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
29397     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
29398     +                 run;
29399     +                 proc datasets lib=work nolist mt=(DATA VIEW);
29400     +                    delete _LOOPTEMPRULE;
29401     +                 run;
29402     +                 quit;
29403     +             %end;
29406     +             filename X;
29407     +         %end;
29408     +     %end;
29410     +   %doenda:
29412     +%mend _looparbor;
29414     +%macro _arbor(target=, rules=, fit=);
29415     +   %local _numnomvars _numordvars _numintvars;
29417     +   %if &target eq  %then %goto doendc;
29418     +   %if &rules eq %then &rules = _TEMPRULE;
29419     +   %if &fit   eq %then &fit   = _FIT;
29421     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
29422     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29423     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
29426     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
29427     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29428     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
29430     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
29431     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29432     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
29434     +   proc arbor data=&EM_NODEID._TMP
29436     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
29437     +      Criterion=GINI Leafsize=5 Mincatsize = 5
29438     +      Maxbranch=5 Maxdepth=1
29439     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
29440     +   %end;
29441     +   %else %do;
29442     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
29443     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
29444     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
29445     +   %end;
29447     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
29449     +      %if &_numintvars %then %do;
29450     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
29452     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
29453     +              %EM_INTERVAL_TARGET
29454     +          %end;
29456     +              / level = interval;
29457     +      %end;
29460     +      %if &_numnomvars %then %do;
29461     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
29463     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
29464     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
29465     +          %end;
29467     +              / level = nominal;
29468     +      %end;
29470     +      %if &_numordvars %then %do;
29471     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
29473     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
29474     +              %EM_ORDINAL_TARGET
29475     +         %end;
29477     +             / level = ordinal;
29478     +      %end;
29480     +      target _SEG / level=binary;
29482     +      Performance Disk NodeSize=10000;
29483     +      Assess
29485     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
29486     +          Validata=&EM_NODEID._VALIDTMP
29487     +      %end;
29488     +      %else %do;
29489     +          NoValidata
29490     +      %end;
29492     +      measure=MISC;
29493     +      SUBTREE BEST;
29495     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
29496     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
29497     +                role=TRAIN;
29498     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
29499     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
29500     +                role=VALID;
29501     +          %end;
29503     +          save IMPORTANCE=_RULE;
29504     +      %end;
29505     +      %else %do;
29506     +          save RULES=_RULE;
29507     +      %end;
29509     +      ;
29510     +   run;
29511     +   quit;
29513     +   %if %sysfunc(exist(_RULE)) %then %do;
29514     +       proc append base=&RULES data=_RULE force;
29515     +       run;
29516     +       proc datasets lib=work nolist mt=(DATA VIEW);
29517     +          delete _RULE;
29518     +       run;
29519     +       quit;
29520     +   %end;
29522     +   %doendc:
29524     +%mend _arbor;
29526     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
29527     +   %put &EM_CODEBAR;
29528     +   %put * Filtering input variables ;
29529     +   %put * SEGMENT= &segment;
29530     +   %put &EM_CODEBAR;
29532     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
29533     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
29534     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
29536     +  %let _SEGMENT = &SEGMENT;
29538     +  proc freq data=&EM_IMPORT_DATA noprint ;
29539     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
29541     +    %if %EM_FREQ ne %then %do;
29542     +        weight %EM_FREQ;
29543     +        where %EM_FREQ>=0;
29544     +    %end;
29546     +  run ;
29547     +  proc sort data=&_segment;
29548     +     by descending count ;
29549     +  run ;
29551     +  %let dsid       = %sysfunc(open(&_segment));
29552     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
29553     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
29554     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
29556     +  %let dsid=%sysfunc(close(&dsid));
29558     +  %let SEGMENTS=;
29559     +  %let COUNTS=;
29560     +  %let OTHERWHERE=;
29561     +  %let numLevels=;
29562     +  data _segs;
29563     +     length SegmentVariable $32 SegmentValue $200;
29564     +     retain SegmentVariable "&_Segment";
29565     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
29566     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
29567     +     drop &_segment cum othercount otherpct numLevels;
29568     +     retain cum othercount otherpct numLevels 0;
29569     +     format Count 8.;
29570     +     set &_segment end=eof;
29572     +     %if &_segformat ne %then %do;
29573     +         SegmentValue= left(put(&_segment, &_segformat));
29574     +     %end;
29575     +     %else %do;
29576     +        %if &_segtype = N %then %do;
29577     +            SegmentValue= left(put(&_segment, best12.));
29578     +        %end;
29579     +        %else %do;
29580     +            SegmentValue = &_segment;
29581     +        %end;
29582     +     %end;
29584     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
29585     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
29586     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
29587     +        numLevels + 1;
29588     +        output;
29589     +     %end;
29590     +     %else %do;
29591     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
29592     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
29593     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
29594     +            numLevels + 1;
29595     +            output;
29596     +         end;
29597     +         else do;
29598     +            %if &_segtype = C or &_segformat ne %then %do;
29599     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
29600     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
29601     +            %end;
29602     +            %else %do;
29603     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
29604     +            %end;
29605     +            othercount = othercount + count;
29606     +            otherpct   = otherpct + percent;
29607     +            if eof then do;
29608     +               SegmentValue = '_OTHER_';
29609     +               count   = othercount;
29610     +               percent = otherpct;
29611     +               numLevels + 1;
29612     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
29613     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
29614     +               output;
29615     +            end;
29616     +         end;
29617     +         cum = cum + percent;
29618     +     %end;
29619     +     if eof then
29620     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
29621     +  run ;
29623     +  title9 " " ;
29624     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
29625     +  proc print data=_segs noobs label ;
29626     +  run ;
29627     +  title9;
29628     +  title10;
29630     +  proc append base=&_sizeDs data=_segs force;
29631     +  run;
29633     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
29634     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
29635     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
29637     +  /* Loop over segments */
29638     +  %do i=1 %to &numLevels;
29639     +     %if ^&numvars %then %do;
29640     +         %if %sysfunc(exist(&_reportDs)) %then %do;
29641     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
29642     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
29643     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
29644     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
29645     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
29646     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
29647     +                length SegmentVariable $32 SegmentValue $200;
29648     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
29649     +                set &_reportDs;
29650     +                Rank = _N_;
29651     +             run;
29652     +             proc append base=&_varsDs data=_TEMPRULE force;
29653     +             run;
29654     +         %end;
29655     +         %goto doskip;
29656     +     %end;
29658     +     %if &_segformat ne %then %do;
29659     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
29660     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
29661     +         %else
29662     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
29663     +     %end;
29664     +     %else %do;
29665     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
29666     +                 %let where= &_segment in(&OTHERWHERE);
29667     +         %else %do;
29668     +             %if &_segtype eq N %then
29669     +                 %let where= &_segment = &&segments&i;
29670     +             %else
29671     +                 %let where= &_segment = "&&segments&i";
29672     +         %end;
29673     +     %end;
29675     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
29676     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
29677     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
29678     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
29679     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
29680     +        if &where then
29681     +           _seg= 1 ;
29682     +        else
29683     +           _seg= 0 ;
29684     +     run ;
29686     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
29687     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
29688     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
29689     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
29690     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
29691     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
29693     +             if &where then
29694     +                _seg= 1 ;
29695     +              else
29696     +                 _seg= 0 ;
29697     +          run ;
29698     +      %end;
29700     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
29701     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
29702     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
29703     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
29704     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
29705     +     %end;
29706     +     %else %do;
29707     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
29708     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
29709     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
29710     +     %end;
29712     +     /* Keeping the important variables */
29713     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
29714     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
29715     +            length Name $32;
29716     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
29717     +            retain Name;
29719     +            set _temprule;
29721     +            where stat in('VARIABLE','WORTH');
29723     +            if stat = 'VARIABLE' then
29724     +               Name = character_value;
29725     +            else
29726     +               output;
29727     +         run;
29729     +         proc sort data=_TEMPRULE;
29730     +            by descending Worth;
29731     +         run;
29733     +         %if %sysfunc(exist(&_reportDs)) %then %do;
29734     +             data _TEMPRULE;
29735     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
29736     +             run;
29737     +             proc sort data= _TEMPRULE nodupkey;
29738     +                by variable;
29739     +             run;
29740     +             proc sort data=_TEMPRULE;
29741     +                by descending Worth;
29742     +             run;
29743     +         %end;
29744     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
29745     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
29746     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
29747     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
29748     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
29749     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
29750     +            length SegmentVariable $32 SegmentValue $200;
29751     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
29752     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
29753     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
29754     +            %end;
29755     +            %else %do;
29756     +                set _TEMPRULE;
29757     +            %end;
29758     +            Rank = _N_;
29759     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
29760     +               put "&EM_CODEBAR";
29761     +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
29762     +               put "* You may identify profile variables by lowering this threshold, ";
29763     +               put "* or by increasing the maximum depth of the decision tree used.";
29764     +               put "&EM_CODEBAR";
29765     +            end;
29766     +         run;
29767     +     %end;
29768     +     %else %do;
29769     +         %if %sysfunc(exist(&_reportDs)) %then %do;
29770     +             data _TEMPRULE;
29771     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
29772     +             run;
29773     +             proc sort data= _TEMPRULE nodupkey;
29774     +                by variable;
29775     +             run;
29776     +             proc sort data=_TEMPRULE;
29777     +                by descending Importance;
29778     +             run;
29779     +         %end;
29780     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
29781     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
29782     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
29783     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
29784     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
29785     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
29786     +            length SegmentVariable $32 SegmentValue $200;
29787     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
29788     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
29789     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
29790     +            %end;
29791     +            %else %do;
29792     +                set _TEMPRULE;
29793     +            %end;
29794     +            Rank = _N_;
29795     +         run;
29796     +     %end;
29798     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, &&segments&i, &&counts&i))";
29799     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
29801     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
29802     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
29803     +             proc print data=_TEMPRULE noobs label ;
29804     +                var Variable Worth Rank;
29805     +                where worth ne .;
29806     +             run ;
29807     +             data _TEMPRULE;
29808     +                set _TEMPRULE;
29809     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
29810     +             run;
29811     +         %end;
29812     +         %else %do;
29813     +             proc print data=_TEMPRULE noobs label ;
29814     +                var Variable Importance Rank;
29815     +                where importance ne .;
29816     +             run ;
29817     +         %end;
29819     +     %end ;
29821     +     title9;
29822     +     title10;
29824     +     proc append base=&_varsDs data=_TEMPRULE force;
29825     +     run;
29827     +     %if %sysfunc(exist(_FIT)) %then %do;
29828     +         data _FIT;
29829     +            length SegmentVariable $32 SegmentValue $200;
29830     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
29832     +            %if %sysfunc(exist(_FIT2)) %then %do;
29833     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
29834     +            %end;
29835     +            %else %do;
29836     +                set _FIT(keep=_MISC_);
29837     +            %end;
29839     +         run;
29840     +         proc append base=&_fitDs data=_FIT force;
29841     +         run;
29842     +     %end;
29844     +     %doskip:
29846     +     proc datasets lib=work nolist mt=(DATA VIEW);
29847     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
29849     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
29850     +            _TEMPRULE
29851     +        %end;
29852     +        %if %sysfunc(exist(_FIT))>0 %then %do;
29853     +            _FIT
29854     +        %end;
29855     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
29856     +            _FIT2
29857     +        %end;
29858     +     ;
29859     +     run;
29860     +     quit;
29861     +  %end ;
29862     +%mend tree_profile;
29864     +/* This macro loops over segment variables and determines important variables */
29865     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
29866     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
29868     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
29869     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
29870     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
29872     +    %if _segmentvar eq %then %do;
29873     +        %put &EM_CODEBAR;
29874     +        %put * No segment variable defined ;
29875     +        %put &EM_CODEBAR;
29876     +        %goto doendep;
29877     +    %end;
29879     +    %let sndx = 0;
29881     +    %let svar = &_segmentvar;
29882     +    %if &svar ne %then %do;
29883     +        %makeVarMacros(LEVEL=INTERVAL);
29884     +        %makeVarMacros(LEVEL=NOMINAL);
29885     +        %makeVarMacros(LEVEL=ORDINAL);
29886     +    %end;
29888     +    %do %while(&svar ne );
29889     +        %let sndx= %eval(&sndx+1);
29890     +        %let svar = %scan(&_segmentvar, &sndx,' ');
29891     +        %if &svar ne %then
29892     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
29893     +    %end ;
29895     +    proc datasets lib=&EM_LIB nolist;
29896     +       delete &EM_NODEID._MACS(mt=catalog);
29897     +    run;
29899     +    %doendep:
29900     +%mend em_profile;
29902     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
29903     +   %put &EM_CODEBAR;
29904     +   %put * Summarizing variables ;
29905     +   %put * SEGMENT= &segment;
29906     +   %put &EM_CODEBAR;
29908     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
29910     +  %let _SEGMENT = &SEGMENT;
29912     +  %let dsid       = %sysfunc(open(&_segment));
29913     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
29914     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
29915     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
29917     +  %let dsid=%sysfunc(close(&dsid));
29919     +  %let SEGMENTS=;
29920     +  %let COUNTS=;
29921     +  %let OTHERWHERE=;
29922     +  %let numLevels=;
29923     +  data _null_;
29924     +     retain cum othercount otherpct  numLevels 0;
29925     +     format Count 8.;
29926     +     set &_segment end=eof;
29928     +     %if &_segformat ne %then %do;
29929     +         SegmentValue= strip(put(&_segment, &_segformat));
29930     +     %end;
29931     +     %else %do;
29932     +        %if &_segtype = N %then %do;
29933     +            SegmentValue= strip(put(&_segment, best12.));
29934     +        %end;
29935     +        %else %do;
29936     +            SegmentValue = &_segment;
29937     +        %end;
29938     +     %end;
29940     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
29941     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
29942     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
29943     +         numLevels + 1;
29944     +         output;
29945     +     %end;
29946     +     %else %do;
29947     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
29948     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
29949     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
29950     +            numLevels + 1;
29951     +            output;
29952     +         end;
29953     +         else do;
29954     +            %if &_segtype = C or &_segformat ne %then %do;
29955     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
29956     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
29957     +            %end;
29958     +            %else %do;
29959     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
29960     +            %end;
29961     +            othercount = othercount + count;
29962     +            otherpct   = otherpct + percent;
29963     +            if eof then do;
29964     +               SegmentValue = '_OTHER_';
29965     +               count   = othercount;
29966     +               percent = otherpct;
29967     +               numLevels + 1;
29968     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
29969     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
29970     +               output;
29971     +            end;
29972     +         end;
29973     +         cum = cum + percent;
29974     +     %end;
29975     +     if eof then
29976     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
29977     +  run ;
29979     +  /* Loop over segments */
29980     +  %do S = 1 %to &numLevels;
29981     +     %if &_segformat ne %then %do;
29982     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
29983     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
29984     +         %else
29985     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
29986     +     %end;
29987     +     %else %do;
29988     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
29989     +                 %let where= &_segment in(&OTHERWHERE);
29990     +         %else %do;
29991     +             %if &_segtype eq N %then
29992     +                 %let where= &_segment = &&segments&s;
29993     +             %else
29994     +                 %let where= &_segment = "&&segments&s";
29995     +         %end;
29996     +     %end;
29998     +     %let SEGVARS=;
29999     +     %let SEGCLASS=;
30000     +     data _tempStat;
30001     +        set &_varsDs;
30002     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
30003     +        if Type eq 'I' then
30004     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
30005     +        else
30006     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
30007     +     run ;
30009     +     %let _nobs = 0;
30010     +     %let dsid = %sysfunc(open(_tempStat));
30011     +     %if &dsid %then %do;
30012     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
30013     +         %let dsid = %sysfunc(close(&dsid));
30014     +     %end;
30015     +     %if &_nobs<1 %then %goto doskips;
30017     +     proc sort data=_tempStat;
30018     +        by Variable;
30019     +     run;
30021     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
30022     +        set &EM_IMPORT_DATA;
30024     +        where &where;
30026     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
30027     +            %inc &FormatFref;
30028     +        %end;
30029     +     run;
30031     +     /* Profile Segment */
30032     +     %if &segclass ne %then %do;
30033     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
30034     +         data _CLASS;
30035     +            length SegmentVariable $32 SegmentValue $200;
30036     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
30037     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30038     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
30039     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
30040     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
30041     +            set _CLASS;
30042     +         run;
30043     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
30044     +         run;
30045     +         data _tempStat;
30046     +            merge _tempStat _STAT;
30047     +            by VARIABLE;
30048     +         run;
30049     +     %end;
30050     +     %if &segvars ne %then %do;
30051     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
30052     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
30053     +         data _INTERVAL;
30054     +             length SegmentVariable $32 SegmentValue $200;
30055     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
30056     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30057     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
30058     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
30059     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
30060     +             set _INTERVAL;
30061     +         run;
30063     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
30064     +         run;
30066     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
30067     +            by VARIABLE;
30068     +         run;
30069     +         data _tempStat;
30070     +            merge _tempStat _STAT;
30071     +            by VARIABLE;
30072     +         run;
30074     +     %end;
30076     +     proc sort data=_tempStat;
30077     +        by Rank;
30078     +     run;
30079     +     proc append base=&EM_USER_STATS data=_tempStat force;
30080     +     run;
30082     +     %doskips:
30084     +     proc datasets lib=work nolist mt=(DATA VIEW);
30085     +        delete _segment &EM_NODEID._TMP _interval _class
30087     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
30088     +            _tempStat
30089     +        %end;
30090     +     ;
30091     +     run;
30092     +     quit;
30095     +  %end ;
30096     +%mend segmentSummary;
30098     +%macro train;
30100     +   /* Retrieve data set name */
30101     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
30102     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
30103     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
30104     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
30105     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
30106     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
30107     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
30108     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
30110     +   /* Delete previous data sets */
30111     +   proc datasets lib=&EM_LIB nolist;
30112     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
30113     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
30114     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
30115     +   run;
30117     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
30118     +       or (&EM_IMPORT_DATA eq ) %then %do;
30119     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
30120     +       %goto doendpt;
30121     +   %end;
30123     +    proc sort data=&EM_DATA_VARIABLESET;
30124     +       by Name;
30125     +    run;
30127     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
30129     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
30130     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
30132     +    /* Add report variables */
30133     +    %let REPORT_VARS = ;
30134     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
30135     +        %let REPORT_VARS = %EM_TARGET;
30136     +    %end;
30137     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
30138     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
30139     +    %end;
30141     +    %if &REPORT_VARS ne %then %do;
30142     +        data _tempreport;
30143     +           length Variable $32;
30145     +        %let rndx= 0 ;
30146     +        %let rvar  = &REPORT_VARS;
30147     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
30148     +            %let rndx= %eval(&rndx+1);
30149     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
30150     +            %if &rvar ne %then %do;
30151     +                Variable="&rvar"; output;
30152     +            %end ;
30153     +        %end;
30155     +        run;
30156     +    %end;
30158     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
30159     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
30161     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
30163     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
30164     +        data &EM_USER_SELVARS;
30165     +           set _tempreport;
30166     +        run;
30167     +    %end;
30169     +    proc sort data=&EM_USER_SELVARS;
30170     +       by Variable;
30171     +    run;
30172     +    data &EM_USER_SELVARS;
30173     +       length Type $1;
30174     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
30175     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
30176     +       by Variable;
30177     +       if LABEL eq '' then LABEL=VARIABLE;
30178     +       if a then do;
30179     +          if LEVEL = 'INTERVAL' then Type = 'I';
30180     +          else Type = 'C';
30181     +           output;
30182     +       end;
30183     +       drop LEVEL;
30184     +    run;
30186     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
30187     +       by Variable;
30188     +    run;
30189     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
30190     +    %else
30191     +        %let selStat = Worth;
30193     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
30194     +       length Type $1;
30195     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
30196     +       set _SummaryVars;
30197     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
30198     +       rank = .; &selStat=.;
30199     +       if Label eq '' then Label=Variable;
30200     +   run;
30202     +    /* Profile Entire Data */
30203     +   %put &EM_CODEBAR;
30204     +   %put * Profile Entire Data ;
30205     +   %put &EM_CODEBAR;
30207     +    %let segvars=;
30208     +    %let segclass=;
30209     +    data _null_;
30210     +       set  &EM_USER_STATS;
30211     +       if Type = 'I' then
30212     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
30213     +       else
30214     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
30215     +    run ;
30217     +    %if &segclass ne %then %do;
30218     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
30219     +        data _CLASS;
30220     +           length SegmentVariable $32 SegmentValue $200;
30221     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
30222     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30223     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
30224     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
30225     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
30226     +           set _CLASS;
30227     +        run;
30228     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
30229     +        run;
30231     +        proc sort data=_STAT;
30232     +           by VARIABLE;
30233     +        run;
30234     +        data &EM_USER_STATS;
30235     +            merge  &EM_USER_STATS _STAT;
30236     +            by VARIABLE;
30237     +        run;
30238     +    %end;
30239     +    %if &segvars ne %then %do;
30240     +        /* Computing Min and Max for Interval Variables */
30241     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
30242     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
30243     +        data _INTERVAL;
30244     +           length SegmentVariable $32 SegmentValue $200;
30245     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
30246     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30247     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
30248     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
30249     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
30250     +           set _INTERVAL;
30251     +        run;
30253     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
30254     +        run;
30256     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
30257     +           by VARIABLE;
30258     +        run;
30259     +        data &EM_USER_STATS;
30260     +            merge  &EM_USER_STATS _STAT;
30261     +            by VARIABLE;
30262     +        run;
30263     +    %end;
30265     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
30267     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
30268     +        proc datasets lib=&EM_LIB nolist;
30269     +           delete &EM_NODEID._INTERVAL(mt=catalog);
30270     +        run;
30271     +    %end;
30273     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
30274     +        data _null_;
30275     +           file X;
30277     +           %let dsid    =%sysfunc(open(DATA_STAT));
30278     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
30279     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
30280     +           %let obs = %sysfunc(fetch(&dsid));
30282     +           put 'format' ;
30284     +           %let _count = 0;
30285     +           %let _VARS=;
30286     +           %do %while(&obs=0);
30288     +               %let _count = %eval(&_count +1);
30289     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
30290     +               %let _VARS = &_VARS &_name;
30291     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
30292     +               %do;
30293     +                  put "&_name &_fmtname..";
30294     +               %end;
30295     +               %let obs = %sysfunc(fetch(&dsid));
30296     +           %end;
30297     +           %let dsid=%sysfunc(close(&dsid));
30298     +           put ';';
30299     +        run;
30300     +    %end;
30302     +    /* Profile Segments */
30303     +    %if _segmentvar eq %then %goto doendpt;
30304     +    %let sndx = 0;
30306     +    %let svar = &_segmentvar;
30307     +    %do %while(&svar ne );
30308     +        %let sndx= %eval(&sndx+1);
30309     +        %let svar = %scan(&_segmentvar, &sndx,' ');
30310     +        %if &svar ne %then
30311     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
30312     +    %end ;
30314     +    filename X;
30316     +    %doendpt:
30319     +    /* Set reports for the node */
30320     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
30322     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
30323     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
30324     +            data &EM_USER_INTDIST;
30325     +               set &EM_USER_INTDIST;
30326     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
30327     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
30328     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
30329     +               if SegmentVariable = '_OVERALL_' then Color = 1;
30330     +               else Color = 0;
30331     +            run;
30332     +        %end;
30333     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
30334     +            data &EM_USER_CLASSDIST;
30335     +               set &EM_USER_CLASSDIST;
30336     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
30337     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
30338     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
30339     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
30340     +               else GroupIndex = 1;
30341     +            run;
30342     +        %end;
30344     +        %let svar = &_segmentvar;
30345     +        %let sndx = 0;
30346     +        %do %while(&svar ne );
30347     +            %let sndx= %eval(&sndx+1);
30348     +            %let svar = %scan(&_segmentvar, &sndx,' ');
30349     +            %if &svar ne %then %do;
30350     +                %let autodisplay = N;
30351     +                %if &sndx = 1 %then
30352     +                    %let autodisplay = Y;
30353     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
30354     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
30355     +                      LOCALIZE=Y, COLOR=COLOR);
30356     +            %end;
30357     +        %end ;
30358     +    %end;
30360     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
30361     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
30362     +            data &EM_USER_WORTH;
30363     +               set &EM_USER_STATS;
30364     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
30365     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
30366     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30367     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
30368     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
30369     +               where WORTH ne .;
30370     +            run;
30371     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
30372     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
30373     +                  LOCALIZE=Y, NCOLS=1);
30374     +        %end;
30375     +        %else %do;
30376     +            data &EM_USER_IMPORTANCE;
30377     +               set &EM_USER_STATS;
30378     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
30379     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
30380     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
30381     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
30382     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
30383     +               where IMPORTANCE ne .;
30384     +            run;
30385     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
30386     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
30387     +                  LOCALIZE=Y, NCOLS=1);
30388     +       %end;
30389     +    %end;
30391     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
30392     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
30393     +            data &EM_USER_SIZE;
30394     +               merge &EM_USER_SIZE &EM_USER_FIT;
30395     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
30396     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
30397     +               format PERCENT 5.2;
30398     +               format COUNT 12.;
30399     +            run;
30400     +        %end;
30401     +        %else %do;
30402     +            data &EM_USER_SIZE;
30403     +               set &EM_USER_SIZE;
30404     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
30405     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
30406     +               format PERCENT 5.2;
30407     +               format COUNT 12.;
30408     +            run;
30409     +        %end;
30411     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
30412     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
30414     +    %end;
30416     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
30417     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
30418     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
30419     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
30421     +    proc datasets lib=&EM_LIB nolist;
30422     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
30423     +    run;
30425     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof2_SIZE Prof2_STATS Prof2_FIT Prof2_WORTH Prof2_IMPORTANCE Prof2_SELVARS Prof2_CLASSDIST Prof2_INTDIST Prof2_MACS(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1.PROF2_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;

NOTE: There were 22 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set EMWS1.PROF2_VARIABLESET has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof2_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:28:03 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:03 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof2_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 6 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 77.
NOTE: There were 13 observations read from the data set EMWS1.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof2_MACS.NOMINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:03 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:03 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof2_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 36.
NOTE: There were 2 observations read from the data set EMWS1.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof2_MACS.ORDINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="ORDINAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="ORDINAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_MACS.ORDINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=6,
      Created=Wednesday, December 30, 2015 03:28:03 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:03 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof2_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set EMWS1.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='ORDINAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='ORDINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS1.Clus2_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table _SEGMENT_ / missing out=_SEGMENT_(keep=_SEGMENT_ count percent) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_SEGMENT_;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value";
MPRINT(TREE_PROFILE):   drop _SEGMENT_ cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set _SEGMENT_ end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(_SEGMENT_, best12.));
MPRINT(TREE_PROFILE):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   else do;
MPRINT(TREE_PROFILE):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(TREE_PROFILE):   othercount = othercount + count;
MPRINT(TREE_PROFILE):   otherpct = otherpct + percent;
MPRINT(TREE_PROFILE):   if eof then do;
MPRINT(TREE_PROFILE):   SegmentValue = '_OTHER_';
MPRINT(TREE_PROFILE):   count = othercount;
MPRINT(TREE_PROFILE):   percent = otherpct;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   cum = cum + percent;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frequencies: _SEGMENT_";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._SEGS to EMWS1.PROF2_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS1.PROF2_SIZE has 4 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1325848 kilobytes of physical memory.
NOTE: Will use 10296 out of 10296 training cases.
NOTE: Using memory pool with 238233600 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4256424 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 84 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.40 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.42 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 84 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 84 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 3 Count: 3625";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS1.PROF2_SELVARS has 10 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.13 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1325848 kilobytes of physical memory.
NOTE: Will use 10296 out of 10296 training cases.
NOTE: Using memory pool with 238233600 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4256424 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 84 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.40 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.42 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 84 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 84 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 2 Count: 2916";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 20 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1325848 kilobytes of physical memory.
NOTE: Will use 10296 out of 10296 training cases.
NOTE: Using memory pool with 238233600 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4256424 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 3 nodes and 2 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 3 nodes and 2 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 82 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.42 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.43 seconds
      cpu time            0.43 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 82 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 82 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 4 Count: 2521";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 25 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM IMP_HasChildren IMP_EducationalDegree IMP_GeographicLiving _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ClaimsRate CustomerMonetaryValue IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY 
PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_BINARY_INPUT):   IMP_HasChildren
MPRINT(EM_NOMINAL_INPUT):   IMP_GeographicLiving
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   input
MPRINT(EM_ORDINAL_INPUT):   IMP_EducationalDegree
MPRINT(_ARBOR):   / level = ordinal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1325848 kilobytes of physical memory.
NOTE: Will use 10296 out of 10296 training cases.
NOTE: Using memory pool with 238233600 bytes.
NOTE: Will not search for split on variable IMP_FirstPolicyYear.
NOTE: Too many values are missing.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 2 times.
NOTE: Training used 4256424 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 82 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.35 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.39 seconds
      cpu time            0.35 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 82 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 82 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 1 Count: 1234";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 9 observations read from the data set WORK._TEMPRULE.
NOTE: 9 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 34 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_PROFILE):   proc datasets lib=EMWS1 nolist;
MPRINT(EM_PROFILE):   delete Prof2_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;

NOTE: Deleting EMWS1.PROF2_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 34 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: The data set EMWS1.PROF2_SELVARS has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof2_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   merge EMWS1.Prof2_SELVARS(in=a) EMWS1.Prof2_VariableSet(keep=NAME LEVEL LABEL rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;

WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: There were 22 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set EMWS1.PROF2_SELVARS has 34 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 34 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: 23 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 11 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof2_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS1.Clus2_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;

NOTE: There were 11 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS1.PROF2_STATS has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Prof2_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;

NOTE: There were 11 observations read from the data set EMWS1.PROF2_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:07 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30429     +%macro _vars;
30430     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Clus2_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _CLASS;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus2_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _CLASS;
MPRINT(TRAIN):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 6 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof2_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof2_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 11 observations read from the data set EMWS1.PROF2_STATS.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF2_STATS has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:07 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30431     +%macro _vars;
30432     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus2_TRAIN(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus2_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: The data set WORK._CLASSOUT has 81 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 81 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 81 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 81 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 81 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 9 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Clus2_TRAIN(keep
MPRINT(VAR_PROFILE):  = CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.29 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 10 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.34 seconds
      cpu time            0.29 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 9 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 9 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 9 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 9 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 9 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:28:08 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:08 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 137 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 9 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
30433     +proc format;
MPRINT(VAR_PROFILE):   proc format;
30434     +value F1_
30435     +LOW --132563.0532 ="-165634.2009 "
30436     +-132563.0532 --99445.6824 ="-132516.8301 "
30437     +-99445.6824 --66328.3116 ="-99399.45928 "
30438     +-66328.3116 --33210.9408 ="-66282.08848 "
30439     +-33210.9408 --93.57 ="-33164.71768 "
30440     +-93.57 --1.12375 ="-47.346875 "
30441     +-1.12375 -91.3225 ="45.099375 "
30442     +91.3225 -183.76875 ="137.545625 "
30443     +183.76875 -276.215 ="229.991875 "
30444     +276.215 -368.66125 ="322.438125 "
30445     +368.66125 -461.1075 ="414.884375 "
30446     +461.1075 -553.55375 ="507.330625 "
30447     +553.55375 -646 ="599.776875 "
30448     +646 -2891.978 ="2845.754875 "
30449     +2891.978 -5137.956 ="5091.732875 "
30450     +5137.956 -7383.934 ="7337.710875 "
30451     +7383.934 -9629.912 ="9583.688875 "
30452     +9629.912 -HIGH="11829.666875 "
30453     +;
MPRINT(VAR_PROFILE):   value F1_ LOW --132563.0532 ="-165634.2009 " -132563.0532 --99445.6824 ="-132516.8301 " -99445.6824 --66328.3116 ="-99399.45928 " -66328.3116 --33210.9408 ="-66282.08848 " -33210.9408 --93.57 ="-33164.71768 " -93.57 --1.12375 
="-47.346875 " -1.12375 -91.3225 ="45.099375 " 91.3225 -183.76875 ="137.545625 " 183.76875 -276.215 ="229.991875 " 276.215 -368.66125 ="322.438125 " 368.66125 -461.1075 ="414.884375 " 461.1075 -553.55375 ="507.330625 " 553.55375 -646 ="599.776875 " 646 
-2891.978 ="2845.754875 " 2891.978 -5137.956 ="5091.732875 " 5137.956 -7383.934 ="7337.710875 " 7383.934 -9629.912 ="9583.688875 " 9629.912 -HIGH="11829.666875 " ;
NOTE: Format F1_ has been output.
30454     +value F2_
30455     +LOW -1593.25 ="1129.125 "
30456     +1593.25 -2521.5 ="2057.375 "
30457     +2521.5 -3449.75 ="2985.625 "
30458     +3449.75 -4378 ="3913.875 "
30459     +4378 -5306.25 ="4842.125 "
30460     +5306.25 -6234.5 ="5770.375 "
30461     +6234.5 -7162.75 ="6698.625 "
30462     +7162.75 -8091 ="7626.875 "
30463     +8091 -28558.752 ="28094.627 "
30464     +28558.752 -49026.504 ="48562.379 "
30465     +49026.504 -69494.256 ="69030.131 "
30466     +69494.256 -89962.008 ="89497.883 "
30467     +89962.008 -HIGH="109965.635 "
30468     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -1593.25 ="1129.125 " 1593.25 -2521.5 ="2057.375 " 2521.5 -3449.75 ="2985.625 " 3449.75 -4378 ="3913.875 " 4378 -5306.25 ="4842.125 " 5306.25 -6234.5 ="5770.375 " 6234.5 -7162.75 ="6698.625 " 7162.75 -8091 ="7626.875 " 
8091 -28558.752 ="28094.627 " 28558.752 -49026.504 ="48562.379 " 49026.504 -69494.256 ="69030.131 " 69494.256 -89962.008 ="89497.883 " 89962.008 -HIGH="109965.635 " ;
NOTE: Format F2_ has been output.
30469     +value F3_
30470     +LOW -35.3275 ="16.60875 "
30471     +35.3275 -72.765 ="54.04625 "
30472     +72.765 -110.2025 ="91.48375 "
30473     +110.2025 -147.64 ="128.92125 "
30474     +147.64 -185.0775 ="166.35875 "
30475     +185.0775 -222.515 ="203.79625 "
30476     +222.515 -259.9525 ="241.23375 "
30477     +259.9525 -297.39 ="278.67125 "
30478     +297.39 -5892.312 ="5873.59325 "
30479     +5892.312 -11487.234 ="11468.51525 "
30480     +11487.234 -17082.156 ="17063.43725 "
30481     +17082.156 -22677.078 ="22658.35925 "
30482     +22677.078 -HIGH="28253.28125 "
30483     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -35.3275 ="16.60875 " 35.3275 -72.765 ="54.04625 " 72.765 -110.2025 ="91.48375 " 110.2025 -147.64 ="128.92125 " 147.64 -185.0775 ="166.35875 " 185.0775 -222.515 ="203.79625 " 222.515 -259.9525 ="241.23375 " 259.9525 
-297.39 ="278.67125 " 297.39 -5892.312 ="5873.59325 " 5892.312 -11487.234 ="11468.51525 " 11487.234 -17082.156 ="17063.43725 " 17082.156 -22677.078 ="22658.35925 " 22677.078 -HIGH="28253.28125 " ;
NOTE: Format F3_ has been output.
30484     +value F4_
30485     +LOW -11.30875 ="2.154375 "
30486     +11.30875 -29.6175 ="20.463125 "
30487     +29.6175 -47.92625 ="38.771875 "
30488     +47.92625 -66.235 ="57.080625 "
30489     +66.235 -84.54375 ="75.389375 "
30490     +84.54375 -102.8525 ="93.698125 "
30491     +102.8525 -121.16125 ="112.006875 "
30492     +121.16125 -139.47 ="130.315625 "
30493     +139.47 -191.236 ="182.081625 "
30494     +191.236 -243.002 ="233.847625 "
30495     +243.002 -294.768 ="285.613625 "
30496     +294.768 -346.534 ="337.379625 "
30497     +346.534 -HIGH="389.145625 "
30498     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -11.30875 ="2.154375 " 11.30875 -29.6175 ="20.463125 " 29.6175 -47.92625 ="38.771875 " 47.92625 -66.235 ="57.080625 " 66.235 -84.54375 ="75.389375 " 84.54375 -102.8525 ="93.698125 " 102.8525 -121.16125 ="112.006875 " 
121.16125 -139.47 ="130.315625 " 139.47 -191.236 ="182.081625 " 191.236 -243.002 ="233.847625 " 243.002 -294.768 ="285.613625 " 294.768 -346.534 ="337.379625 " 346.534 -HIGH="389.145625 " ;
NOTE: Format F4_ has been output.
30499     +value F5_
30500     +LOW -60.81875 ="28.354375 "
30501     +60.81875 -125.7475 ="93.283125 "
30502     +125.7475 -190.67625 ="158.211875 "
30503     +190.67625 -255.605 ="223.140625 "
30504     +255.605 -320.53375 ="288.069375 "
30505     +320.53375 -385.4625 ="352.998125 "
30506     +385.4625 -450.39125 ="417.926875 "
30507     +450.39125 -515.32 ="482.855625 "
30508     +515.32 -2733.14 ="2700.675625 "
30509     +2733.14 -4950.96 ="4918.495625 "
30510     +4950.96 -7168.78 ="7136.315625 "
30511     +7168.78 -9386.6 ="9354.135625 "
30512     +9386.6 -HIGH="11571.955625 "
30513     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -60.81875 ="28.354375 " 60.81875 -125.7475 ="93.283125 " 125.7475 -190.67625 ="158.211875 " 190.67625 -255.605 ="223.140625 " 255.605 -320.53375 ="288.069375 " 320.53375 -385.4625 ="352.998125 " 385.4625 -450.39125 
="417.926875 " 450.39125 -515.32 ="482.855625 " 515.32 -2733.14 ="2700.675625 " 2733.14 -4950.96 ="4918.495625 " 4950.96 -7168.78 ="7136.315625 " 7168.78 -9386.6 ="9354.135625 " 9386.6 -HIGH="11571.955625 " ;
NOTE: Format F5_ has been output.
30514     +value F6_
30515     +LOW -6.5725 ="-2.71375 "
30516     +6.5725 -25.145 ="15.85875 "
30517     +25.145 -43.7175 ="34.43125 "
30518     +43.7175 -62.29 ="53.00375 "
30519     +62.29 -80.8625 ="71.57625 "
30520     +80.8625 -99.435 ="90.14875 "
30521     +99.435 -118.0075 ="108.72125 "
30522     +118.0075 -136.58 ="127.29375 "
30523     +136.58 -507.004 ="497.71775 "
30524     +507.004 -877.428 ="868.14175 "
30525     +877.428 -1247.852 ="1238.56575 "
30526     +1247.852 -1618.276 ="1608.98975 "
30527     +1618.276 -HIGH="1979.41375 "
30528     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -6.5725 ="-2.71375 " 6.5725 -25.145 ="15.85875 " 25.145 -43.7175 ="34.43125 " 43.7175 -62.29 ="53.00375 " 62.29 -80.8625 ="71.57625 " 80.8625 -99.435 ="90.14875 " 99.435 -118.0075 ="108.72125 " 118.0075 -136.58 
="127.29375 " 136.58 -507.004 ="497.71775 " 507.004 -877.428 ="868.14175 " 877.428 -1247.852 ="1238.56575 " 1247.852 -1618.276 ="1608.98975 " 1618.276 -HIGH="1979.41375 " ;
NOTE: Format F6_ has been output.
30529     +value F7_
30530     +LOW -23.25 ="19.125 "
30531     +23.25 -31.5 ="27.375 "
30532     +31.5 -39.75 ="35.625 "
30533     +39.75 -48 ="43.875 "
30534     +48 -56.25 ="52.125 "
30535     +56.25 -64.5 ="60.375 "
30536     +64.5 -72.75 ="68.625 "
30537     +72.75 -HIGH="76.875 "
30538     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -23.25 ="19.125 " 23.25 -31.5 ="27.375 " 31.5 -39.75 ="35.625 " 39.75 -48 ="43.875 " 48 -56.25 ="52.125 " 56.25 -64.5 ="60.375 " 64.5 -72.75 ="68.625 " 72.75 -HIGH="76.875 " ;
NOTE: Format F7_ has been output.
30539     +value F8_
30540     +LOW -21.3375 ="-26.83125 "
30541     +21.3375 -117.675 ="69.50625 "
30542     +117.675 -214.0125 ="165.84375 "
30543     +214.0125 -310.35 ="262.18125 "
30544     +310.35 -406.6875 ="358.51875 "
30545     +406.6875 -503.025 ="454.85625 "
30546     +503.025 -599.3625 ="551.19375 "
30547     +599.3625 -695.7 ="647.53125 "
30548     +695.7 -5566.32 ="5518.15125 "
30549     +5566.32 -10436.94 ="10388.77125 "
30550     +10436.94 -15307.56 ="15259.39125 "
30551     +15307.56 -20178.18 ="20130.01125 "
30552     +20178.18 -HIGH="25000.63125 "
30553     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -21.3375 ="-26.83125 " 21.3375 -117.675 ="69.50625 " 117.675 -214.0125 ="165.84375 " 214.0125 -310.35 ="262.18125 " 310.35 -406.6875 ="358.51875 " 406.6875 -503.025 ="454.85625 " 503.025 -599.3625 ="551.19375 " 
599.3625 -695.7 ="647.53125 " 695.7 -5566.32 ="5518.15125 " 5566.32 -10436.94 ="10388.77125 " 10436.94 -15307.56 ="15259.39125 " 15307.56 -20178.18 ="20130.01125 " 20178.18 -HIGH="25000.63125 " ;
NOTE: Format F8_ has been output.
30554     +value F9_
30555     +LOW -455.23022084 ="405.63523662 "
30556     +455.23022084 -554.42018929 ="504.82520507 "
30557     +554.42018929 -653.61015774 ="604.01517352 "
30558     +653.61015774 -752.8001262 ="703.20514197 "
30559     +752.8001262 -851.99009465 ="802.39511042 "
30560     +851.99009465 -951.1800631 ="901.58507887 "
30561     +951.1800631 -1050.3700315 ="1000.7750473 "
30562     +1050.3700315 -1149.56 ="1099.9650158 "
30563     +1149.56 -6785.912 ="6736.3170158 "
30564     +6785.912 -12422.264 ="12372.669016 "
30565     +12422.264 -18058.616 ="18009.021016 "
30566     +18058.616 -23694.968 ="23645.373016 "
30567     +23694.968 -HIGH="29281.725016 "
30568     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -455.23022084 ="405.63523662 " 455.23022084 -554.42018929 ="504.82520507 " 554.42018929 -653.61015774 ="604.01517352 " 653.61015774 -752.8001262 ="703.20514197 " 752.8001262 -851.99009465 ="802.39511042 " 851.99009465 
-951.1800631 ="901.58507887 " 951.1800631 -1050.3700315 ="1000.7750473 " 1050.3700315 -1149.56 ="1099.9650158 " 1149.56 -6785.912 ="6736.3170158 " 6785.912 -12422.264 ="12372.669016 " 12422.264 -18058.616 ="18009.021016 " 18058.616 -23694.968 
="23645.373016 " 23694.968 -HIGH="29281.725016 " ;
NOTE: Format F9_ has been output.
MPRINT(VAR_PROFILE):   run;
30569     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Clus2_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format CustomerMonetaryValue F1_. IMP_GrossMonthlySalary F2_. IMP_PremiumsinLOBHealth F3_. IMP_PremiumsinLOBLife F4_. IMP_PremiumsinLOBMotor F5_. IMP_PremiumsinLOBWorkComp F6_. IMP_REP_CustomerAge F7_. PremiumsinLOBHousehold F8_. 
TOTAL_PREMIUM F9_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.20 seconds
      
NOTE: There were 10296 observations read from the data set EMWS1.CLUS2_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 105 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 105 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 105 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus2_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;

NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 105 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS1.PROF2_INTDIST has 105 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof2_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof2_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 11 observations read from the data set EMWS1.PROF2_STATS.
NOTE: There were 9 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF2_STATS has 11 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   filename X catalog "EMWS1.Prof2_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "CustomerMonetaryValue F1_.";
MPRINT(TRAIN):   put "IMP_GrossMonthlySalary F2_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBHealth F3_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBLife F4_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBMotor F5_.";
MPRINT(TRAIN):   put "IMP_PremiumsinLOBWorkComp F6_.";
MPRINT(TRAIN):   put "IMP_REP_CustomerAge F7_.";
MPRINT(TRAIN):   put "PremiumsinLOBHousehold F8_.";
MPRINT(TRAIN):   put "TOTAL_PREMIUM F9_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_INTERVAL.FORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wednesday, December 30, 2015 03:28:08 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:08 PM,
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\prof2_interval.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 11 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 30.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set _SEGMENT_ end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(_SEGMENT_, best12.));
MPRINT(SEGMENTSUMMARY):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   else do;
MPRINT(SEGMENTSUMMARY):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(SEGMENTSUMMARY):   othercount = othercount + count;
MPRINT(SEGMENTSUMMARY):   otherpct = otherpct + percent;
MPRINT(SEGMENTSUMMARY):   if eof then do;
MPRINT(SEGMENTSUMMARY):   SegmentValue = '_OTHER_';
MPRINT(SEGMENTSUMMARY):   count = othercount;
MPRINT(SEGMENTSUMMARY):   percent = otherpct;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   cum = cum + percent;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
30570     +format
30571     +CustomerMonetaryValue F1_.
30572     +IMP_GrossMonthlySalary F2_.
30573     +IMP_PremiumsinLOBHealth F3_.
30574     +IMP_PremiumsinLOBLife F4_.
30575     +IMP_PremiumsinLOBMotor F5_.
30576     +IMP_PremiumsinLOBWorkComp F6_.
30577     +IMP_REP_CustomerAge F7_.
30578     +PremiumsinLOBHousehold F8_.
30579     +TOTAL_PREMIUM F9_.
30580     +;
MPRINT(SEGMENTSUMMARY):   format CustomerMonetaryValue F1_. IMP_GrossMonthlySalary F2_. IMP_PremiumsinLOBHealth F3_. IMP_PremiumsinLOBLife F4_. IMP_PremiumsinLOBMotor F5_. IMP_PremiumsinLOBWorkComp F6_. IMP_REP_CustomerAge F7_. PremiumsinLOBHousehold F8_. 
TOTAL_PREMIUM F9_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:07 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30581     +%macro _vars;
30582     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 3625   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      
NOTE: There were 3625 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 3625 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 12 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:09 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30583     +%macro _vars;
30584     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 3625   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      
NOTE: There were 3625 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 3625 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 3625   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      
NOTE: There were 3625 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 3625 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 75 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 75 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 75 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 75 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 75 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 75 observations read from the data set WORK._INTERVAL.
NOTE: 75 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 180 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 21 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 2;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
30585     +format
30586     +CustomerMonetaryValue F1_.
30587     +IMP_GrossMonthlySalary F2_.
30588     +IMP_PremiumsinLOBHealth F3_.
30589     +IMP_PremiumsinLOBLife F4_.
30590     +IMP_PremiumsinLOBMotor F5_.
30591     +IMP_PremiumsinLOBWorkComp F6_.
30592     +IMP_REP_CustomerAge F7_.
30593     +PremiumsinLOBHousehold F8_.
30594     +TOTAL_PREMIUM F9_.
30595     +;
MPRINT(SEGMENTSUMMARY):   format CustomerMonetaryValue F1_. IMP_GrossMonthlySalary F2_. IMP_PremiumsinLOBHealth F3_. IMP_PremiumsinLOBLife F4_. IMP_PremiumsinLOBMotor F5_. IMP_PremiumsinLOBWorkComp F6_. IMP_REP_CustomerAge F7_. PremiumsinLOBHousehold F8_. 
TOTAL_PREMIUM F9_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:09 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30596     +%macro _vars;
30597     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2916   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2916 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2916 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 6 observations read from the data set WORK._CLASS.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 18 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:10 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30598     +%macro _vars;
30599     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2916   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2916 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2916 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2916   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2916 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 2916 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 73 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 73 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 73 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 73 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 73 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 73 observations read from the data set WORK._INTERVAL.
NOTE: 73 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 253 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 31 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 5 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 4;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
30600     +format
30601     +CustomerMonetaryValue F1_.
30602     +IMP_GrossMonthlySalary F2_.
30603     +IMP_PremiumsinLOBHealth F3_.
30604     +IMP_PremiumsinLOBLife F4_.
30605     +IMP_PremiumsinLOBMotor F5_.
30606     +IMP_PremiumsinLOBWorkComp F6_.
30607     +IMP_REP_CustomerAge F7_.
30608     +PremiumsinLOBHousehold F8_.
30609     +TOTAL_PREMIUM F9_.
30610     +;
MPRINT(SEGMENTSUMMARY):   format CustomerMonetaryValue F1_. IMP_GrossMonthlySalary F2_. IMP_PremiumsinLOBHealth F3_. IMP_PremiumsinLOBLife F4_. IMP_PremiumsinLOBMotor F5_. IMP_PremiumsinLOBWorkComp F6_. IMP_REP_CustomerAge F7_. PremiumsinLOBHousehold F8_. 
TOTAL_PREMIUM F9_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:10 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30611     +%macro _vars;
30612     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_HasChildren;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2521   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2521 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2521 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 15 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 20 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:11 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30613     +%macro _vars;
30614     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_REP_CustomerAge;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2521   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2521 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2521 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_REP_CustomerAge;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 2521   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2521 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 2521 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 35 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 35 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 35 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 35 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 35 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 35 observations read from the data set WORK._INTERVAL.
NOTE: 35 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 288 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 36 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 9 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 9 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 1;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
30615     +format
30616     +CustomerMonetaryValue F1_.
30617     +IMP_GrossMonthlySalary F2_.
30618     +IMP_PremiumsinLOBHealth F3_.
30619     +IMP_PremiumsinLOBLife F4_.
30620     +IMP_PremiumsinLOBMotor F5_.
30621     +IMP_PremiumsinLOBWorkComp F6_.
30622     +IMP_REP_CustomerAge F7_.
30623     +PremiumsinLOBHousehold F8_.
30624     +TOTAL_PREMIUM F9_.
30625     +;
MPRINT(SEGMENTSUMMARY):   format CustomerMonetaryValue F1_. IMP_GrossMonthlySalary F2_. IMP_PremiumsinLOBHealth F3_. IMP_PremiumsinLOBLife F4_. IMP_PremiumsinLOBMotor F5_. IMP_PremiumsinLOBWorkComp F6_. IMP_REP_CustomerAge F7_. PremiumsinLOBHousehold F8_. 
TOTAL_PREMIUM F9_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:11 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30626     +%macro _vars;
30627     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   IMP_EducationalDegree;
MPRINT(CLASS_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 1234   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
      
NOTE: There were 1234 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 1234 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 4 observations read from the data set WORK._CLASS.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 24 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wednesday, December 30, 2015 03:28:07 PM,
      Last Modified=Wednesday, December 30, 2015 03:28:12 PM,
      Filename=C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD18056_WDFN33788459A_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
30628     +%macro _vars;
30629     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 1234   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      
NOTE: There were 1234 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 1234 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold TOTAL_PREMIUM;
MPRINT(VAR_PROFILE):   run;

NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 1234   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24   
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: There were 1234 observations read from the data set EMWS1.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 1234 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 81 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 81 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 81 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 81 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 81 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 81 observations read from the data set WORK._INTERVAL.
NOTE: 81 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 369 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: 9 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 45 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS1.Prof2_INTDIST;
MPRINT(TRAIN):   set EMWS1.Prof2_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Color = "Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;

NOTE: There were 369 observations read from the data set EMWS1.PROF2_INTDIST.
NOTE: The data set EMWS1.PROF2_INTDIST has 369 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof2_CLASSDIST;
MPRINT(TRAIN):   set EMWS1.Prof2_CLASSDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Groupindex = "Group Index";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
MPRINT(TRAIN):   else GroupIndex = 1;
MPRINT(TRAIN):   run;

NOTE: There were 24 observations read from the data set EMWS1.PROF2_CLASSDIST.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 24 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "_SEGMENT_";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.14131646377095;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 126 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof2_WORTH;
MPRINT(TRAIN):   set EMWS1.Prof2_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;

NOTE: There were 34 observations read from the data set EMWS1.PROF2_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS1.PROF2_WORTH has 34 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95942714808482;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 126 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 252 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof2_SIZE;
MPRINT(TRAIN):   set EMWS1.Prof2_SIZE;
MPRINT(TRAIN):   label percent = "Percent" count = "Frequency Count";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;

NOTE: There were 4 observations read from the data set EMWS1.PROF2_SIZE.
NOTE: The data set EMWS1.PROF2_SIZE has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.11403507418652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 252 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 379 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.32648251034621;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 379 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 505 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72891302673561;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 505 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 631 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.38931643794724;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 631 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 757 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.01414287603187;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 757 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof2_SELVARS _SUMMARYVARS DATA_STAT Prof2_MACS(mt=catalog) Prof2_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS1.PROF2_SELVARS (memtype=DATA).
NOTE: Deleting EMWS1.PROF2_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
30630      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30631      * End TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof2;
30632      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30633      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30634      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
30635      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30636      ;
MPRINT(EM_DIAGRAM):   ;
30637      ;
MPRINT(EM_DIAGRAM):   ;
30638      ;
MPRINT(EM_DIAGRAM):   ;
30639      ;
MPRINT(EM_DIAGRAM):   ;
30640      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
30641      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
30642      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
30643      *------------------------------------------------------------*;
30644      /*; *"; *'; */
30645      ;
30646      run;
30647      quit;
30648      /* Reset EM Options */
30649      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
30650      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
30651      goptions reset=all device=WMF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=WMF NODISPLAY;
30652      filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
MPRINT(EM_DIAGRAM):    filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
30653      %include _temp;
NOTE: %INCLUDE (level 1) file _TEMP is file SASHELP.EMWIP.EM_SASGRAPH.SOURCE.
30654     +filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
MPRINT(EM_DIAGRAM):   filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
30655     +%include _fdsep;
NOTE: %INCLUDE (level 2) file _FDSEP is file SASHELP.EMWIP.EM_DSEP.SOURCE.
30656     +%macro em_dsep;
30657     +  %global emdsep;
30658     +   %if %substr(&sysscp, 1, 3)= WIN %then
30659     +       %let emdsep=\;
30660     +   %else
30661     +       %if %substr(&sysscp, 1, 3)= DNT %then
30662     +           %let emdsep=\;
30663     +   %else
30664     +       %let emdsep=/;
30665     +%mend em_dsep;
30666     +%em_dsep;
MPRINT(EM_DIAGRAM):  ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
30667     +filename _fdsep;
MPRINT(EM_DIAGRAM):   filename _fdsep;
NOTE: Fileref _FDSEP has been deassigned.
MPRINT(EM_DIAGRAM):  ;
30668     +%em_dsep;
30669     +%macro em_sasgraph(device=JPEG, folder=);
30670     +    %if %sysfunc(exist(work.gseg)) %then %do;
30671     +        proc delete data=work.gseg;
30672     +        run;
30673     +    %end;
30674     +    proc catalog c=work.gseg;
30675     +       contents out=work.gseg;
30676     +    run;
30677     +    data work.gseg;
30678     +       set work.gseg;
30679     +       if desc = '' then desc = name;
30680     +    run;
30681     +    proc sort data=work.gseg;
30682     +       by desc;
30683     +    run;
30684     +    %let _wipGraphPath=%superq(folder);
30685     +    %if (%superq(_wipGraphPath) eq ) %then %do;
30686     +        data _null_;
30687     +           path = pathname('WORK');
30688     +           rc = dcreate('EM_SASGRAPH',strip(path));
30689     +           call symput('_wipGraphPath', strip(path)!!strip(symget('emdsep'))!!'EM_SASGRAPH');
30690     +        run;
30691     +    %end;
30692     +    filename _dref "&_wipGraphpath";
30693     +    %let did=%sysfunc(dopen(_dref));
30694     +    %let memcount=%sysfunc(dnum(&did));
30695     +    %if &memcount %then %do;
30696     +        %do i=1 %to &memcount;
30697     +            %let filename=&_wipGraphPath&emdsep%sysfunc(dread(&did, &i));
30698     +            %if "&filename" ne "" %then %do; %put >>>> &filename;
30699     +                %let prefix = %sysfunc(reverse(%lowcase(%scan(%nrbquote(%sysfunc(reverse(&filename))), 1, .))));
30700     +                %if (&prefix = jpg) or (&prefix eq gif) %then %do;
30701     +                    filename _fref "&filename";
30702     +                    %let rc = %sysfunc(fdelete(_fref));
30703     +                    filename _fref;
30704     +                %end;
30705     +            %end;
30706     +        %end;
30707     +    %end;
30708     +    %let rc=%sysfunc(dclose(&did));
30709     +    filename _dref;
30710     +    data work.gseg;
30711     +       keep libname memname name desc type date crdate moddate;
30712     +       array token(7) $ ('/' '\' ':' '"' '<' '>' '|');
30713     +       length string $2000 device ftype $8;
30714     +       length filename $200;
30715     +       retain index 0;
30716     +       set work.gseg;
30717     +       by desc;
30718     +       filename = desc;
30719     +       if first.desc then do;
30720     +          filename = desc;
30721     +          index = 1;
30722     +       end;
30723     +       else do;
30724     +          filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
30725     +       end;
30726     +       do i=1 to 7;
30727     +          filename = tranwrd(filename, strip(token(i)), '_');
30728     +       end;
30729     +       desc = filename;
30730     +       index+1;
30731     +       device = upcase("&device");
30732     +       select(device);
30733     +          when('JPEG') ftype='jpg';
30734     +          when('GIF')  ftype='gif';
30735     +          otherwise do;
30736     +                       ftype='jpg';
30737     +                       device="JPEG";
30738     +          end;
30739     +       end;
30740     +       string = "&_wipGraphPath&emdsep"!!strip(filename)!!'.'!!ftype;
30741     +       call execute('filename  gsasfile "'!!strip(string)!!'";');
30742     +       call execute('goptions reset=all device='!!strip(device)!!' display');
30743     +       call execute('         gaccess= gsasfile');
30744     +       call execute('         gsfmode= replace cback=white;');
30745     +       call execute('proc greplay igout=work.gseg nofs;');
30746     +       call execute(    'replay '!!strip(name)!!';');
30747     +       call execute('quit;');
30748     +       call execute('filename gsasfile;');
30749     +       call execute('goptions reset=all device=WMF NODISPLAY;');
30750     +    run;
30751     +%mend em_sasgraph;
NOTE: %INCLUDE (level 1) ending.
30756      filename _temp;
MPRINT(EM_DIAGRAM):   filename _temp;
NOTE: Fileref _TEMP has been deassigned.
30757      %em_sasgraph(device=GIF, folder=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\GRAPH);
MPRINT(EM_SASGRAPH):   proc catalog c=work.gseg;
MPRINT(EM_SASGRAPH):   contents out=work.gseg;
MPRINT(EM_SASGRAPH):   run;

NOTE: The data set WORK.GSEG has 0 observations and 8 variables.

NOTE: PROCEDURE CATALOG used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   if desc = '' then desc = name;
MPRINT(EM_SASGRAPH):   run;

NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_SASGRAPH):   proc sort data=work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_SASGRAPH):   filename _dref "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\GRAPH";
MPRINT(EM_SASGRAPH):   filename _dref;
NOTE: Fileref _DREF has been deassigned.
MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   keep libname memname name desc type date crdate moddate;
MPRINT(EM_SASGRAPH):   array token(7) $ ('/' '\' ':' '"' '<' '>' '|');
MPRINT(EM_SASGRAPH):   length string $2000 device ftype $8;
MPRINT(EM_SASGRAPH):   length filename $200;
MPRINT(EM_SASGRAPH):   retain index 0;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   if first.desc then do;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   index = 1;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   else do;
MPRINT(EM_SASGRAPH):   filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   do i=1 to 7;
MPRINT(EM_SASGRAPH):   filename = tranwrd(filename, strip(token(i)), '_');
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   desc = filename;
MPRINT(EM_SASGRAPH):   index+1;
MPRINT(EM_SASGRAPH):   device = upcase("GIF");
MPRINT(EM_SASGRAPH):   select(device);
MPRINT(EM_SASGRAPH):   when('JPEG') ftype='jpg';
MPRINT(EM_SASGRAPH):   when('GIF') ftype='gif';
MPRINT(EM_SASGRAPH):   otherwise do;
MPRINT(EM_SASGRAPH):   ftype='jpg';
MPRINT(EM_SASGRAPH):   device="JPEG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   string = "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Prof2\GRAPH\"!!strip(filename)!!'.'!!ftype;
MPRINT(EM_SASGRAPH):   call execute('filename  gsasfile "'!!strip(string)!!'";');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device='!!strip(device)!!' display');
MPRINT(EM_SASGRAPH):   call execute('         gaccess= gsasfile');
MPRINT(EM_SASGRAPH):   call execute('         gsfmode= replace cback=white;');
MPRINT(EM_SASGRAPH):   call execute('proc greplay igout=work.gseg nofs;');
MPRINT(EM_SASGRAPH):   call execute( 'replay '!!strip(name)!!';');
MPRINT(EM_SASGRAPH):   call execute('quit;');
MPRINT(EM_SASGRAPH):   call execute('filename gsasfile;');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device=WMF NODISPLAY;');
MPRINT(EM_SASGRAPH):   run;

NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

30758      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
30759      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
30760      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 883 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

30761      proc freq data=EMWS1.Prof2_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_WORTH noprint order=data;
30762      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
30763      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS1.PROF2_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

30764      proc freq data=EMWS1.Prof2_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_SIZE noprint order=data;
30765      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
30766      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.PROF2_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
