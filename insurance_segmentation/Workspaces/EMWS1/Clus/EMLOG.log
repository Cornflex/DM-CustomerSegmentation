*------------------------------------------------------------*
User:                D059331
Date:                December 30, 2015
Time:                15:30:22
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:30:15" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 30, 2015
Time:                15:30:15
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1D5Y_H_ "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1D5Y_H_ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:30:16" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:30:16" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20913      proc freq data=EMWS1.Clus_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Clus_VariableSet noprint;
20914      table ROLE*LEVEL/out=WORK.ClusMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ClusMETA;
20915      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUSMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
20916      proc print data=WORK.ClusMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ClusMETA label noobs;
20917      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20918      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20919      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20920      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20921      run;
 
NOTE: There were 6 observations read from the data set WORK.CLUSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20922      title10;
MPRINT(EM_DIAGRAM):   title10;
20923      data WORK.M35Z808X;
MPRINT(EM_DIAGRAM):    data WORK.M35Z808X;
20924      set WORK.M35Z808X;
MPRINT(EM_DIAGRAM):   set WORK.M35Z808X;
20925      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
20926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M35Z808X.
NOTE: The data set WORK.M35Z808X has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M35Z808X;
MPRINT(EM_DIAGRAM):   set WORK.M35Z808X;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
20935      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20936      * Clus: Preliminary Clustering;
MPRINT(EM_DIAGRAM):   * Clus: Preliminary Clustering;
20937      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20938      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20939      * Clus: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBClass Macro ;
20940      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20941      %macro DMDBClass;
20942          IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC) IMP_HasChildren(ASC)
20943      %mend DMDBClass;
20944      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20945      * Clus: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBVar Macro ;
20946      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20947      %macro DMDBVar;
20948          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
20949         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
20950         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
20951      %mend DMDBVar;
20952      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20953      * Clus: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus: Create DMDB;
20954      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20955      proc dmdb batch data=EMWS1.Filter_TRAIN
20956      dmdbcat=WORK.Clus_DMDB
20957      maxlevel = 513
20958      out=WORK.Clus_DMDB
20959      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Clus_DMDB maxlevel = 513 out=WORK.Clus_DMDB ;
MPRINT(EM_DIAGRAM):   class
20960      class %DMDBClass;
MPRINT(DMDBCLASS):   IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC) IMP_HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20961      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):  ;
20962      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.CLUS_DMDB has 9787 observations and 13 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20963      quit;
20964      *--- end code ---*;
 
20965      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20966      * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
20967      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20968      %macro DMVQINTERVAL;
20969          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
20970         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
20971         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
20972      %mend DMVQINTERVAL;
20973      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20974      * Clus: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Nominal Inputs Macro ;
20975      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20976      %macro DMVQNOMINAL;
20977          IMP_GeographicLiving IMP_HasChildren
20978      %mend DMVQNOMINAL;
20979      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20980      * Clus: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Ordinal Inputs Macro ;
20981      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20982      %macro DMVQORDINAL;
20983          IMP_EducationalDegree
20984      %mend DMVQORDINAL;
20985      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20986      * Clus: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run DMVQ procedure;
20987      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20988      title;
MPRINT(EM_DIAGRAM):   title;
20989      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
20990      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK
20991      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 13 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
20992      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 10 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
20993      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   IMP_GeographicLiving IMP_HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 2 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
20994      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   IMP_EducationalDegree
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 1 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
20995      VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 50 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
20996      MAKE outvar=EMWS1.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus_OUTVAR;
WARNING: Variable LOYALTY is omitted from the analysis because it contains no usable data.
 
NOTE: 13 input variable(s).
NOTE: Number of cases=9787
NOTE: Sum of frequencies=9787
NOTE: Sum of weights=9787
NOTE: VARDEF=DF
NOTE: Maximum number of categories=4
NOTE: The total number of variables is 13 with dimensionality 16.
NOTE: 12 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS_OUTVAR.DATA with 18 variables.
NOTE: The data set EMWS1.CLUS_OUTVAR has 4 observations and 18 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
20997      INITIAL radius=0
20998      initial=PRINCOMP
20999      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 initial=PRINCOMP ;
NOTE: 50 seeds were selected from data set WORK.CLUS_DMDB.DATA using the PRINCOMP algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
21000      TRAIN tech=FORGY
21001      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
21002      SAVE outstat=WORK.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
NOTE: The data set WORK.CLUS_OUTSTAT has 316 observations and 19 variables.
NOTE: The data set EMWS1.CLUS_OUTMEAN has 50 observations and 25 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
21003      code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas"
21004      group=Clus
21005      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
21006      run;
MPRINT(EM_DIAGRAM):   run;
 
21007      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 9787 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
21008      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
21009      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
21010      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
21011      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 16 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21012      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21013      * Clus: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus: DMVQ Variables;
21014      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21015      %macro dmvqvars;
21016          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
21017         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
21018         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
21019         IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3
21020         IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
21021      %mend ;
21022
21023
 
21024      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21025      * Clus: Determining the number of clusters;
MPRINT(EM_DIAGRAM):   * Clus: Determining the number of clusters;
21026      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21027      proc cluster data=EMWS1.Clus_OUTMEAN method=WARD pseudo outtree=EMWS1.Clus_CLUSSEED
21028      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS1.Clus_OUTMEAN method=WARD pseudo outtree=EMWS1.Clus_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
21029      var %dmvqvars;
MPRINT(DMVQVARS):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold IMP_GeographicLiving1
IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
MPRINT(EM_DIAGRAM):  ;
21030      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
21031      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_CLUSSEED has 99 observations and 33 variables.
NOTE: The PROCEDURE CLUSTER printed page 2.
NOTE: PROCEDURE CLUSTER used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21032      quit;
21033      proc sort data =EMWS1.Clus_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS1.Clus_CLUSSEED out=WORK._SEED_;
21034      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
21035      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
21036      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set EMWS1.CLUS_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 49 observations and 33 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21037      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
21038      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
21039      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
21040      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
21041      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
21042      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
21043      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
21044      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
21045      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
21046      output;
MPRINT(EM_DIAGRAM):   output;
21047      end;
MPRINT(EM_DIAGRAM):   end;
21048      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
21049      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
21050      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
21051      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21052      proc print data=WORK._SEED2_;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_;
21053      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
21054      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Number of Clusters";
21055      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Clustering Cubic Criterion";
21056      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidates for Optimum Number of Clusters";
MPRINT(EM_DIAGRAM):   run;
21057      run;
 
NOTE: There were 1 observations read from the data set WORK._SEED2_.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21058      title10;
MPRINT(EM_DIAGRAM):   title10;
21059      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):    data WORK._SEED2_;
21060      length msg $200;
MPRINT(EM_DIAGRAM):   length msg $200;
21061      set WORK._SEED2_ end=eof;
MPRINT(EM_DIAGRAM):   set WORK._SEED2_ end=eof;
21062      retain select cccSelect 0 numSel;
MPRINT(EM_DIAGRAM):   retain select cccSelect 0 numSel;
21063      if _N_=1 then numSel = numClus;
MPRINT(EM_DIAGRAM):   if _N_=1 then numSel = numClus;
21064      if cccvalue>=3 then do;
MPRINT(EM_DIAGRAM):   if cccvalue>=3 then do;
21065      if 20>= numclus >= 2 and cccSelect<1 then do;
MPRINT(EM_DIAGRAM):   if 20>= numclus >= 2 and cccSelect<1 then do;
21066      cccSelect = 1;
MPRINT(EM_DIAGRAM):   cccSelect = 1;
21067      select =1;
MPRINT(EM_DIAGRAM):   select =1;
21068      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
21069      end;
MPRINT(EM_DIAGRAM):   end;
21070      end;
MPRINT(EM_DIAGRAM):   end;
21071      else if 20>= numclus >= 2 and select<1 then do;
MPRINT(EM_DIAGRAM):   else if 20>= numclus >= 2 and select<1 then do;
21072      select = 1;
MPRINT(EM_DIAGRAM):   select = 1;
21073      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
21074      end;
MPRINT(EM_DIAGRAM):   end;
21075      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
21076      if ^(select=1 and cccselect=1) then do;
MPRINT(EM_DIAGRAM):   if ^(select=1 and cccselect=1) then do;
21077      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
21078      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
21079      put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
MPRINT(EM_DIAGRAM):   put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
21080      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
21081      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
21082      end;
MPRINT(EM_DIAGRAM):   end;
21083      if select<1 then do;
MPRINT(EM_DIAGRAM):   if select<1 then do;
21084      msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
21085      put msg;
MPRINT(EM_DIAGRAM):   put msg;
21086      end;
MPRINT(EM_DIAGRAM):   end;
21087      if cccselect<1 then do;
MPRINT(EM_DIAGRAM):   if cccselect<1 then do;
21088      msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
21089      put msg;
MPRINT(EM_DIAGRAM):   put msg;
21090      end;
MPRINT(EM_DIAGRAM):   end;
21091      call symput('em_maxC', strip(put(numSel,best.)));
MPRINT(EM_DIAGRAM):   call symput('em_maxC', strip(put(numSel,best.)));
21092      end;
MPRINT(EM_DIAGRAM):   end;
21093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._SEED2_.
NOTE: The data set WORK._SEED2_ has 1 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21094      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21095      * Clus: Training;
MPRINT(EM_DIAGRAM):   * Clus: Training;
21096      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21097      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21098      * Clus: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run DMVQ procedure;
21099      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21100      title;
MPRINT(EM_DIAGRAM):   title;
21101      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
21102      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK
21103      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 13 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
21104      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 10 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
21105      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   IMP_GeographicLiving IMP_HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 2 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
21106      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   IMP_EducationalDegree
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 1 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
21107      VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 3 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
21108      MAKE outvar=EMWS1.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus_OUTVAR;
WARNING: Variable LOYALTY is omitted from the analysis because it contains no usable data.
 
NOTE: 13 input variable(s).
NOTE: Number of cases=9787
NOTE: Sum of frequencies=9787
NOTE: Sum of weights=9787
NOTE: VARDEF=DF
NOTE: Maximum number of categories=4
NOTE: The total number of variables is 13 with dimensionality 16.
NOTE: 12 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS_OUTVAR.DATA with 18 variables.
NOTE: The data set EMWS1.CLUS_OUTVAR has 4 observations and 18 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
21109      INITIAL radius=0
21110      initial=PRINCOMP
21111      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 initial=PRINCOMP ;
NOTE: 3 seeds were selected from data set WORK.CLUS_DMDB.DATA using the PRINCOMP algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
21112      TRAIN tech=FORGY
21113      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
21114      SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
NOTE: The data set EMWS1.CLUS_OUTSTAT has 34 observations and 19 variables.
NOTE: The data set EMWS1.CLUS_OUTMEAN has 3 observations and 25 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
21115      code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas"
21116      group=Clus
21117      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
21118      run;
MPRINT(EM_DIAGRAM):   run;
 
21119      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 9787 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
21120      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libname _SPDSLIB is not assigned.
21121      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21122      * Clus: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus: Cluster Label;
21123      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21124      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
21125      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
21126      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
21127      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
21128      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
21129      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
21130      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
21131      output;
MPRINT(EM_DIAGRAM):   output;
21132      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
21133      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
21134      output;
MPRINT(EM_DIAGRAM):   output;
21135      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
21136      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
21137      output;
MPRINT(EM_DIAGRAM):   output;
21138      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_LABEL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:30:17" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 30, 2015
Time:                15:30:17
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2SJ4QPF "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2SJ4QPF new;
MPRINT(EM_DIAGRAM):   run;
21240      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
21241      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
21242      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
21243      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21244      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
21245      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21246      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21247      proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
21248      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21249      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 19 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21250      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
21251      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
21252      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21253      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
21254      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 19 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
21255      filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21256      *------------------------------------------------------------*;
21257      * Clus: Scoring DATA data;
21258      *------------------------------------------------------------*;
21259      data EMWS1.Clus_TRAIN
21260      / view=EMWS1.Clus_TRAIN
21261      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TRAIN / view=EMWS1.Clus_TRAIN ;
21262      set EMWS1.Filter_TRAIN
21263      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN ;
21264      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas.
21265     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21266     +*** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
21267     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21268     +
21269     +
21270     +*** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
21271     +drop _dm_bad; _dm_bad = 0;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
21272     +
21273     +*** Standardize ClaimsRate ;
MPRINT(EM_DIAGRAM):   *** Standardize ClaimsRate ;
21274     +drop T_ClaimsRate ;
MPRINT(EM_DIAGRAM):   drop T_ClaimsRate ;
21275     +if missing( ClaimsRate ) then T_ClaimsRate = .;
MPRINT(EM_DIAGRAM):   if missing( ClaimsRate ) then T_ClaimsRate = .;
21276     +else T_ClaimsRate = (ClaimsRate - 0.67794677876012) * 3.19941338729829;
MPRINT(EM_DIAGRAM):   else T_ClaimsRate = (ClaimsRate - 0.67794677876012) * 3.19941338729829;
21277     +
21278     +*** Standardize CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   *** Standardize CustomerMonetaryValue ;
21279     +drop T_CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   drop T_CustomerMonetaryValue ;
21280     +if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
MPRINT(EM_DIAGRAM):   if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
21281     +else T_CustomerMonetaryValue = (CustomerMonetaryValue
21282     +         - 216.160594666394) * 0.00411467214717;
MPRINT(EM_DIAGRAM):   else T_CustomerMonetaryValue = (CustomerMonetaryValue - 216.160594666394) * 0.00411467214717;
21283     +
21284     +*** Standardize IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_GrossMonthlySalary ;
21285     +drop T_IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   drop T_IMP_GrossMonthlySalary ;
21286     +if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
21287     +else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary
21288     +         - 5037.76267683033) * 0.00052230054959;
MPRINT(EM_DIAGRAM):   else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary - 5037.76267683033) * 0.00052230054959;
21289     +
21290     +*** Standardize IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBHealth ;
21291     +drop T_IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBHealth ;
21292     +if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
21293     +else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth
21294     +         - 169.062511833779) * 0.01393077964912;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth - 169.062511833779) * 0.01393077964912;
21295     +
21296     +*** Standardize IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBLife ;
21297     +drop T_IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBLife ;
21298     +if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
21299     +else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife
21300     +         - 40.9128391370854) * 0.02196228220047;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife - 40.9128391370854) * 0.02196228220047;
21301     +
21302     +*** Standardize IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBMotor ;
21303     +drop T_IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBMotor ;
21304     +if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
21305     +else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor
21306     +         - 300.705034925363) * 0.00752909476072;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor - 300.705034925363) * 0.00752909476072;
21307     +
21308     +*** Standardize IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBWorkComp ;
21309     +drop T_IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBWorkComp ;
21310     +if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
21311     +else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp
21312     +         - 39.1457064116058) * 0.02388036571999;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp - 39.1457064116058) * 0.02388036571999;
21313     +
21314     +*** Standardize IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_REP_CustomerAge ;
21315     +drop T_IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   drop T_IMP_REP_CustomerAge ;
21316     +if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
21317     +else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge
21318     +         - 48.3002159661034) * 0.05849681051166;
MPRINT(EM_DIAGRAM):   else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge - 48.3002159661034) * 0.05849681051166;
21319     +
21320     +*** Standardize PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   *** Standardize PremiumsinLOBHousehold ;
21321     +drop T_PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   drop T_PremiumsinLOBHousehold ;
21322     +if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
MPRINT(EM_DIAGRAM):   if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
21323     +else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold
21324     +         - 198.392193726367) * 0.00468668992402;
MPRINT(EM_DIAGRAM):   else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold - 198.392193726367) * 0.00468668992402;
21325     +
21326     +*** Generate dummy variables for IMP_GeographicLiving ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_GeographicLiving ;
21327     +drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3
21328     +        IMP_GeographicLiving4 ;
MPRINT(EM_DIAGRAM):   drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 ;
21329     +if missing( IMP_GeographicLiving ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_GeographicLiving ) then do;
21330     +   IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21331     +   IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21332     +   IMP_GeographicLiving3 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21333     +   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
21334     +end;
MPRINT(EM_DIAGRAM):   end;
21335     +else do;
MPRINT(EM_DIAGRAM):   else do;
21336     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21337     +   _dm12 = put( IMP_GeographicLiving , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_GeographicLiving , BEST12. );
21338     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = 0.6085514560971;
21339     +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
21340     +      IMP_GeographicLiving1 = -0.32404062826594;
21341     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
21342     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = 0.77142936442447;
21343     +      IMP_GeographicLiving4 = 0.6085514560971;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
21344     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
21345     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21346     +      IMP_GeographicLiving1 = 0.77142936442447;
21347     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
21348     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
21349     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
21350     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = 0.99943834172648;
21351     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21352     +      IMP_GeographicLiving1 = -0.32404062826594;
21353     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
21354     +      IMP_GeographicLiving3 = 0.99943834172648;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
21355     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = 1.49121975680923;
21356     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
21357     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21358     +      IMP_GeographicLiving1 = -0.32404062826594;
21359     +      IMP_GeographicLiving2 = 1.49121975680923;
MPRINT(EM_DIAGRAM):   else do;
21360     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21361     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21362     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21363     +   else do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21364     +      IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   end;
21365     +      IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   end;
21366     +      IMP_GeographicLiving3 = .;
21367     +      IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_HasChildren ;
21368     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop IMP_HasChildren0 IMP_HasChildren1 ;
21369     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_HasChildren ) then do;
21370     +end;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21371     +
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21372     +*** Generate dummy variables for IMP_HasChildren ;
MPRINT(EM_DIAGRAM):   end;
21373     +drop IMP_HasChildren0 IMP_HasChildren1 ;
21374     +if missing( IMP_HasChildren ) then do;
MPRINT(EM_DIAGRAM):   else do;
21375     +   IMP_HasChildren0 = .;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
21376     +   IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21377     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_HasChildren , BEST12. );
21378     +else do;
21379     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
21380     +   _dm12 = put( IMP_HasChildren , BEST12. );
21381     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = -0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = 0.45354645930186;
MPRINT(EM_DIAGRAM):   end;
21382     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
21383     +      IMP_HasChildren0 = -0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = 1.10231025194501;
21384     +      IMP_HasChildren1 = 0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = -1.10231025194501;
21385     +   end;
MPRINT(EM_DIAGRAM):   end;
21386     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
21387     +      IMP_HasChildren0 = 1.10231025194501;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21388     +      IMP_HasChildren1 = -1.10231025194501;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21389     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21390     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
21391     +      IMP_HasChildren0 = .;
21392     +      IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_EducationalDegree ;
21393     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop T_IMP_EducationalDegree ;
21394     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_EducationalDegree ) then do;
21395     +end;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21396     +
MPRINT(EM_DIAGRAM):   end;
21397     +*** Generate dummy variables for IMP_EducationalDegree ;
21398     +drop T_IMP_EducationalDegree ;
MPRINT(EM_DIAGRAM):   else do;
21399     +if missing( IMP_EducationalDegree ) then do;
MPRINT(EM_DIAGRAM):   length _dm15 $ 15;
21400     +   T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   drop _dm15 ;
21401     +end;
MPRINT(EM_DIAGRAM):   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21402     +else do;
21403     +   length _dm15 $ 15; drop _dm15 ;
MPRINT(DMNORMIP):   call dmnorm(_dm15,
21404     +   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21405     +   %DMNORMIP( _dm15 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm15 = '3 - BSC/MSC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 0.73555748368902;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm15 = '2 - HIGH SCHOOL' then do;
21406     +   if _dm15 = '3 - BSC/MSC'  then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -0.80523581525977;
21407     +      T_IMP_EducationalDegree = 0.73555748368902;
MPRINT(EM_DIAGRAM):   end;
21408     +   end;
21409     +   else if _dm15 = '2 - HIGH SCHOOL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '1 - BASIC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -1.6661375152455;
21410     +      T_IMP_EducationalDegree = -0.80523581525977;
MPRINT(EM_DIAGRAM):   end;
21411     +   end;
21412     +   else if _dm15 = '1 - BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '4 - PHD' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 1.7532834175406;
21413     +      T_IMP_EducationalDegree = -1.6661375152455;
MPRINT(EM_DIAGRAM):   end;
21414     +   end;
21415     +   else if _dm15 = '4 - PHD'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21416     +      T_IMP_EducationalDegree = 1.7532834175406;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21417     +   end;
MPRINT(EM_DIAGRAM):   end;
21418     +   else do;
MPRINT(EM_DIAGRAM):   end;
21419     +      T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
21420     +      _DM_BAD = 1;
21421     +   end;
21422     +end;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
21423     +
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
21424     +*** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21425     +
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
21426     +
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
21427     +*** Omitted Cases;
21428     +if _dm_bad then do;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
21429     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
21430     +   goto CLUSvlex ;
21431     +end; *** omitted;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
21432     +
21433     +*** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   array CLUSvads [3] _temporary_;
21434     +label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
21435     +label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 3;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ClaimsRate ) then do;
21436     +array CLUSvads [3] _temporary_;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ClaimsRate - -0.1067509403154 )**2;
21437     +drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ClaimsRate - 0.11883988166144 )**2;
21438     +_vqmvar = 0;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ClaimsRate - 0.08095656243799 )**2;
21439     +do _vqclus = 1 to 3; CLUSvads [_vqclus] = 0; end;
MPRINT(EM_DIAGRAM):   end;
21440     +if not missing( T_ClaimsRate ) then do;
21441     +   CLUSvads [1] + ( T_ClaimsRate - -0.1067509403154 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21442     +   CLUSvads [2] + ( T_ClaimsRate - 0.11883988166144 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_CustomerMonetaryValue ) then do;
21443     +   CLUSvads [3] + ( T_ClaimsRate - 0.08095656243799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CustomerMonetaryValue - -0.02465166420419 )**2;
21444     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CustomerMonetaryValue - -0.0835605329457 )**2;
21445     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CustomerMonetaryValue - 0.13806534314775 )**2;
MPRINT(EM_DIAGRAM):   end;
21446     +if not missing( T_CustomerMonetaryValue ) then do;
21447     +   CLUSvads [1] + ( T_CustomerMonetaryValue - -0.02465166420419 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21448     +   CLUSvads [2] + ( T_CustomerMonetaryValue - -0.0835605329457 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_GrossMonthlySalary ) then do;
21449     +   CLUSvads [3] + ( T_CustomerMonetaryValue - 0.13806534314775 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_GrossMonthlySalary - -0.08937612472079 )**2;
21450     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_GrossMonthlySalary - 1.11665313885414 )**2;
21451     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_GrossMonthlySalary - -1.02603933499744 )**2;
MPRINT(EM_DIAGRAM):   end;
21452     +if not missing( T_IMP_GrossMonthlySalary ) then do;
21453     +   CLUSvads [1] + ( T_IMP_GrossMonthlySalary - -0.08937612472079 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21454     +   CLUSvads [2] + ( T_IMP_GrossMonthlySalary - 1.11665313885414 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBHealth ) then do;
21455     +   CLUSvads [3] + ( T_IMP_GrossMonthlySalary - -1.02603933499744 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBHealth - -0.51705109816503 )**2;
21456     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBHealth - 0.55722691726309 )**2;
21457     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBHealth - 0.4118777319249 )**2;
MPRINT(EM_DIAGRAM):   end;
21458     +if not missing( T_IMP_PremiumsinLOBHealth ) then do;
21459     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBHealth - -0.51705109816503 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21460     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBHealth - 0.55722691726309 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBLife ) then do;
21461     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBHealth - 0.4118777319249 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBLife - -0.48906418940277 )**2;
21462     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBLife - 0.07371157073035 )**2;
21463     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBLife - 0.87710702640313 )**2;
MPRINT(EM_DIAGRAM):   end;
21464     +if not missing( T_IMP_PremiumsinLOBLife ) then do;
21465     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBLife - -0.48906418940277 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21466     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBLife - 0.07371157073035 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBMotor ) then do;
21467     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBLife - 0.87710702640313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBMotor - 0.76589928619236 )**2;
21468     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBMotor - -0.38441255049986 )**2;
21469     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBMotor - -1.08434458051326 )**2;
MPRINT(EM_DIAGRAM):   end;
21470     +if not missing( T_IMP_PremiumsinLOBMotor ) then do;
21471     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBMotor - 0.76589928619236 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21472     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBMotor - -0.38441255049986 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
21473     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBMotor - -1.08434458051326 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBWorkComp - -0.4987161937694 )**2;
21474     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.07614030401026 )**2;
21475     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBWorkComp - 0.89336991525772 )**2;
MPRINT(EM_DIAGRAM):   end;
21476     +if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
21477     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBWorkComp - -0.4987161937694 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21478     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.07614030401026 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_REP_CustomerAge ) then do;
21479     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBWorkComp - 0.89336991525772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_REP_CustomerAge - -0.09039922909565 )**2;
21480     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_REP_CustomerAge - 1.16168792222724 )**2;
21481     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_REP_CustomerAge - -1.07246772042387 )**2;
MPRINT(EM_DIAGRAM):   end;
21482     +if not missing( T_IMP_REP_CustomerAge ) then do;
21483     +   CLUSvads [1] + ( T_IMP_REP_CustomerAge - -0.09039922909565 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21484     +   CLUSvads [2] + ( T_IMP_REP_CustomerAge - 1.16168792222724 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_PremiumsinLOBHousehold ) then do;
21485     +   CLUSvads [3] + ( T_IMP_REP_CustomerAge - -1.07246772042387 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PremiumsinLOBHousehold - -0.50473314620215 )**2;
21486     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PremiumsinLOBHousehold - 0.09998316505462 )**2;
21487     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PremiumsinLOBHousehold - 0.87949626614925 )**2;
MPRINT(EM_DIAGRAM):   end;
21488     +if not missing( T_PremiumsinLOBHousehold ) then do;
21489     +   CLUSvads [1] + ( T_PremiumsinLOBHousehold - -0.50473314620215 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21490     +   CLUSvads [2] + ( T_PremiumsinLOBHousehold - 0.09998316505462 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving1 ) then do;
21491     +   CLUSvads [3] + ( T_PremiumsinLOBHousehold - 0.87949626614925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving1 - 0.00727674947277 )**2;
21492     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving1 - -0.02237730971197 )**2;
21493     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving1 - 0.00983408120313 )**2;
MPRINT(EM_DIAGRAM):   end;
21494     +if not missing( IMP_GeographicLiving1 ) then do;
21495     +   CLUSvads [1] + ( IMP_GeographicLiving1 - 0.00727674947277 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21496     +   CLUSvads [2] + ( IMP_GeographicLiving1 - -0.02237730971197 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving2 ) then do;
21497     +   CLUSvads [3] + ( IMP_GeographicLiving1 - 0.00983408120313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving2 - -0.00027841068658 )**2;
21498     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving2 - 0.00962663264214 )**2;
21499     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving2 - -0.00980776107442 )**2;
MPRINT(EM_DIAGRAM):   end;
21500     +if not missing( IMP_GeographicLiving2 ) then do;
21501     +   CLUSvads [1] + ( IMP_GeographicLiving2 - -0.00027841068658 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21502     +   CLUSvads [2] + ( IMP_GeographicLiving2 - 0.00962663264214 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving3 ) then do;
21503     +   CLUSvads [3] + ( IMP_GeographicLiving2 - -0.00980776107442 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving3 - 0.00753305526726 )**2;
21504     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving3 - -0.0117857386235 )**2;
21505     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving3 - -0.00205699458937 )**2;
MPRINT(EM_DIAGRAM):   end;
21506     +if not missing( IMP_GeographicLiving3 ) then do;
21507     +   CLUSvads [1] + ( IMP_GeographicLiving3 - 0.00753305526726 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.24999999999999;
21508     +   CLUSvads [2] + ( IMP_GeographicLiving3 - -0.0117857386235 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving4 ) then do;
21509     +   CLUSvads [3] + ( IMP_GeographicLiving3 - -0.00205699458937 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving4 - -0.01274492565693 )**2;
21510     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving4 - 0.02452068495237 )**2;
21511     +else _vqmvar + 0.24999999999999;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving4 - -0.00144588195696 )**2;
MPRINT(EM_DIAGRAM):   end;
21512     +if not missing( IMP_GeographicLiving4 ) then do;
21513     +   CLUSvads [1] + ( IMP_GeographicLiving4 - -0.01274492565693 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.24999999999999;
21514     +   CLUSvads [2] + ( IMP_GeographicLiving4 - 0.02452068495237 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren0 ) then do;
21515     +   CLUSvads [3] + ( IMP_GeographicLiving4 - -0.00144588195696 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_HasChildren0 - -0.38800910836474 )**2;
21516     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_HasChildren0 - 0.90507219318486 )**2;
21517     +else _vqmvar + 0.24999999999999;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_HasChildren0 - -0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   end;
21518     +if not missing( IMP_HasChildren0 ) then do;
21519     +   CLUSvads [1] + ( IMP_HasChildren0 - -0.38800910836474 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
21520     +   CLUSvads [2] + ( IMP_HasChildren0 - 0.90507219318486 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren1 ) then do;
21521     +   CLUSvads [3] + ( IMP_HasChildren0 - -0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_HasChildren1 - 0.38800910836474 )**2;
21522     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_HasChildren1 - -0.90507219318486 )**2;
21523     +else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_HasChildren1 - 0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   end;
21524     +if not missing( IMP_HasChildren1 ) then do;
21525     +   CLUSvads [1] + ( IMP_HasChildren1 - 0.38800910836474 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
21526     +   CLUSvads [2] + ( IMP_HasChildren1 - -0.90507219318486 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_EducationalDegree ) then do;
21527     +   CLUSvads [3] + ( IMP_HasChildren1 - 0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_EducationalDegree - 0.34586411005645 )**2;
21528     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_EducationalDegree - -0.00169278868143 )**2;
21529     +else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_EducationalDegree - -0.67452344452255 )**2;
MPRINT(EM_DIAGRAM):   end;
21530     +if not missing( T_IMP_EducationalDegree ) then do;
21531     +   CLUSvads [1] + ( T_IMP_EducationalDegree - 0.34586411005645 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.99999999999999;
21532     +   CLUSvads [2] + ( T_IMP_EducationalDegree - -0.00169278868143 )**2;
MPRINT(EM_DIAGRAM):   _vqnvar = 12 - _vqmvar;
21533     +   CLUSvads [3] + ( T_IMP_EducationalDegree - -0.67452344452255 )**2;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.182787284255E-11 then do;
21534     +end;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21535     +else _vqmvar + 0.99999999999999;
MPRINT(EM_DIAGRAM):   end;
21536     +_vqnvar = 12 - _vqmvar;
MPRINT(EM_DIAGRAM):   else do;
21537     +if _vqnvar <= 2.182787284255E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
21538     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
21539     +end;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 3;
21540     +else do;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
21541     +   _SEGMENT_ = 1; Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
21542     +   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
MPRINT(EM_DIAGRAM):   end;
21543     +   do _vqclus = 2 to 3;
MPRINT(EM_DIAGRAM):   end;
21544     +      if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (12 / _vqnvar));
21545     +         _SEGMENT_ = _vqclus; Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   end;
21546     +         _vqfzdst = Distance * 0.99999999999988;
21547     +      end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
21548     +   end;
21549     +   Distance = sqrt(Distance * (12 / _vqnvar));
MPRINT(EM_DIAGRAM):   ***************************************;
21550     +end;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
21551     +CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21552     +
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
21553     +***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21554     +*** End Scoring Code from PROC DMVQ ***;
21555     +***************************************;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
21556     +*------------------------------------------------------------*;
21557     +* Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
21558     +*------------------------------------------------------------*;
21559     +length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21560     +label _SEGMENT_LABEL_='Segment Description';
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
21561     +if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21562     +else
21563     +if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
21564     +else
21565     +if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
21566      run;
 
NOTE: DATA STEP view saved on file EMWS1.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21567      quit;
21568      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
21569      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21570      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
21571      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus_TRAIN out=WORK.M1GI32CI noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GI32CI;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GI32CI(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GI32CI;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GI32CI;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0B9BA5J NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J3N6T3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9BA5J;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:30:18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 30, 2015
Time:                15:30:18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11IGIV6 "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11IGIV6 new;
MPRINT(EM_DIAGRAM):   run;
21942      data WORK.M1CPV9RS;
MPRINT(EM_DIAGRAM):    data WORK.M1CPV9RS;
21943      set WORK.M1CPV9RS;
MPRINT(EM_DIAGRAM):   set WORK.M1CPV9RS;
21944      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
21945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1CPV9RS.
NOTE: The data set WORK.M1CPV9RS has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21946      data WORK.M1CPV9RS;
MPRINT(EM_DIAGRAM):    data WORK.M1CPV9RS;
21947      set WORK.M1CPV9RS end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1CPV9RS end=_eof_ nobs=_nobs_;
21948      output;
MPRINT(EM_DIAGRAM):   output;
21949      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
21950      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
21951      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
21952      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
21953      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
21954      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
21955      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
21956      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
21957      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
21958      output;
MPRINT(EM_DIAGRAM):   output;
21959      end;
MPRINT(EM_DIAGRAM):   end;
21960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1CPV9RS.
NOTE: The data set WORK.M1CPV9RS has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21961      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21962      * Clus: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus: Create decision matrix;
21963      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21964      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21965      * Clus: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Variables Macro ;
21966      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21967      %macro EM_TREEVARS;
21968          ClaimsRate CustomerMonetaryValue IMP_EducationalDegree IMP_GeographicLiving
21969         IMP_GrossMonthlySalary IMP_HasChildren IMP_PremiumsinLOBHealth
21970         IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
21971         IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
21972      %mend EM_TREEVARS;
21973      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21974      * Clus: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Targets Macro ;
21975      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21976      %macro EM_TREETARGETS;
21977          _SEGMENT_
21978      %mend EM_TREETARGETS;
21979      data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
MPRINT(EM_DIAGRAM):   data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
21980      set
21980    ! EMWS1.Clus_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerMonetaryValue IMP_EducationalDegree IMP_GeographicLiving IMP_GrossMonthlySalary IMP_HasChildren IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
LOYALTY PremiumsinLOBHousehold _SEGMENT_);
21981      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.EM_CLUS.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21982      *------------------------------------------------------------* ;
21983      * Clus: Interval Inputs Macro ;
21984      *------------------------------------------------------------* ;
21985      %macro INTINPUTS;
21986          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
21987         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
21988         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
21989      %mend INTINPUTS;
21990      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21991      * Clus: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Binary and Nominal Inputs Macro ;
21992      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21993      %macro NOMINPUTS;
21994          IMP_GeographicLiving IMP_HasChildren
21995      %mend NOMINPUTS;
21996      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21997      * Clus: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Ordinal Inputs Macro ;
21998      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21999      %macro ORDINPUTS;
22000          IMP_EducationalDegree
22001      %mend ORDINPUTS;
22002      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22003      * Clus: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run ARBOR procedure;
22004      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
22005      proc arbor data=EMWS1.EM_Clus
22006      MAXSURRS=5
22007      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS1.EM_Clus MAXSURRS=5 ;
22008      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
22009      input %INTINPUTS
MPRINT(INTINPUTS):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
22010      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
22011      input %NOMINPUTS
MPRINT(NOMINPUTS):   IMP_GeographicLiving IMP_HasChildren
22012      / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
22013      input %ORDINPUTS
MPRINT(ORDINPUTS):   IMP_EducationalDegree
22014      / level=ordinal;
MPRINT(EM_DIAGRAM):   / level=ordinal;
22015      target _SEGMENT_ / level=NOMINAL
22016      Criterion=PROBCHISQ
22017      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
22018      ;
MPRINT(EM_DIAGRAM):   ;
22019      Performance DISK
22020      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
22021      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1277362 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 265867264 bytes.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 18 times.
NOTE: Training used 3457400 bytes of work memory.
NOTE: The subtree sequence contains 42 subtrees. The largest has 83 nodes and 42 leaves.
NOTE: Using subtree with 73 nodes and 37 leaves.
NOTE: Created macro variable NLEAVES equal to 37.
22022      save
22023      MODEL=EMWS1.Clus_PLOTDS
22024      SEQUENCE=EMWS1.Clus_OUTSEQ
22025      IMPORTANCE=EMWS1.Clus_OUTIMPORT
22026      NODESTAT=EMWS1.Clus_OUTNODES
22027      SUMMARY=WORK.OUTSUMMARY_TREE_0QJRUAU
22028      STATSBYNODE=WORK.OUTSTATS_TREE_0QJRUAU
22029      Pathlistnonmissing = WORK.OUTPATH_TREE_0QJRUAU
22030      Rules = WORK.OUTRULES_TREE_0QJRUAU
22031      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS1.Clus_PLOTDS SEQUENCE=EMWS1.Clus_OUTSEQ IMPORTANCE=EMWS1.Clus_OUTIMPORT NODESTAT=EMWS1.Clus_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_0QJRUAU STATSBYNODE=WORK.OUTSTATS_TREE_0QJRUAU Pathlistnonmissing =
WORK.OUTPATH_TREE_0QJRUAU Rules = WORK.OUTRULES_TREE_0QJRUAU ;
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 13 observations and 5 variables.
NOTE: The data set EMWS1.CLUS_PLOTDS has 3697 observations and 4 variables.
NOTE: The data set EMWS1.CLUS_OUTNODES has 73 observations and 22 variables.
NOTE: The data set WORK.OUTPATH_TREE_0QJRUAU has 347 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_0QJRUAU has 1496 observations and 6 variables.
NOTE: The data set EMWS1.CLUS_OUTSEQ has 42 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_0QJRUAU has 365 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_0QJRUAU has 16 observations and 6 variables.
22032      run;
MPRINT(EM_DIAGRAM):   run;
 
22033      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           0.97 seconds
      cpu time            0.93 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.EM_CLUS.
NOTE: The data set WORK._NAMEDAT has 3 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.98 seconds
      cpu time            0.95 seconds
 
 
22034      data EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_OUTIMPORT;
22035      set EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT;
22036      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
22037         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
22038      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
22039      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.CLUS_OUTIMPORT.
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22040      filename x "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
22041      data temp;
MPRINT(EM_DIAGRAM):    data temp;
22042      length varname $33;
MPRINT(EM_DIAGRAM):   length varname $33;
22043      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
22044      set WORK.OUTPATH_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0QJRUAU;
22045      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
22046      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
22047      output;
MPRINT(EM_DIAGRAM):   output;
22048      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.OUTPATH_TREE_0QJRUAU.
NOTE: The data set WORK.TEMP has 347 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22049      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22050      by node;
MPRINT(EM_DIAGRAM):   by node;
22051      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 347 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22052      proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
22053      by node;
MPRINT(EM_DIAGRAM):   by node;
22054      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.OUTNODES has 73 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22055      data temp;
MPRINT(EM_DIAGRAM):   data temp;
22056      merge temp(in=_a) outnodes(keep= node
22057      NPRIORS
22058      P__SEGMENT_1
22059      P__SEGMENT_3
22060      P__SEGMENT_2
22061      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_3 P__SEGMENT_2 );
22062      by node;
MPRINT(EM_DIAGRAM):   by node;
22063      if _a;
MPRINT(EM_DIAGRAM):   if _a;
22064      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: There were 73 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 347 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22065      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22066      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
22067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 347 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22068      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22069      file x;
MPRINT(EM_DIAGRAM):   file x;
22070      set temp;
MPRINT(EM_DIAGRAM):   set temp;
22071      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
22072      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
22073      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
22074      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
22075      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
22076      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
22077      end;
MPRINT(EM_DIAGRAM):   end;
22078      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
22079      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22080      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
22081      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22082      end;
MPRINT(EM_DIAGRAM):   end;
22083      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
22084      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
22085      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
22086      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
22087      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22088      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22089      end;
MPRINT(EM_DIAGRAM):   end;
22090      else do;
MPRINT(EM_DIAGRAM):   else do;
22091      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22092      end;
MPRINT(EM_DIAGRAM):   end;
22093      end;
MPRINT(EM_DIAGRAM):   end;
22094      end;
MPRINT(EM_DIAGRAM):   end;
22095      else do;
MPRINT(EM_DIAGRAM):   else do;
22096      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22097      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22098      end;
MPRINT(EM_DIAGRAM):   end;
22099      else do;
MPRINT(EM_DIAGRAM):   else do;
22100      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22101      end;
MPRINT(EM_DIAGRAM):   end;
22102      end;
MPRINT(EM_DIAGRAM):   end;
22103      end;
MPRINT(EM_DIAGRAM):   end;
22104      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
22105      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22106      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
22107      end;
MPRINT(EM_DIAGRAM):   end;
22108      else do;
MPRINT(EM_DIAGRAM):   else do;
22109      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
22110      end;
MPRINT(EM_DIAGRAM):   end;
22111      end;
MPRINT(EM_DIAGRAM):   end;
22112      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
22113      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22114      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
22115      end;
MPRINT(EM_DIAGRAM):   end;
22116      else do;
MPRINT(EM_DIAGRAM):   else do;
22117      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
22118      end;
MPRINT(EM_DIAGRAM):   end;
22119      end;
MPRINT(EM_DIAGRAM):   end;
22120      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
22121      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22122      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
22123      end;
MPRINT(EM_DIAGRAM):   end;
22124      else do;
MPRINT(EM_DIAGRAM):   else do;
22125      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
22126      end;
MPRINT(EM_DIAGRAM):   end;
22127      end;
MPRINT(EM_DIAGRAM):   end;
22128      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22129      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22130      end;
MPRINT(EM_DIAGRAM):   end;
22131      else do;
MPRINT(EM_DIAGRAM):   else do;
22132      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
22133      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
22134      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
22135      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22136      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22137      end;
MPRINT(EM_DIAGRAM):   end;
22138      end;
MPRINT(EM_DIAGRAM):   end;
22139      else do;
MPRINT(EM_DIAGRAM):   else do;
22140      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22141      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22142      end;
MPRINT(EM_DIAGRAM):   end;
22143      end;
MPRINT(EM_DIAGRAM):   end;
22144      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
22145      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
22146      end;
MPRINT(EM_DIAGRAM):   end;
22147      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
22148      end;
MPRINT(EM_DIAGRAM):   end;
22149      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22150      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22151      end;
MPRINT(EM_DIAGRAM):   end;
22152      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
22153      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
22154      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
22155      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
22156      end;
MPRINT(EM_DIAGRAM):   end;
22157      end;
MPRINT(EM_DIAGRAM):   end;
22158      put string;
MPRINT(EM_DIAGRAM):   put string;
22159      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22160      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22161      end;
MPRINT(EM_DIAGRAM):   end;
22162      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22163      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
22164      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
22165      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
22166      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
22167      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
22168      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
22169      put " ";
MPRINT(EM_DIAGRAM):   put " ";
22170      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22171      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22172      end;
MPRINT(EM_DIAGRAM):   end;
22173      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      22088:67    22091:66    22135:108   22136:72
NOTE: The file X is:
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=30Dec2015:15:30:20,
      Create Time=30Dec2015:15:20:37
 
NOTE: 524 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 100.
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22174      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
22175      /* belowtext */
22176      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
22177      set WORK.OUTRULES_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0QJRUAU;
22178      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
22179      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
22180      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
22181      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPLABEL has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22182      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
22183      set WORK.OUTRULES_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0QJRUAU;
22184      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
22185      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
22186      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPVAR has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22187      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
22188      by node;
MPRINT(EM_DIAGRAM):   by node;
22189      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPLABEL.
NOTE: The data set WORK.TEMPLABEL has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22190      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
22191      by node;
MPRINT(EM_DIAGRAM):   by node;
22192      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22193      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
22194      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
22195      by node;
MPRINT(EM_DIAGRAM):   by node;
22196      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
22197      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
22198      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 36 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22199      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
22200      by node;
MPRINT(EM_DIAGRAM):   by node;
22201      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22202      /* abovetext */
22203      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
22204      set WORK.OUTRULES_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0QJRUAU;
22205      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
22206      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPOUTRULES has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22207      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
22208      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
22209      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 37 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22210      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
22211      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
22212      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
22213      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
22214      length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   length abovetext tempstring origchar $45;
22215      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
22216      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
22217      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22218      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22219      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
22220      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
22221      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22222      output;
MPRINT(EM_DIAGRAM):   output;
22223      end;
MPRINT(EM_DIAGRAM):   end;
22224      else do;
MPRINT(EM_DIAGRAM):   else do;
22225      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
22226      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
22227      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
22228      output;
MPRINT(EM_DIAGRAM):   output;
22229      end;
MPRINT(EM_DIAGRAM):   end;
22230      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
22231      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22232      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22233      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22234      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22235      output;
MPRINT(EM_DIAGRAM):   output;
22236      end;
MPRINT(EM_DIAGRAM):   end;
22237      else do;
MPRINT(EM_DIAGRAM):   else do;
22238      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22239      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22240      output;
MPRINT(EM_DIAGRAM):   output;
22241      end;
MPRINT(EM_DIAGRAM):   end;
22242      end;
MPRINT(EM_DIAGRAM):   end;
22243      end;
MPRINT(EM_DIAGRAM):   end;
22244      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
22245      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
22246      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22247      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22248      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
22249      end;
MPRINT(EM_DIAGRAM):   end;
22250      else do;
MPRINT(EM_DIAGRAM):   else do;
22251      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
22252      end;
MPRINT(EM_DIAGRAM):   end;
22253      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22254      output;
MPRINT(EM_DIAGRAM):   output;
22255      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22256      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22257      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22258      end;
MPRINT(EM_DIAGRAM):   end;
22259      else do;
MPRINT(EM_DIAGRAM):   else do;
22260      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22261      end;
MPRINT(EM_DIAGRAM):   end;
22262      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22263      output;
MPRINT(EM_DIAGRAM):   output;
22264      end;
MPRINT(EM_DIAGRAM):   end;
22265      else do;
MPRINT(EM_DIAGRAM):   else do;
22266      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22267      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22268      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22269      end;
MPRINT(EM_DIAGRAM):   end;
22270      else do;
MPRINT(EM_DIAGRAM):   else do;
22271      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22272      end;
MPRINT(EM_DIAGRAM):   end;
22273      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22274      output;
MPRINT(EM_DIAGRAM):   output;
22275      end;
MPRINT(EM_DIAGRAM):   end;
22276      end;
MPRINT(EM_DIAGRAM):   end;
22277      else do;
MPRINT(EM_DIAGRAM):   else do;
22278      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
22279      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22280      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
22281      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
22282      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22283      end;
MPRINT(EM_DIAGRAM):   end;
22284      else do;
MPRINT(EM_DIAGRAM):   else do;
22285      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
22286      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
22287      end;
MPRINT(EM_DIAGRAM):   end;
22288      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22289      output;
MPRINT(EM_DIAGRAM):   output;
22290      end;
MPRINT(EM_DIAGRAM):   end;
22291      else do;
MPRINT(EM_DIAGRAM):   else do;
22292      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22293      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22294      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22295      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22296      end;
MPRINT(EM_DIAGRAM):   end;
22297      else do;
MPRINT(EM_DIAGRAM):   else do;
22298      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22299      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
22300      end;
MPRINT(EM_DIAGRAM):   end;
22301      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22302      output;
MPRINT(EM_DIAGRAM):   output;
22303      end;
MPRINT(EM_DIAGRAM):   end;
22304      end;
MPRINT(EM_DIAGRAM):   end;
22305      end;
MPRINT(EM_DIAGRAM):   end;
22306      else do;
MPRINT(EM_DIAGRAM):   else do;
22307      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
22308      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
22309      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
22310      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22311      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
22312      output;
MPRINT(EM_DIAGRAM):   output;
22313      end;
MPRINT(EM_DIAGRAM):   end;
22314      end;
MPRINT(EM_DIAGRAM):   end;
22315      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
22316      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
22317      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
22318      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
22319      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
22320      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
22321      end;
MPRINT(EM_DIAGRAM):   end;
22322      else do;
MPRINT(EM_DIAGRAM):   else do;
22323      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
22324      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
22325      end;
MPRINT(EM_DIAGRAM):   end;
22326      end;
MPRINT(EM_DIAGRAM):   end;
22327      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22328      output;
MPRINT(EM_DIAGRAM):   output;
22329      end;
MPRINT(EM_DIAGRAM):   end;
22330      else do;
MPRINT(EM_DIAGRAM):   else do;
22331      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
22332      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
22333      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
22334      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
22335      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
22336      end;
MPRINT(EM_DIAGRAM):   end;
22337      else do;
MPRINT(EM_DIAGRAM):   else do;
22338      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
22339      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
22340      end;
MPRINT(EM_DIAGRAM):   end;
22341      end;
MPRINT(EM_DIAGRAM):   end;
22342      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22343      end;
MPRINT(EM_DIAGRAM):   end;
22344      end;
MPRINT(EM_DIAGRAM):   end;
22345      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
22346      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      22219:25   22234:26   22248:24   22248:47   22257:26   22268:26   22281:24   22281:47   22294:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      22299:11
NOTE: There were 37 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 72 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22347      /* MIssing value to abovetext */
22348      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
22349      set WORK.OUTRULES_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0QJRUAU;
22350      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
22351      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
22352      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPMISSING has 36 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22353      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
22354      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22355      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 72 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 72 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22356      proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
22357      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22358      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 73 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22359      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
22360      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22361      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 36 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22362      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
22363      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
22364      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22365      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
22366      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
22367      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
22368      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
22369      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
22370      end;
MPRINT(EM_DIAGRAM):   end;
22371      else do;
MPRINT(EM_DIAGRAM):   else do;
22372      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
22373      end;
MPRINT(EM_DIAGRAM):   end;
22374      end;
MPRINT(EM_DIAGRAM):   end;
22375      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
22376      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
22377      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
22378      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
22379      end;
MPRINT(EM_DIAGRAM):   end;
22380      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
22381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 72 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 73 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 36 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22382      proc sort data=WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_outnodes;
22383      by node;
MPRINT(EM_DIAGRAM):   by node;
22384      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22385      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
22386      by node;
MPRINT(EM_DIAGRAM):   by node;
22387      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22388      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
22389      merge WORK.Clus_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_outnodes tempbelow;
22390      by node;
MPRINT(EM_DIAGRAM):   by node;
22391      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: There were 36 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.39 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
22392      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
22393      set WORK.OUTSTATS_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0QJRUAU;
22394      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
22395      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
22396      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.OUTSTATS_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPOUTSTATS has 365 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22397      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
22398      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
22399      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
22400      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
22401         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
22402         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
22403         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
22404      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
22405      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22406      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22407      by node;
MPRINT(EM_DIAGRAM):   by node;
22408      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22409      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
22410      by node;
MPRINT(EM_DIAGRAM):   by node;
22411      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 365 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22412      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
22413      merge EMWS1.Clus_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempoutstats;
22414      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
22415      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
22416      by node;
MPRINT(EM_DIAGRAM):   by node;
22417      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
22418      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
22419      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
22420      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
22421      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
22422      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
22423      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
22424      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22425      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22426      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
22427      end;
MPRINT(EM_DIAGRAM):   end;
22428      else do;
MPRINT(EM_DIAGRAM):   else do;
22429      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22430      end;
MPRINT(EM_DIAGRAM):   end;
22431      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
22432      end;
MPRINT(EM_DIAGRAM):   end;
22433      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22434      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
22435      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
22436      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
22437      end;
MPRINT(EM_DIAGRAM):   end;
22438      end;
MPRINT(EM_DIAGRAM):   end;
22439      else do;
MPRINT(EM_DIAGRAM):   else do;
22440      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
22441      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
22442      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
22443      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
22444      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
22445      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
22446      ;
MPRINT(EM_DIAGRAM):   ;
22447      ;
MPRINT(EM_DIAGRAM):   ;
22448      end;
MPRINT(EM_DIAGRAM):   end;
22449      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22450      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
22451      end;
MPRINT(EM_DIAGRAM):   end;
22452      ;
MPRINT(EM_DIAGRAM):   ;
22453      end;
MPRINT(EM_DIAGRAM):   end;
22454      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
22455      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
22456      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 365 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22457      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22458      set WORK.OUTSTATS_TREE_0QJRUAU;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0QJRUAU;
22459      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
22460      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
22461      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.OUTSTATS_TREE_0QJRUAU.
NOTE: The data set WORK.TEMPCOLOR has 365 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22462      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22463      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
22464      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
22465      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
22466      end;
MPRINT(EM_DIAGRAM):   end;
22467      else do;
MPRINT(EM_DIAGRAM):   else do;
22468      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
22469      end;
MPRINT(EM_DIAGRAM):   end;
22470      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22471      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22472      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
22473      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
22474      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
22475      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
22476      end;
MPRINT(EM_DIAGRAM):   end;
22477      else do;
MPRINT(EM_DIAGRAM):   else do;
22478      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
22479      end;
MPRINT(EM_DIAGRAM):   end;
22480      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
22481      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22482      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22483      by node;
MPRINT(EM_DIAGRAM):   by node;
22484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22485      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
22486      by node;
MPRINT(EM_DIAGRAM):   by node;
22487      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22488      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22489      merge EMWS1.Clus_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempcolor;
22490      by node;
MPRINT(EM_DIAGRAM):   by node;
22491      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
22492      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
22493      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
22494      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
22495      end;
MPRINT(EM_DIAGRAM):   end;
22496      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
22497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22498      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22499      set EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TREE_PLOT;
22500      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
22501      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22502      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
22503      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
22504      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 73 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22505      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
22506      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
22507      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 73 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22508      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
22509      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
22510      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
22511      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
22512      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Event Percentage";
22513      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Percent Cases";
22514      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
22515      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
22516      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
22517      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
22518      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
22519      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
22520      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
22521      keep NODE index tprob perc_train percevent_train
22522      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
22523      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22524      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
22525      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22526      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22527      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22528      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22530      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22531      merge EMWS1.Clus_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tree_temp;
22532      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 37 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22534      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22535      by node index;
MPRINT(EM_DIAGRAM):   by node index;
22536      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22537      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
22538      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
22539      proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs;
22540      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22541      title10;
MPRINT(EM_DIAGRAM):   title10;
22542      data WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):    data WORK.M04YWWXG;
22543      set WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):   set WORK.M04YWWXG;
22544      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22545      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M04YWWXG.
NOTE: The data set WORK.M04YWWXG has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22546      proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
22547      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
22548      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22549      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS_GRAPHVARS has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22550      proc sort data = WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M04YWWXG;
22551      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22552      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M04YWWXG.
NOTE: The data set WORK.M04YWWXG has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22553      data WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):   data WORK.M04YWWXG;
22554      merge WORK.M04YWWXG WORK.Clus_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M04YWWXG WORK.Clus_GRAPHVARS(in=_b_);
22555      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22556      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
22557      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M04YWWXG.
NOTE: There were 12 observations read from the data set WORK.CLUS_GRAPHVARS.
NOTE: The data set WORK.M04YWWXG has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22558      data WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):    data WORK.M04YWWXG;
22559      set WORK.M04YWWXG end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M04YWWXG end=_eof_ nobs=_nobs_;
22560      output;
MPRINT(EM_DIAGRAM):   output;
22561      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
22562      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
22563      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
22564      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
22565      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
22566      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
22567      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
22568      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
22569      output;
MPRINT(EM_DIAGRAM):   output;
22570      end;
MPRINT(EM_DIAGRAM):   end;
22571      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.M04YWWXG.
NOTE: The data set WORK.M04YWWXG has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22572      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22573      * Clus: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: STDIZE Variables Macro ;
22574      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22575      %macro stdizevar;
22576          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
22577         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
22578         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
22579      %mend stdizevar;
22580      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22581      * Clus: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus: Computing Summary Statistics;
22582      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22583      proc stdize
22584      data = EMWS1.Clus_TRAIN
22585      out=_null_
22586      outstat=WORK.Clus_STAT
22587      add=0 fuzz=1E-14 initial=MAD
22588      vardef=df
22589      method=STD
22590      mult=1
22591      pctlmtd=ORD_STAT pctldef=2
22592      pctlpts=(
22593      0
22594      100
22595      )
22596      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Clus_TRAIN out=_null_ outstat=WORK.Clus_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
22597      var %stdizevar;
MPRINT(STDIZEVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):  ;
22598      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK.CLUS_STAT has 10 observations and 10 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.34 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22599      quit;
 
22600      data WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus_MINMAX;
22601      set WORK.Clus_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus_STAT;
22602      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
22603      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
22604      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
22605      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS_MINMAX has 2 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22606      proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
22607      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
22608      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_MINMAX has 9 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22609      data WORK.Clus_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus_UGRID;
22610      set WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus_MINMAX;
22611      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
22612      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
22613      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
22614      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
22615      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
22616      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
22617      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
22618      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
22619      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
22620      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
22621      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_UGRID has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22622      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22623      * Clus: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus: Creating formats for binning interval variables;
22624      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22625      proc format;
MPRINT(EM_DIAGRAM):   proc format;
22626      value F1_
22627      0-0.16212697539413 = "0:0.1621"
22628      0.16212697539413-0.32425395078826 = "0.1621:0.3243"
22629      0.32425395078826-0.48638092618239 = "0.3243:0.4864"
22630      0.48638092618239-0.64850790157652 = "0.4864:0.6485"
22631      0.64850790157652-0.81063487697065 = "0.6485:0.8106"
22632      0.81063487697065-0.97276185236478 = "0.8106:0.9728"
22633      0.97276185236478-1.13488882775891 = "0.9728:1.1349"
22634      1.13488882775891-1.29701580315304 = "1.1349:1.297"
22635      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-0.16212697539413 = "0:0.1621" 0.16212697539413-0.32425395078826 = "0.1621:0.3243" 0.32425395078826-0.48638092618239 = "0.3243:0.4864" 0.48638092618239-0.64850790157652 = "0.4864:0.6485" 0.64850790157652-0.81063487697065 =
"0.6485:0.8106" 0.81063487697065-0.97276185236478 = "0.8106:0.9728" 0.97276185236478-1.13488882775891 = "0.9728:1.1349" 1.13488882775891-1.29701580315304 = "1.1349:1.297" ;
NOTE: Format F1_ has been output.
22636      value F2_
22637      -250.93--76.675 = "-250.9:-76.68"
22638      -76.675-97.58 = "-76.68:97.58"
22639      97.58-271.835 = "97.58:271.84"
22640      271.835-446.09 = "271.84:446.09"
22641      446.09-620.345 = "446.09:620.35"
22642      620.345-794.6 = "620.35:794.6"
22643      794.6-968.855 = "794.6:968.86"
22644      968.855-1143.11 = "968.86:1143.1"
22645      ;
MPRINT(EM_DIAGRAM):   value F2_ -250.93--76.675 = "-250.9:-76.68" -76.675-97.58 = "-76.68:97.58" 97.58-271.835 = "97.58:271.84" 271.835-446.09 = "271.84:446.09" 446.09-620.345 = "446.09:620.35" 620.345-794.6 = "620.35:794.6" 794.6-968.855 = "794.6:968.86"
968.855-1143.11 = "968.86:1143.1" ;
NOTE: Format F2_ has been output.
22646      value F3_
22647      866-1893.375 = "866:1893.4"
22648      1893.375-2920.75 = "1893.4:2920.8"
22649      2920.75-3948.125 = "2920.8:3948.1"
22650      3948.125-4975.5 = "3948.1:4975.5"
22651      4975.5-6002.875 = "4975.5:6002.9"
22652      6002.875-7030.25 = "6002.9:7030.3"
22653      7030.25-8057.625 = "7030.3:8057.6"
22654      8057.625-9085 = "8057.6:9085"
22655      ;
MPRINT(EM_DIAGRAM):   value F3_ 866-1893.375 = "866:1893.4" 1893.375-2920.75 = "1893.4:2920.8" 2920.75-3948.125 = "2920.8:3948.1" 3948.125-4975.5 = "3948.1:4975.5" 4975.5-6002.875 = "4975.5:6002.9" 6002.875-7030.25 = "6002.9:7030.3" 7030.25-8057.625 =
"7030.3:8057.6" 8057.625-9085 = "8057.6:9085" ;
NOTE: Format F3_ has been output.
22656      value F4_
22657      24.45-67.0275 = "24.45:67.028"
22658      67.0275-109.605 = "67.028:109.61"
22659      109.605-152.1825 = "109.61:152.18"
22660      152.1825-194.76 = "152.18:194.76"
22661      194.76-237.3375 = "194.76:237.34"
22662      237.3375-279.915 = "237.34:279.92"
22663      279.915-322.4925 = "279.92:322.49"
22664      322.4925-365.07 = "322.49:365.07"
22665      ;
MPRINT(EM_DIAGRAM):   value F4_ 24.45-67.0275 = "24.45:67.028" 67.0275-109.605 = "67.028:109.61" 109.605-152.1825 = "109.61:152.18" 152.1825-194.76 = "152.18:194.76" 194.76-237.3375 = "194.76:237.34" 237.3375-279.915 = "237.34:279.92" 279.915-322.4925 =
"279.92:322.49" 322.4925-365.07 = "322.49:365.07" ;
NOTE: Format F4_ has been output.
22666      value F5_
22667      -7-43.6625 = "-7:43.663"
22668      43.6625-94.325 = "43.663:94.325"
22669      94.325-144.9875 = "94.325:144.99"
22670      144.9875-195.65 = "144.99:195.65"
22671      195.65-246.3125 = "195.65:246.31"
22672      246.3125-296.975 = "246.31:296.98"
22673      296.975-347.6375 = "296.98:347.64"
22674      347.6375-398.3 = "347.64:398.3"
22675      ;
MPRINT(EM_DIAGRAM):   value F5_ -7-43.6625 = "-7:43.663" 43.6625-94.325 = "43.663:94.325" 94.325-144.9875 = "94.325:144.99" 144.9875-195.65 = "144.99:195.65" 195.65-246.3125 = "195.65:246.31" 246.3125-296.975 = "246.31:296.98" 296.975-347.6375 =
"296.98:347.64" 347.6375-398.3 = "347.64:398.3" ;
NOTE: Format F5_ has been output.
22676      value F6_
22677      18.78-86.3625 = "18.78:86.363"
22678      86.3625-153.945 = "86.363:153.95"
22679      153.945-221.5275 = "153.95:221.53"
22680      221.5275-289.11 = "221.53:289.11"
22681      289.11-356.6925 = "289.11:356.69"
22682      356.6925-424.275 = "356.69:424.28"
22683      424.275-491.8575 = "424.28:491.86"
22684      491.8575-559.44 = "491.86:559.44"
22685      ;
MPRINT(EM_DIAGRAM):   value F6_ 18.78-86.3625 = "18.78:86.363" 86.3625-153.945 = "86.363:153.95" 153.945-221.5275 = "153.95:221.53" 221.5275-289.11 = "221.53:289.11" 289.11-356.6925 = "289.11:356.69" 356.6925-424.275 = "356.69:424.28" 424.275-491.8575 =
"424.28:491.86" 491.8575-559.44 = "491.86:559.44" ;
NOTE: Format F6_ has been output.
22686      value F7_
22687      -11-22.1725 = "-11:22.173"
22688      22.1725-55.345 = "22.173:55.345"
22689      55.345-88.5175 = "55.345:88.518"
22690      88.5175-121.69 = "88.518:121.69"
22691      121.69-154.8625 = "121.69:154.86"
22692      154.8625-188.035 = "154.86:188.04"
22693      188.035-221.2075 = "188.04:221.21"
22694      221.2075-254.38 = "221.21:254.38"
22695      ;
MPRINT(EM_DIAGRAM):   value F7_ -11-22.1725 = "-11:22.173" 22.1725-55.345 = "22.173:55.345" 55.345-88.5175 = "55.345:88.518" 88.5175-121.69 = "88.518:121.69" 121.69-154.8625 = "121.69:154.86" 154.8625-188.035 = "154.86:188.04" 188.035-221.2075 =
"188.04:221.21" 221.2075-254.38 = "221.21:254.38" ;
NOTE: Format F7_ has been output.
22696      value F8_
22697      15-23.25 = "15:23.25"
22698      23.25-31.5 = "23.25:31.5"
22699      31.5-39.75 = "31.5:39.75"
22700      39.75-48 = "39.75:48"
22701      48-56.25 = "48:56.25"
22702      56.25-64.5 = "56.25:64.5"
22703      64.5-72.75 = "64.5:72.75"
22704      72.75-81 = "72.75:81"
22705      ;
MPRINT(EM_DIAGRAM):   value F8_ 15-23.25 = "15:23.25" 23.25-31.5 = "23.25:31.5" 31.5-39.75 = "31.5:39.75" 39.75-48 = "39.75:48" 48-56.25 = "48:56.25" 56.25-64.5 = "56.25:64.5" 64.5-72.75 = "64.5:72.75" 72.75-81 = "72.75:81" ;
NOTE: Format F8_ has been output.
22706      value F9_
22707      -70-88.0125 = "-70:88.013"
22708      88.0125-246.025 = "88.013:246.03"
22709      246.025-404.0375 = "246.03:404.04"
22710      404.0375-562.05 = "404.04:562.05"
22711      562.05-720.0625 = "562.05:720.06"
22712      720.0625-878.075 = "720.06:878.08"
22713      878.075-1036.0875 = "878.08:1036.1"
22714      1036.0875-1194.1 = "1036.1:1194.1"
22715      ;
MPRINT(EM_DIAGRAM):   value F9_ -70-88.0125 = "-70:88.013" 88.0125-246.025 = "88.013:246.03" 246.025-404.0375 = "246.03:404.04" 404.0375-562.05 = "404.04:562.05" 562.05-720.0625 = "562.05:720.06" 720.0625-878.075 = "720.06:878.08" 878.075-1036.0875 =
"878.08:1036.1" 1036.0875-1194.1 = "1036.1:1194.1" ;
NOTE: Format F9_ has been output.
MPRINT(EM_DIAGRAM):   run;
22716      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22717      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
22718      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
22719      proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
22720      table ClaimsRate * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ClaimsRate * _SEGMENT_ / missing;
22721      table CustomerMonetaryValue * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CustomerMonetaryValue * _SEGMENT_ / missing;
22722      table IMP_EducationalDegree * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_EducationalDegree * _SEGMENT_ / missing;
22723      table IMP_GeographicLiving * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_GeographicLiving * _SEGMENT_ / missing;
22724      table IMP_GrossMonthlySalary * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_GrossMonthlySalary * _SEGMENT_ / missing;
22725      table IMP_HasChildren * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_HasChildren * _SEGMENT_ / missing;
22726      table IMP_PremiumsinLOBHealth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBHealth * _SEGMENT_ / missing;
22727      table IMP_PremiumsinLOBLife * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBLife * _SEGMENT_ / missing;
22728      table IMP_PremiumsinLOBMotor * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBMotor * _SEGMENT_ / missing;
22729      table IMP_PremiumsinLOBWorkComp * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBWorkComp * _SEGMENT_ / missing;
22730      table IMP_REP_CustomerAge * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_REP_CustomerAge * _SEGMENT_ / missing;
22731      table PremiumsinLOBHousehold * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PremiumsinLOBHousehold * _SEGMENT_ / missing;
22732      format CLAIMSRATE F1_.;
MPRINT(EM_DIAGRAM):   format CLAIMSRATE F1_.;
22733      format CUSTOMERMONETARYVALUE F2_.;
MPRINT(EM_DIAGRAM):   format CUSTOMERMONETARYVALUE F2_.;
22734      format IMP_GROSSMONTHLYSALARY F3_.;
MPRINT(EM_DIAGRAM):   format IMP_GROSSMONTHLYSALARY F3_.;
22735      format IMP_PREMIUMSINLOBHEALTH F4_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBHEALTH F4_.;
22736      format IMP_PREMIUMSINLOBLIFE F5_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBLIFE F5_.;
22737      format IMP_PREMIUMSINLOBMOTOR F6_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBMOTOR F6_.;
22738      format IMP_PREMIUMSINLOBWORKCOMP F7_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBWORKCOMP F7_.;
22739      format IMP_REP_CUSTOMERAGE F8_.;
MPRINT(EM_DIAGRAM):   format IMP_REP_CUSTOMERAGE F8_.;
22740      format PREMIUMSINLOBHOUSEHOLD F9_.;
MPRINT(EM_DIAGRAM):   format PREMIUMSINLOBHOUSEHOLD F9_.;
22741      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.22 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 376 observations and 23 variables.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.33 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22742      quit;
22743      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
22744      data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
22745      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
22746         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
22747         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
22748      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
22749      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
22750      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
22751      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
22752      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
22753      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
22754      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
22755      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
22756      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
22757      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
22758      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
22759      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
22760      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
22761      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
22762      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
22763      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
22764      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
22765      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
22766      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
22767      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
22768      end;
MPRINT(EM_DIAGRAM):   end;
22769      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
22770      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
22771      end;
MPRINT(EM_DIAGRAM):   end;
22772      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22773      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22774      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
22775      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22776      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22777      proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
22778      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
22779      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
22780      output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
22781      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set WORK.CLUS_STATCOUNT has 36 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22782      proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
22783      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22784      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set WORK.CLUS_STATCOUNT has 36 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22785      data EMWS1.Clus_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(drop=SUM);
22786      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
22787      merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
22788      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22789      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
22790      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 36 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22791      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
22792      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
22793      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22794      proc sort data=WORK.M04YWWXG;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04YWWXG;
22795      by Name;
MPRINT(EM_DIAGRAM):   by Name;
22796      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M04YWWXG.
NOTE: The data set WORK.M04YWWXG has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22797      data EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE;
22798      merge EMWS1.Clus_PROFILE(in=_a) WORK.M04YWWXG(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE(in=_a) WORK.M04YWWXG(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
22799      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
22800      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
22801      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
22802      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
22803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This may cause unexpected results.
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 13 observations read from the data set WORK.M04YWWXG.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22804      proc sort data=EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE;
22805      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
22806      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22807      data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
22808      set EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_PROFILE;
22809      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
22810      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_label, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "rpt_OrderedValue_label";
22811      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
22812      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
22813      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
22814      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22815      data WORK.Clus_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus_temp;
22816      set EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTMEAN;
22817      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
22818      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTMEAN.
NOTE: The data set WORK.CLUS_TEMP has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22819      proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
22820      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
22821      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold IMP_GeographicLiving1
IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
MPRINT(EM_DIAGRAM):  );
22822      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_DISTANCE has 3 observations and 4 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22823      proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
22824      modify Clus_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus_DISTANCE;
22825      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
22826      run;
 
NOTE: MODIFY was successful for EMWS1.CLUS_DISTANCE.DATA.
22827      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22828      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22829      * Clus: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus: Creating data set for Input Mean report;
22830      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22831      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
22832      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
22833      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
22834      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 4 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22835      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22836      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22837      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 4 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22838      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
22839      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 4 observations and 17 variables.
NOTE: The data set WORK.STAT has 10 observations and 17 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22841      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
22842      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
22843      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 16 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22844      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
22845      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
22846      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
22847      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
22848      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
22849      end;
MPRINT(EM_DIAGRAM):   end;
22850      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
22851      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 16 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22852      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
22853      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22854      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 16 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22855      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
22856      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22857      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22858      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
22859      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22860      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22861      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
22862      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
22863      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22864      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
22865      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
22866      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22867      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
22868      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22869      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
22870      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
22871      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22872      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
22873      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22875      data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
22876      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
22877      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
22877    !  INPUT =
22878         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
22879         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
22880      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
22881      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22882      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
22883      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
22884      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
22885      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 65 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22886      proc sort data=EMWS1.Clus_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_INPUTMEAN;
22887      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
22888      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS_INPUTMEAN.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 65 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22889      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22890      * Clus: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus: Determining the important variables;
22891      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
22892      %let _nobs = 0;
22893      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
22894      set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
22895      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
22896      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22897      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
22898      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22899      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
22900      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
22901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22902      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
22903      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22904      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22905      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
22906      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22907      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22908      data vars;
MPRINT(EM_DIAGRAM):   data vars;
22909      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
22910      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22911      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
22912      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This may cause unexpected results.
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: There were 8 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22913      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
22914      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
22915      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22916      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22917      set vars;
MPRINT(EM_DIAGRAM):   set vars;
22918      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
22919      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
22920      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22921      *------------------------------------------------------------*;
22922      * mergeVarMeansandClusLabel;
22923      *------------------------------------------------------------*;
22924      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ IMP_REP_CustomerAge IMP_PremiumsinLOBLife IMP_PremiumsinLOBHealth PremiumsinLOBHousehold IMP_PremiumsinLOBMotor IMP_GrossMonthlySalary IMP_PremiumsinLOBWorkComp IMP_HasChildren0 IMP_HasChildren1);
22925      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ IMP_REP_CustomerAge IMP_PremiumsinLOBLife IMP_PremiumsinLOBHealth PremiumsinLOBHousehold IMP_PremiumsinLOBMotor IMP_GrossMonthlySalary IMP_PremiumsinLOBWorkComp IMP_HasChildren0 IMP_HasChildren1 8;
22926      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
22927      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
22928      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22929      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22930      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22931      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22932      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
22933      merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
22934      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22935      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_LABEL.
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.CLUS_LABEL has 3 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
