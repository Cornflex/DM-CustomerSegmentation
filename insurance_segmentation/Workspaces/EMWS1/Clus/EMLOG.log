*------------------------------------------------------------*
User:                D059331
Date:                December 30, 2015
Time:                15:57:15
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:05" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 30, 2015
Time:                15:57:05
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37I8CZT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37I8CZT new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:05" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:05" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20906      proc freq data=EMWS1.Clus_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Clus_VariableSet noprint;
20907      table ROLE*LEVEL/out=WORK.ClusMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ClusMETA;
20908      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUSMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
20909      proc print data=WORK.ClusMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ClusMETA label noobs;
20910      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20911      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20912      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20913      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20914      run;
 
NOTE: There were 6 observations read from the data set WORK.CLUSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20915      title10;
MPRINT(EM_DIAGRAM):   title10;
20916      data WORK.M2O88_GW;
MPRINT(EM_DIAGRAM):    data WORK.M2O88_GW;
20917      set WORK.M2O88_GW;
MPRINT(EM_DIAGRAM):   set WORK.M2O88_GW;
20918      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
20919      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M2O88_GW.
NOTE: The data set WORK.M2O88_GW has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2O88_GW;
MPRINT(EM_DIAGRAM):   set WORK.M2O88_GW;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
20928      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20929      * Clus: Preliminary Clustering;
MPRINT(EM_DIAGRAM):   * Clus: Preliminary Clustering;
20930      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20931      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20932      * Clus: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBClass Macro ;
20933      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20934      %macro DMDBClass;
20935          IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC) IMP_HasChildren(ASC)
20936      %mend DMDBClass;
20937      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20938      * Clus: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBVar Macro ;
20939      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20940      %macro DMDBVar;
20941          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
20942         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
20943         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
20944      %mend DMDBVar;
20945      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20946      * Clus: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus: Create DMDB;
20947      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20948      proc dmdb batch data=EMWS1.Filter_TRAIN
20949      dmdbcat=WORK.Clus_DMDB
20950      maxlevel = 513
20951      out=WORK.Clus_DMDB
20952      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Clus_DMDB maxlevel = 513 out=WORK.Clus_DMDB ;
MPRINT(EM_DIAGRAM):   class
20953      class %DMDBClass;
MPRINT(DMDBCLASS):   IMP_EducationalDegree(ASC) IMP_GeographicLiving(ASC) IMP_HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20954      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):  ;
20955      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Records processed = 9787   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.CLUS_DMDB has 9787 observations and 13 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20956      quit;
20957      *--- end code ---*;
 
20958      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20959      * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
20960      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20961      %macro DMVQINTERVAL;
20962          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
20963         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
20964         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
20965      %mend DMVQINTERVAL;
20966      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20967      * Clus: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Nominal Inputs Macro ;
20968      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20969      %macro DMVQNOMINAL;
20970          IMP_GeographicLiving IMP_HasChildren
20971      %mend DMVQNOMINAL;
20972      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20973      * Clus: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Ordinal Inputs Macro ;
20974      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20975      %macro DMVQORDINAL;
20976          IMP_EducationalDegree
20977      %mend DMVQORDINAL;
20978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20979      * Clus: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run DMVQ procedure;
20980      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20981      title;
MPRINT(EM_DIAGRAM):   title;
20982      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
20983      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK
20984      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 13 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
20985      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 10 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
20986      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   IMP_GeographicLiving IMP_HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 2 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
20987      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   IMP_EducationalDegree
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 1 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
20988      VQ maxc = 1000 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 1000 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 1000 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
20989      MAKE outvar=EMWS1.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus_OUTVAR;
WARNING: Variable LOYALTY is omitted from the analysis because it contains no usable data.
 
NOTE: 13 input variable(s).
NOTE: Number of cases=9787
NOTE: Sum of frequencies=9787
NOTE: Sum of weights=9787
NOTE: VARDEF=DF
NOTE: Maximum number of categories=4
NOTE: The total number of variables is 13 with dimensionality 16.
NOTE: 12 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS_OUTVAR.DATA with 18 variables.
NOTE: The data set EMWS1.CLUS_OUTVAR has 4 observations and 18 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
20990      INITIAL radius=0
20991      initial=PRINCOMP
20992      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 initial=PRINCOMP ;
NOTE: 1000 seeds were selected from data set WORK.CLUS_DMDB.DATA using the PRINCOMP algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
20993      TRAIN tech=FORGY
20994      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
20995      SAVE outstat=WORK.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
NOTE: The data set WORK.CLUS_OUTSTAT has 6016 observations and 19 variables.
NOTE: The data set EMWS1.CLUS_OUTMEAN has 1000 observations and 25 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
20996      code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas"
20997      group=Clus
20998      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
20999      run;
MPRINT(EM_DIAGRAM):   run;
 
21000      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 9787 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           1.78 seconds
      cpu time            1.75 seconds
 
 
21001      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
21002      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
21003      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
21004      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 16 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21005      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21006      * Clus: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus: DMVQ Variables;
21007      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21008      %macro dmvqvars;
21009          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
21010         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
21011         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
21012         IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3
21013         IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
21014      %mend ;
21015
21016
 
21017      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21018      * Clus: Determining the number of clusters;
MPRINT(EM_DIAGRAM):   * Clus: Determining the number of clusters;
21019      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21020      proc cluster data=EMWS1.Clus_OUTMEAN method=AVERAGE pseudo outtree=EMWS1.Clus_CLUSSEED
21021      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS1.Clus_OUTMEAN method=AVERAGE pseudo outtree=EMWS1.Clus_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
21022      var %dmvqvars;
MPRINT(DMVQVARS):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold IMP_GeographicLiving1
IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
MPRINT(EM_DIAGRAM):  ;
21023      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
21024      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 388 observation(s) omitted due to nonpositive frequency.
NOTE: The data set EMWS1.CLUS_CLUSSEED has 1611 observations and 33 variables.
NOTE: The PROCEDURE CLUSTER printed page 2.
NOTE: PROCEDURE CLUSTER used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21025      quit;
21026      proc sort data =EMWS1.Clus_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS1.Clus_CLUSSEED out=WORK._SEED_;
21027      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
21028      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
21029      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 611 observations read from the data set EMWS1.CLUS_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 611 observations and 33 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21030      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
21031      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
21032      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
21033      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
21034      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
21035      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
21036      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
21037      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
21038      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
21039      output;
MPRINT(EM_DIAGRAM):   output;
21040      end;
MPRINT(EM_DIAGRAM):   end;
21041      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
21042      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
21043      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
21044      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 611 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 56 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21045      proc print data=WORK._SEED2_;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_;
21046      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
21047      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Number of Clusters";
21048      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Clustering Cubic Criterion";
21049      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidates for Optimum Number of Clusters";
MPRINT(EM_DIAGRAM):   run;
21050      run;
 
NOTE: There were 56 observations read from the data set WORK._SEED2_.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21051      title10;
MPRINT(EM_DIAGRAM):   title10;
21052      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):    data WORK._SEED2_;
21053      length msg $200;
MPRINT(EM_DIAGRAM):   length msg $200;
21054      set WORK._SEED2_ end=eof;
MPRINT(EM_DIAGRAM):   set WORK._SEED2_ end=eof;
21055      retain select cccSelect 0 numSel;
MPRINT(EM_DIAGRAM):   retain select cccSelect 0 numSel;
21056      if _N_=1 then numSel = numClus;
MPRINT(EM_DIAGRAM):   if _N_=1 then numSel = numClus;
21057      if cccvalue>=2 then do;
MPRINT(EM_DIAGRAM):   if cccvalue>=2 then do;
21058      if 1000>= numclus >= 2 and cccSelect<1 then do;
MPRINT(EM_DIAGRAM):   if 1000>= numclus >= 2 and cccSelect<1 then do;
21059      cccSelect = 1;
MPRINT(EM_DIAGRAM):   cccSelect = 1;
21060      select =1;
MPRINT(EM_DIAGRAM):   select =1;
21061      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
21062      end;
MPRINT(EM_DIAGRAM):   end;
21063      end;
MPRINT(EM_DIAGRAM):   end;
21064      else if 1000>= numclus >= 2 and select<1 then do;
MPRINT(EM_DIAGRAM):   else if 1000>= numclus >= 2 and select<1 then do;
21065      select = 1;
MPRINT(EM_DIAGRAM):   select = 1;
21066      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
21067      end;
MPRINT(EM_DIAGRAM):   end;
21068      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
21069      if ^(select=1 and cccselect=1) then do;
MPRINT(EM_DIAGRAM):   if ^(select=1 and cccselect=1) then do;
21070      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
21071      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
21072      put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
MPRINT(EM_DIAGRAM):   put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
21073      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
21074      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
21075      end;
MPRINT(EM_DIAGRAM):   end;
21076      if select<1 then do;
MPRINT(EM_DIAGRAM):   if select<1 then do;
21077      msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
21078      put msg;
MPRINT(EM_DIAGRAM):   put msg;
21079      end;
MPRINT(EM_DIAGRAM):   end;
21080      if cccselect<1 then do;
MPRINT(EM_DIAGRAM):   if cccselect<1 then do;
21081      msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
21082      put msg;
MPRINT(EM_DIAGRAM):   put msg;
21083      end;
MPRINT(EM_DIAGRAM):   end;
21084      call symput('em_maxC', strip(put(numSel,best.)));
MPRINT(EM_DIAGRAM):   call symput('em_maxC', strip(put(numSel,best.)));
21085      end;
MPRINT(EM_DIAGRAM):   end;
21086      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._SEED2_.
NOTE: The data set WORK._SEED2_ has 56 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21087      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21088      * Clus: Training;
MPRINT(EM_DIAGRAM):   * Clus: Training;
21089      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21090      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21091      * Clus: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run DMVQ procedure;
21092      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21093      title;
MPRINT(EM_DIAGRAM):   title;
21094      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
21095      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK
21096      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 13 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
21097      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 10 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
21098      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   IMP_GeographicLiving IMP_HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 2 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
21099      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   IMP_EducationalDegree
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 1 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
21100      VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 3 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
21101      MAKE outvar=EMWS1.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus_OUTVAR;
WARNING: Variable LOYALTY is omitted from the analysis because it contains no usable data.
 
NOTE: 13 input variable(s).
NOTE: Number of cases=9787
NOTE: Sum of frequencies=9787
NOTE: Sum of weights=9787
NOTE: VARDEF=DF
NOTE: Maximum number of categories=4
NOTE: The total number of variables is 13 with dimensionality 16.
NOTE: 12 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS_OUTVAR.DATA with 18 variables.
NOTE: The data set EMWS1.CLUS_OUTVAR has 4 observations and 18 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
21102      INITIAL radius=0
21103      initial=PRINCOMP
21104      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 initial=PRINCOMP ;
NOTE: 3 seeds were selected from data set WORK.CLUS_DMDB.DATA using the PRINCOMP algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
21105      TRAIN tech=FORGY
21106      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
21107      SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
NOTE: The data set EMWS1.CLUS_OUTSTAT has 34 observations and 19 variables.
NOTE: The data set EMWS1.CLUS_OUTMEAN has 3 observations and 25 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
21108      code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas"
21109      group=Clus
21110      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
21111      run;
MPRINT(EM_DIAGRAM):   run;
 
21112      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 9787 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
21113      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libname _SPDSLIB is not assigned.
21114      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21115      * Clus: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus: Cluster Label;
21116      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21117      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
21118      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
21119      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
21120      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
21121      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
21122      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
21123      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
21124      output;
MPRINT(EM_DIAGRAM):   output;
21125      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
21126      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
21127      output;
MPRINT(EM_DIAGRAM):   output;
21128      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
21129      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
21130      output;
MPRINT(EM_DIAGRAM):   output;
21131      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_LABEL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:09" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 30, 2015
Time:                15:57:09
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2YACI1L "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2YACI1L new;
MPRINT(EM_DIAGRAM):   run;
21233      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
21234      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
21235      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
21236      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21237      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
21238      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21240      proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
21241      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21242      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 19 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21243      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
21244      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
21245      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21246      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
21247      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 19 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21248      filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21249      *------------------------------------------------------------*;
21250      * Clus: Scoring DATA data;
21251      *------------------------------------------------------------*;
21252      data EMWS1.Clus_TRAIN
21253      / view=EMWS1.Clus_TRAIN
21254      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TRAIN / view=EMWS1.Clus_TRAIN ;
21255      set EMWS1.Filter_TRAIN
21256      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN ;
21257      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas.
21258     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21259     +*** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
21260     +*****************************************;
MPRINT(EM_DIAGRAM):   *****************************************;
21261     +
21262     +
21263     +*** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
21264     +drop _dm_bad; _dm_bad = 0;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
21265     +
21266     +*** Standardize ClaimsRate ;
MPRINT(EM_DIAGRAM):   *** Standardize ClaimsRate ;
21267     +drop T_ClaimsRate ;
MPRINT(EM_DIAGRAM):   drop T_ClaimsRate ;
21268     +if missing( ClaimsRate ) then T_ClaimsRate = .;
MPRINT(EM_DIAGRAM):   if missing( ClaimsRate ) then T_ClaimsRate = .;
21269     +else T_ClaimsRate = (ClaimsRate - 0.67794677876012) * 3.19941338729829;
MPRINT(EM_DIAGRAM):   else T_ClaimsRate = (ClaimsRate - 0.67794677876012) * 3.19941338729829;
21270     +
21271     +*** Standardize CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   *** Standardize CustomerMonetaryValue ;
21272     +drop T_CustomerMonetaryValue ;
MPRINT(EM_DIAGRAM):   drop T_CustomerMonetaryValue ;
21273     +if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
MPRINT(EM_DIAGRAM):   if missing( CustomerMonetaryValue ) then T_CustomerMonetaryValue = .;
21274     +else T_CustomerMonetaryValue = (CustomerMonetaryValue
21275     +         - 216.160594666394) * 0.00411467214717;
MPRINT(EM_DIAGRAM):   else T_CustomerMonetaryValue = (CustomerMonetaryValue - 216.160594666394) * 0.00411467214717;
21276     +
21277     +*** Standardize IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_GrossMonthlySalary ;
21278     +drop T_IMP_GrossMonthlySalary ;
MPRINT(EM_DIAGRAM):   drop T_IMP_GrossMonthlySalary ;
21279     +if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_GrossMonthlySalary ) then T_IMP_GrossMonthlySalary = .;
21280     +else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary
21281     +         - 5037.76267683033) * 0.00052230054959;
MPRINT(EM_DIAGRAM):   else T_IMP_GrossMonthlySalary = (IMP_GrossMonthlySalary - 5037.76267683033) * 0.00052230054959;
21282     +
21283     +*** Standardize IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBHealth ;
21284     +drop T_IMP_PremiumsinLOBHealth ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBHealth ;
21285     +if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBHealth ) then T_IMP_PremiumsinLOBHealth = .;
21286     +else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth
21287     +         - 169.062511833779) * 0.01393077964912;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBHealth = (IMP_PremiumsinLOBHealth - 169.062511833779) * 0.01393077964912;
21288     +
21289     +*** Standardize IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBLife ;
21290     +drop T_IMP_PremiumsinLOBLife ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBLife ;
21291     +if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBLife ) then T_IMP_PremiumsinLOBLife = .;
21292     +else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife
21293     +         - 40.9128391370854) * 0.02196228220047;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBLife = (IMP_PremiumsinLOBLife - 40.9128391370854) * 0.02196228220047;
21294     +
21295     +*** Standardize IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBMotor ;
21296     +drop T_IMP_PremiumsinLOBMotor ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBMotor ;
21297     +if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBMotor ) then T_IMP_PremiumsinLOBMotor = .;
21298     +else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor
21299     +         - 300.705034925363) * 0.00752909476072;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBMotor = (IMP_PremiumsinLOBMotor - 300.705034925363) * 0.00752909476072;
21300     +
21301     +*** Standardize IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_PremiumsinLOBWorkComp ;
21302     +drop T_IMP_PremiumsinLOBWorkComp ;
MPRINT(EM_DIAGRAM):   drop T_IMP_PremiumsinLOBWorkComp ;
21303     +if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_PremiumsinLOBWorkComp ) then T_IMP_PremiumsinLOBWorkComp = .;
21304     +else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp
21305     +         - 39.1457064116058) * 0.02388036571999;
MPRINT(EM_DIAGRAM):   else T_IMP_PremiumsinLOBWorkComp = (IMP_PremiumsinLOBWorkComp - 39.1457064116058) * 0.02388036571999;
21306     +
21307     +*** Standardize IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   *** Standardize IMP_REP_CustomerAge ;
21308     +drop T_IMP_REP_CustomerAge ;
MPRINT(EM_DIAGRAM):   drop T_IMP_REP_CustomerAge ;
21309     +if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
MPRINT(EM_DIAGRAM):   if missing( IMP_REP_CustomerAge ) then T_IMP_REP_CustomerAge = .;
21310     +else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge
21311     +         - 48.3002159661034) * 0.05849681051166;
MPRINT(EM_DIAGRAM):   else T_IMP_REP_CustomerAge = (IMP_REP_CustomerAge - 48.3002159661034) * 0.05849681051166;
21312     +
21313     +*** Standardize PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   *** Standardize PremiumsinLOBHousehold ;
21314     +drop T_PremiumsinLOBHousehold ;
MPRINT(EM_DIAGRAM):   drop T_PremiumsinLOBHousehold ;
21315     +if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
MPRINT(EM_DIAGRAM):   if missing( PremiumsinLOBHousehold ) then T_PremiumsinLOBHousehold = .;
21316     +else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold
21317     +         - 198.392193726367) * 0.00468668992402;
MPRINT(EM_DIAGRAM):   else T_PremiumsinLOBHousehold = (PremiumsinLOBHousehold - 198.392193726367) * 0.00468668992402;
21318     +
21319     +*** Generate dummy variables for IMP_GeographicLiving ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_GeographicLiving ;
21320     +drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3
21321     +        IMP_GeographicLiving4 ;
MPRINT(EM_DIAGRAM):   drop IMP_GeographicLiving1 IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 ;
21322     +if missing( IMP_GeographicLiving ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_GeographicLiving ) then do;
21323     +   IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21324     +   IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21325     +   IMP_GeographicLiving3 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21326     +   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
21327     +end;
MPRINT(EM_DIAGRAM):   end;
21328     +else do;
MPRINT(EM_DIAGRAM):   else do;
21329     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21330     +   _dm12 = put( IMP_GeographicLiving , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_GeographicLiving , BEST12. );
21331     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = 0.6085514560971;
21332     +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
21333     +      IMP_GeographicLiving1 = -0.32404062826594;
21334     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
21335     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = 0.77142936442447;
21336     +      IMP_GeographicLiving4 = 0.6085514560971;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
21337     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
21338     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21339     +      IMP_GeographicLiving1 = 0.77142936442447;
21340     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
21341     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
21342     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = -0.16763086377407;
21343     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = 0.99943834172648;
21344     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21345     +      IMP_GeographicLiving1 = -0.32404062826594;
21346     +      IMP_GeographicLiving2 = -0.16763086377407;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
21347     +      IMP_GeographicLiving3 = 0.99943834172648;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = -0.32404062826594;
21348     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = 1.49121975680923;
21349     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = -0.25011493503349;
21350     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   end;
21351     +      IMP_GeographicLiving1 = -0.32404062826594;
21352     +      IMP_GeographicLiving2 = 1.49121975680923;
MPRINT(EM_DIAGRAM):   else do;
21353     +      IMP_GeographicLiving3 = -0.25011493503349;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving1 = .;
21354     +      IMP_GeographicLiving4 = -0.41076962910268;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving2 = .;
21355     +   end;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving3 = .;
21356     +   else do;
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21357     +      IMP_GeographicLiving1 = .;
MPRINT(EM_DIAGRAM):   end;
21358     +      IMP_GeographicLiving2 = .;
MPRINT(EM_DIAGRAM):   end;
21359     +      IMP_GeographicLiving3 = .;
21360     +      IMP_GeographicLiving4 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_HasChildren ;
21361     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop IMP_HasChildren0 IMP_HasChildren1 ;
21362     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_HasChildren ) then do;
21363     +end;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21364     +
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21365     +*** Generate dummy variables for IMP_HasChildren ;
MPRINT(EM_DIAGRAM):   end;
21366     +drop IMP_HasChildren0 IMP_HasChildren1 ;
21367     +if missing( IMP_HasChildren ) then do;
MPRINT(EM_DIAGRAM):   else do;
21368     +   IMP_HasChildren0 = .;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
21369     +   IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
21370     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_HasChildren , BEST12. );
21371     +else do;
21372     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
21373     +   _dm12 = put( IMP_HasChildren , BEST12. );
21374     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = -0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = 0.45354645930186;
MPRINT(EM_DIAGRAM):   end;
21375     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
21376     +      IMP_HasChildren0 = -0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = 1.10231025194501;
21377     +      IMP_HasChildren1 = 0.45354645930186;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = -1.10231025194501;
21378     +   end;
MPRINT(EM_DIAGRAM):   end;
21379     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
21380     +      IMP_HasChildren0 = 1.10231025194501;
MPRINT(EM_DIAGRAM):   IMP_HasChildren0 = .;
21381     +      IMP_HasChildren1 = -1.10231025194501;
MPRINT(EM_DIAGRAM):   IMP_HasChildren1 = .;
21382     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21383     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
21384     +      IMP_HasChildren0 = .;
21385     +      IMP_HasChildren1 = .;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_EducationalDegree ;
21386     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop T_IMP_EducationalDegree ;
21387     +   end;
MPRINT(EM_DIAGRAM):   if missing( IMP_EducationalDegree ) then do;
21388     +end;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21389     +
MPRINT(EM_DIAGRAM):   end;
21390     +*** Generate dummy variables for IMP_EducationalDegree ;
21391     +drop T_IMP_EducationalDegree ;
MPRINT(EM_DIAGRAM):   else do;
21392     +if missing( IMP_EducationalDegree ) then do;
MPRINT(EM_DIAGRAM):   length _dm15 $ 15;
21393     +   T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   drop _dm15 ;
21394     +end;
MPRINT(EM_DIAGRAM):   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21395     +else do;
21396     +   length _dm15 $ 15; drop _dm15 ;
MPRINT(DMNORMIP):   call dmnorm(_dm15,
21397     +   _dm15 = put( IMP_EducationalDegree , $CHAR15. );
21398     +   %DMNORMIP( _dm15 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm15 = '3 - BSC/MSC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 0.73555748368902;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm15 = '2 - HIGH SCHOOL' then do;
21399     +   if _dm15 = '3 - BSC/MSC'  then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -0.80523581525977;
21400     +      T_IMP_EducationalDegree = 0.73555748368902;
MPRINT(EM_DIAGRAM):   end;
21401     +   end;
21402     +   else if _dm15 = '2 - HIGH SCHOOL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '1 - BASIC' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = -1.6661375152455;
21403     +      T_IMP_EducationalDegree = -0.80523581525977;
MPRINT(EM_DIAGRAM):   end;
21404     +   end;
21405     +   else if _dm15 = '1 - BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm15 = '4 - PHD' then do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = 1.7532834175406;
21406     +      T_IMP_EducationalDegree = -1.6661375152455;
MPRINT(EM_DIAGRAM):   end;
21407     +   end;
21408     +   else if _dm15 = '4 - PHD'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_IMP_EducationalDegree = .;
21409     +      T_IMP_EducationalDegree = 1.7532834175406;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21410     +   end;
MPRINT(EM_DIAGRAM):   end;
21411     +   else do;
MPRINT(EM_DIAGRAM):   end;
21412     +      T_IMP_EducationalDegree = .;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
21413     +      _DM_BAD = 1;
21414     +   end;
21415     +end;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
21416     +
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
21417     +*** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21418     +
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
21419     +
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
21420     +*** Omitted Cases;
21421     +if _dm_bad then do;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
21422     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
21423     +   goto CLUSvlex ;
21424     +end; *** omitted;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
21425     +
21426     +*** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   array CLUSvads [3] _temporary_;
21427     +label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
21428     +label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 3;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ClaimsRate ) then do;
21429     +array CLUSvads [3] _temporary_;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ClaimsRate - -0.1067509403154 )**2;
21430     +drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ClaimsRate - 0.11883988166144 )**2;
21431     +_vqmvar = 0;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ClaimsRate - 0.08095656243799 )**2;
21432     +do _vqclus = 1 to 3; CLUSvads [_vqclus] = 0; end;
MPRINT(EM_DIAGRAM):   end;
21433     +if not missing( T_ClaimsRate ) then do;
21434     +   CLUSvads [1] + ( T_ClaimsRate - -0.1067509403154 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21435     +   CLUSvads [2] + ( T_ClaimsRate - 0.11883988166144 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_CustomerMonetaryValue ) then do;
21436     +   CLUSvads [3] + ( T_ClaimsRate - 0.08095656243799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CustomerMonetaryValue - -0.02465166420419 )**2;
21437     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CustomerMonetaryValue - -0.0835605329457 )**2;
21438     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CustomerMonetaryValue - 0.13806534314775 )**2;
MPRINT(EM_DIAGRAM):   end;
21439     +if not missing( T_CustomerMonetaryValue ) then do;
21440     +   CLUSvads [1] + ( T_CustomerMonetaryValue - -0.02465166420419 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21441     +   CLUSvads [2] + ( T_CustomerMonetaryValue - -0.0835605329457 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_GrossMonthlySalary ) then do;
21442     +   CLUSvads [3] + ( T_CustomerMonetaryValue - 0.13806534314775 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_GrossMonthlySalary - -0.08937612472079 )**2;
21443     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_GrossMonthlySalary - 1.11665313885414 )**2;
21444     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_GrossMonthlySalary - -1.02603933499744 )**2;
MPRINT(EM_DIAGRAM):   end;
21445     +if not missing( T_IMP_GrossMonthlySalary ) then do;
21446     +   CLUSvads [1] + ( T_IMP_GrossMonthlySalary - -0.08937612472079 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21447     +   CLUSvads [2] + ( T_IMP_GrossMonthlySalary - 1.11665313885414 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBHealth ) then do;
21448     +   CLUSvads [3] + ( T_IMP_GrossMonthlySalary - -1.02603933499744 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBHealth - -0.51705109816503 )**2;
21449     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBHealth - 0.55722691726309 )**2;
21450     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBHealth - 0.4118777319249 )**2;
MPRINT(EM_DIAGRAM):   end;
21451     +if not missing( T_IMP_PremiumsinLOBHealth ) then do;
21452     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBHealth - -0.51705109816503 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21453     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBHealth - 0.55722691726309 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBLife ) then do;
21454     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBHealth - 0.4118777319249 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBLife - -0.48906418940277 )**2;
21455     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBLife - 0.07371157073035 )**2;
21456     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBLife - 0.87710702640313 )**2;
MPRINT(EM_DIAGRAM):   end;
21457     +if not missing( T_IMP_PremiumsinLOBLife ) then do;
21458     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBLife - -0.48906418940277 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21459     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBLife - 0.07371157073035 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBMotor ) then do;
21460     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBLife - 0.87710702640313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBMotor - 0.76589928619236 )**2;
21461     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBMotor - -0.38441255049986 )**2;
21462     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBMotor - -1.08434458051326 )**2;
MPRINT(EM_DIAGRAM):   end;
21463     +if not missing( T_IMP_PremiumsinLOBMotor ) then do;
21464     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBMotor - 0.76589928619236 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21465     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBMotor - -0.38441255049986 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
21466     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBMotor - -1.08434458051326 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_PremiumsinLOBWorkComp - -0.4987161937694 )**2;
21467     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.07614030401026 )**2;
21468     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_PremiumsinLOBWorkComp - 0.89336991525772 )**2;
MPRINT(EM_DIAGRAM):   end;
21469     +if not missing( T_IMP_PremiumsinLOBWorkComp ) then do;
21470     +   CLUSvads [1] + ( T_IMP_PremiumsinLOBWorkComp - -0.4987161937694 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21471     +   CLUSvads [2] + ( T_IMP_PremiumsinLOBWorkComp - 0.07614030401026 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_REP_CustomerAge ) then do;
21472     +   CLUSvads [3] + ( T_IMP_PremiumsinLOBWorkComp - 0.89336991525772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_REP_CustomerAge - -0.09039922909565 )**2;
21473     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_REP_CustomerAge - 1.16168792222724 )**2;
21474     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_REP_CustomerAge - -1.07246772042387 )**2;
MPRINT(EM_DIAGRAM):   end;
21475     +if not missing( T_IMP_REP_CustomerAge ) then do;
21476     +   CLUSvads [1] + ( T_IMP_REP_CustomerAge - -0.09039922909565 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21477     +   CLUSvads [2] + ( T_IMP_REP_CustomerAge - 1.16168792222724 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_PremiumsinLOBHousehold ) then do;
21478     +   CLUSvads [3] + ( T_IMP_REP_CustomerAge - -1.07246772042387 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PremiumsinLOBHousehold - -0.50473314620215 )**2;
21479     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PremiumsinLOBHousehold - 0.09998316505462 )**2;
21480     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PremiumsinLOBHousehold - 0.87949626614925 )**2;
MPRINT(EM_DIAGRAM):   end;
21481     +if not missing( T_PremiumsinLOBHousehold ) then do;
21482     +   CLUSvads [1] + ( T_PremiumsinLOBHousehold - -0.50473314620215 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
21483     +   CLUSvads [2] + ( T_PremiumsinLOBHousehold - 0.09998316505462 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving1 ) then do;
21484     +   CLUSvads [3] + ( T_PremiumsinLOBHousehold - 0.87949626614925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving1 - 0.00727674947277 )**2;
21485     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving1 - -0.02237730971197 )**2;
21486     +else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving1 - 0.00983408120313 )**2;
MPRINT(EM_DIAGRAM):   end;
21487     +if not missing( IMP_GeographicLiving1 ) then do;
21488     +   CLUSvads [1] + ( IMP_GeographicLiving1 - 0.00727674947277 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21489     +   CLUSvads [2] + ( IMP_GeographicLiving1 - -0.02237730971197 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving2 ) then do;
21490     +   CLUSvads [3] + ( IMP_GeographicLiving1 - 0.00983408120313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving2 - -0.00027841068658 )**2;
21491     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving2 - 0.00962663264214 )**2;
21492     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving2 - -0.00980776107442 )**2;
MPRINT(EM_DIAGRAM):   end;
21493     +if not missing( IMP_GeographicLiving2 ) then do;
21494     +   CLUSvads [1] + ( IMP_GeographicLiving2 - -0.00027841068658 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.25;
21495     +   CLUSvads [2] + ( IMP_GeographicLiving2 - 0.00962663264214 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving3 ) then do;
21496     +   CLUSvads [3] + ( IMP_GeographicLiving2 - -0.00980776107442 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving3 - 0.00753305526726 )**2;
21497     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving3 - -0.0117857386235 )**2;
21498     +else _vqmvar + 0.25;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving3 - -0.00205699458937 )**2;
MPRINT(EM_DIAGRAM):   end;
21499     +if not missing( IMP_GeographicLiving3 ) then do;
21500     +   CLUSvads [1] + ( IMP_GeographicLiving3 - 0.00753305526726 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.24999999999999;
21501     +   CLUSvads [2] + ( IMP_GeographicLiving3 - -0.0117857386235 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_GeographicLiving4 ) then do;
21502     +   CLUSvads [3] + ( IMP_GeographicLiving3 - -0.00205699458937 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_GeographicLiving4 - -0.01274492565693 )**2;
21503     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_GeographicLiving4 - 0.02452068495237 )**2;
21504     +else _vqmvar + 0.24999999999999;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_GeographicLiving4 - -0.00144588195696 )**2;
MPRINT(EM_DIAGRAM):   end;
21505     +if not missing( IMP_GeographicLiving4 ) then do;
21506     +   CLUSvads [1] + ( IMP_GeographicLiving4 - -0.01274492565693 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.24999999999999;
21507     +   CLUSvads [2] + ( IMP_GeographicLiving4 - 0.02452068495237 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren0 ) then do;
21508     +   CLUSvads [3] + ( IMP_GeographicLiving4 - -0.00144588195696 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_HasChildren0 - -0.38800910836474 )**2;
21509     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_HasChildren0 - 0.90507219318486 )**2;
21510     +else _vqmvar + 0.24999999999999;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_HasChildren0 - -0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   end;
21511     +if not missing( IMP_HasChildren0 ) then do;
21512     +   CLUSvads [1] + ( IMP_HasChildren0 - -0.38800910836474 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
21513     +   CLUSvads [2] + ( IMP_HasChildren0 - 0.90507219318486 )**2;
MPRINT(EM_DIAGRAM):   if not missing( IMP_HasChildren1 ) then do;
21514     +   CLUSvads [3] + ( IMP_HasChildren0 - -0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( IMP_HasChildren1 - 0.38800910836474 )**2;
21515     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( IMP_HasChildren1 - -0.90507219318486 )**2;
21516     +else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( IMP_HasChildren1 - 0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   end;
21517     +if not missing( IMP_HasChildren1 ) then do;
21518     +   CLUSvads [1] + ( IMP_HasChildren1 - 0.38800910836474 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
21519     +   CLUSvads [2] + ( IMP_HasChildren1 - -0.90507219318486 )**2;
MPRINT(EM_DIAGRAM):   if not missing( T_IMP_EducationalDegree ) then do;
21520     +   CLUSvads [3] + ( IMP_HasChildren1 - 0.21452893323305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMP_EducationalDegree - 0.34586411005645 )**2;
21521     +end;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMP_EducationalDegree - -0.00169278868143 )**2;
21522     +else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMP_EducationalDegree - -0.67452344452255 )**2;
MPRINT(EM_DIAGRAM):   end;
21523     +if not missing( T_IMP_EducationalDegree ) then do;
21524     +   CLUSvads [1] + ( T_IMP_EducationalDegree - 0.34586411005645 )**2;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.99999999999999;
21525     +   CLUSvads [2] + ( T_IMP_EducationalDegree - -0.00169278868143 )**2;
MPRINT(EM_DIAGRAM):   _vqnvar = 12 - _vqmvar;
21526     +   CLUSvads [3] + ( T_IMP_EducationalDegree - -0.67452344452255 )**2;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.182787284255E-11 then do;
21527     +end;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
21528     +else _vqmvar + 0.99999999999999;
MPRINT(EM_DIAGRAM):   end;
21529     +_vqnvar = 12 - _vqmvar;
MPRINT(EM_DIAGRAM):   else do;
21530     +if _vqnvar <= 2.182787284255E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
21531     +   _SEGMENT_ = .; Distance = .;
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
21532     +end;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 3;
21533     +else do;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
21534     +   _SEGMENT_ = 1; Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
21535     +   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
MPRINT(EM_DIAGRAM):   end;
21536     +   do _vqclus = 2 to 3;
MPRINT(EM_DIAGRAM):   end;
21537     +      if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (12 / _vqnvar));
21538     +         _SEGMENT_ = _vqclus; Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   end;
21539     +         _vqfzdst = Distance * 0.99999999999988;
21540     +      end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
21541     +   end;
21542     +   Distance = sqrt(Distance * (12 / _vqnvar));
MPRINT(EM_DIAGRAM):   ***************************************;
21543     +end;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
21544     +CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21545     +
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
21546     +***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21547     +*** End Scoring Code from PROC DMVQ ***;
21548     +***************************************;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
21549     +*------------------------------------------------------------*;
21550     +* Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
21551     +*------------------------------------------------------------*;
21552     +length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21553     +label _SEGMENT_LABEL_='Segment Description';
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
21554     +if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
21555     +else
21556     +if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
21557     +else
21558     +if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
21559      run;
 
NOTE: DATA STEP view saved on file EMWS1.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21560      quit;
21561      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
21562      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21563      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
21564      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus_TRAIN out=WORK.M20T92IH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20T92IH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M20T92IH(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20T92IH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M20T92IH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3V6QQ6P NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BG28BE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V6QQ6P;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 30, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:10" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 30, 2015
Time:                15:57:10
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0AFWI9E "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0AFWI9E new;
MPRINT(EM_DIAGRAM):   run;
21935      data WORK.M0XQXEF9;
MPRINT(EM_DIAGRAM):    data WORK.M0XQXEF9;
21936      set WORK.M0XQXEF9;
MPRINT(EM_DIAGRAM):   set WORK.M0XQXEF9;
21937      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
21938      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M0XQXEF9.
NOTE: The data set WORK.M0XQXEF9 has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21939      data WORK.M0XQXEF9;
MPRINT(EM_DIAGRAM):    data WORK.M0XQXEF9;
21940      set WORK.M0XQXEF9 end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M0XQXEF9 end=_eof_ nobs=_nobs_;
21941      output;
MPRINT(EM_DIAGRAM):   output;
21942      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
21943      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
21944      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
21945      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
21946      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
21947      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
21948      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
21949      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
21950      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
21951      output;
MPRINT(EM_DIAGRAM):   output;
21952      end;
MPRINT(EM_DIAGRAM):   end;
21953      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M0XQXEF9.
NOTE: The data set WORK.M0XQXEF9 has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21954      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21955      * Clus: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus: Create decision matrix;
21956      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21957      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21958      * Clus: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Variables Macro ;
21959      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21960      %macro EM_TREEVARS;
21961          ClaimsRate CustomerMonetaryValue IMP_EducationalDegree IMP_GeographicLiving
21962         IMP_GrossMonthlySalary IMP_HasChildren IMP_PremiumsinLOBHealth
21963         IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
21964         IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
21965      %mend EM_TREEVARS;
21966      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21967      * Clus: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Targets Macro ;
21968      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21969      %macro EM_TREETARGETS;
21970          _SEGMENT_
21971      %mend EM_TREETARGETS;
21972      data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
MPRINT(EM_DIAGRAM):   data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
21973      set
21973    ! EMWS1.Clus_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerMonetaryValue IMP_EducationalDegree IMP_GeographicLiving IMP_GrossMonthlySalary IMP_HasChildren IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
LOYALTY PremiumsinLOBHousehold _SEGMENT_);
21974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.EM_CLUS.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21975      *------------------------------------------------------------* ;
21976      * Clus: Interval Inputs Macro ;
21977      *------------------------------------------------------------* ;
21978      %macro INTINPUTS;
21979          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
21980         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
21981         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
21982      %mend INTINPUTS;
21983      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21984      * Clus: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Binary and Nominal Inputs Macro ;
21985      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21986      %macro NOMINPUTS;
21987          IMP_GeographicLiving IMP_HasChildren
21988      %mend NOMINPUTS;
21989      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21990      * Clus: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Ordinal Inputs Macro ;
21991      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21992      %macro ORDINPUTS;
21993          IMP_EducationalDegree
21994      %mend ORDINPUTS;
21995      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21996      * Clus: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run ARBOR procedure;
21997      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
21998      proc arbor data=EMWS1.EM_Clus
21999      MAXSURRS=5
22000      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS1.EM_Clus MAXSURRS=5 ;
22001      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
22002      input %INTINPUTS
MPRINT(INTINPUTS):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge LOYALTY PremiumsinLOBHousehold
22003      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
22004      input %NOMINPUTS
MPRINT(NOMINPUTS):   IMP_GeographicLiving IMP_HasChildren
22005      / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
22006      input %ORDINPUTS
MPRINT(ORDINPUTS):   IMP_EducationalDegree
22007      / level=ordinal;
MPRINT(EM_DIAGRAM):   / level=ordinal;
22008      target _SEGMENT_ / level=NOMINAL
22009      Criterion=PROBCHISQ
22010      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
22011      ;
MPRINT(EM_DIAGRAM):   ;
22012      Performance DISK
22013      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
22014      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: 1277362 kilobytes of physical memory.
NOTE: Will use 9787 out of 9787 training cases.
NOTE: Using memory pool with 265867264 bytes.
NOTE: Will not search for split on variable LOYALTY.
NOTE: Too many values are missing.
NOTE: Passed training data 18 times.
NOTE: Training used 3457400 bytes of work memory.
NOTE: The subtree sequence contains 42 subtrees. The largest has 83 nodes and 42 leaves.
NOTE: Using subtree with 73 nodes and 37 leaves.
NOTE: Created macro variable NLEAVES equal to 37.
22015      save
22016      MODEL=EMWS1.Clus_PLOTDS
22017      SEQUENCE=EMWS1.Clus_OUTSEQ
22018      IMPORTANCE=EMWS1.Clus_OUTIMPORT
22019      NODESTAT=EMWS1.Clus_OUTNODES
22020      SUMMARY=WORK.OUTSUMMARY_TREE_3GET5SD
22021      STATSBYNODE=WORK.OUTSTATS_TREE_3GET5SD
22022      Pathlistnonmissing = WORK.OUTPATH_TREE_3GET5SD
22023      Rules = WORK.OUTRULES_TREE_3GET5SD
22024      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS1.Clus_PLOTDS SEQUENCE=EMWS1.Clus_OUTSEQ IMPORTANCE=EMWS1.Clus_OUTIMPORT NODESTAT=EMWS1.Clus_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_3GET5SD STATSBYNODE=WORK.OUTSTATS_TREE_3GET5SD Pathlistnonmissing =
WORK.OUTPATH_TREE_3GET5SD Rules = WORK.OUTRULES_TREE_3GET5SD ;
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 13 observations and 5 variables.
NOTE: The data set EMWS1.CLUS_PLOTDS has 3697 observations and 4 variables.
NOTE: The data set EMWS1.CLUS_OUTNODES has 73 observations and 22 variables.
NOTE: The data set WORK.OUTPATH_TREE_3GET5SD has 347 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_3GET5SD has 1496 observations and 6 variables.
NOTE: The data set EMWS1.CLUS_OUTSEQ has 42 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_3GET5SD has 365 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_3GET5SD has 16 observations and 6 variables.
22025      run;
MPRINT(EM_DIAGRAM):   run;
 
22026      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           1.02 seconds
      cpu time            0.90 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.EM_CLUS.
NOTE: The data set WORK._NAMEDAT has 3 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           1.06 seconds
      cpu time            0.93 seconds
 
 
22027      data EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_OUTIMPORT;
22028      set EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT;
22029      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
22030         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
22031      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
22032      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.CLUS_OUTIMPORT.
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22033      filename x "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
22034      data temp;
MPRINT(EM_DIAGRAM):    data temp;
22035      length varname $33;
MPRINT(EM_DIAGRAM):   length varname $33;
22036      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
22037      set WORK.OUTPATH_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_3GET5SD;
22038      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
22039      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
22040      output;
MPRINT(EM_DIAGRAM):   output;
22041      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.OUTPATH_TREE_3GET5SD.
NOTE: The data set WORK.TEMP has 347 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22042      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22043      by node;
MPRINT(EM_DIAGRAM):   by node;
22044      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 347 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22045      proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
22046      by node;
MPRINT(EM_DIAGRAM):   by node;
22047      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.OUTNODES has 73 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22048      data temp;
MPRINT(EM_DIAGRAM):   data temp;
22049      merge temp(in=_a) outnodes(keep= node
22050      NPRIORS
22051      P__SEGMENT_1
22052      P__SEGMENT_3
22053      P__SEGMENT_2
22054      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_3 P__SEGMENT_2 );
22055      by node;
MPRINT(EM_DIAGRAM):   by node;
22056      if _a;
MPRINT(EM_DIAGRAM):   if _a;
22057      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: There were 73 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 347 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22058      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22059      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
22060      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 347 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22061      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22062      file x;
MPRINT(EM_DIAGRAM):   file x;
22063      set temp;
MPRINT(EM_DIAGRAM):   set temp;
22064      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
22065      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
22066      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
22067      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
22068      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
22069      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
22070      end;
MPRINT(EM_DIAGRAM):   end;
22071      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
22072      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22073      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
22074      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22075      end;
MPRINT(EM_DIAGRAM):   end;
22076      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
22077      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
22078      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
22079      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
22080      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22081      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22082      end;
MPRINT(EM_DIAGRAM):   end;
22083      else do;
MPRINT(EM_DIAGRAM):   else do;
22084      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22085      end;
MPRINT(EM_DIAGRAM):   end;
22086      end;
MPRINT(EM_DIAGRAM):   end;
22087      end;
MPRINT(EM_DIAGRAM):   end;
22088      else do;
MPRINT(EM_DIAGRAM):   else do;
22089      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22090      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22091      end;
MPRINT(EM_DIAGRAM):   end;
22092      else do;
MPRINT(EM_DIAGRAM):   else do;
22093      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22094      end;
MPRINT(EM_DIAGRAM):   end;
22095      end;
MPRINT(EM_DIAGRAM):   end;
22096      end;
MPRINT(EM_DIAGRAM):   end;
22097      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
22098      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22099      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
22100      end;
MPRINT(EM_DIAGRAM):   end;
22101      else do;
MPRINT(EM_DIAGRAM):   else do;
22102      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
22103      end;
MPRINT(EM_DIAGRAM):   end;
22104      end;
MPRINT(EM_DIAGRAM):   end;
22105      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
22106      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22107      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
22108      end;
MPRINT(EM_DIAGRAM):   end;
22109      else do;
MPRINT(EM_DIAGRAM):   else do;
22110      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
22111      end;
MPRINT(EM_DIAGRAM):   end;
22112      end;
MPRINT(EM_DIAGRAM):   end;
22113      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
22114      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
22115      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
22116      end;
MPRINT(EM_DIAGRAM):   end;
22117      else do;
MPRINT(EM_DIAGRAM):   else do;
22118      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
22119      end;
MPRINT(EM_DIAGRAM):   end;
22120      end;
MPRINT(EM_DIAGRAM):   end;
22121      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22122      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22123      end;
MPRINT(EM_DIAGRAM):   end;
22124      else do;
MPRINT(EM_DIAGRAM):   else do;
22125      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
22126      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
22127      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
22128      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22129      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
22130      end;
MPRINT(EM_DIAGRAM):   end;
22131      end;
MPRINT(EM_DIAGRAM):   end;
22132      else do;
MPRINT(EM_DIAGRAM):   else do;
22133      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22134      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
22135      end;
MPRINT(EM_DIAGRAM):   end;
22136      end;
MPRINT(EM_DIAGRAM):   end;
22137      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
22138      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
22139      end;
MPRINT(EM_DIAGRAM):   end;
22140      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
22141      end;
MPRINT(EM_DIAGRAM):   end;
22142      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22143      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22144      end;
MPRINT(EM_DIAGRAM):   end;
22145      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
22146      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
22147      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
22148      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
22149      end;
MPRINT(EM_DIAGRAM):   end;
22150      end;
MPRINT(EM_DIAGRAM):   end;
22151      put string;
MPRINT(EM_DIAGRAM):   put string;
22152      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22153      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22154      end;
MPRINT(EM_DIAGRAM):   end;
22155      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22156      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
22157      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
22158      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
22159      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
22160      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
22161      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
22162      put " ";
MPRINT(EM_DIAGRAM):   put " ";
22163      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
22164      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
22165      end;
MPRINT(EM_DIAGRAM):   end;
22166      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      22081:67    22084:66    22128:108   22129:72
NOTE: The file X is:
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Clus\ENGLISHRULES.txt,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=30Dec2015:15:57:12,
      Create Time=30Dec2015:15:20:37
 
NOTE: 524 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 100.
NOTE: There were 347 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22167      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
22168      /* belowtext */
22169      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
22170      set WORK.OUTRULES_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_3GET5SD;
22171      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
22172      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
22173      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
22174      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_3GET5SD.
NOTE: The data set WORK.TEMPLABEL has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22175      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
22176      set WORK.OUTRULES_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_3GET5SD;
22177      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
22178      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
22179      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_3GET5SD.
NOTE: The data set WORK.TEMPVAR has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22180      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
22181      by node;
MPRINT(EM_DIAGRAM):   by node;
22182      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPLABEL.
NOTE: The data set WORK.TEMPLABEL has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22183      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
22184      by node;
MPRINT(EM_DIAGRAM):   by node;
22185      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22186      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
22187      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
22188      by node;
MPRINT(EM_DIAGRAM):   by node;
22189      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
22190      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
22191      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 36 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22192      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
22193      by node;
MPRINT(EM_DIAGRAM):   by node;
22194      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22195      /* abovetext */
22196      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
22197      set WORK.OUTRULES_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_3GET5SD;
22198      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
22199      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_3GET5SD.
NOTE: The data set WORK.TEMPOUTRULES has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22200      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
22201      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
22202      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 37 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22203      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
22204      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
22205      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
22206      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
22207      length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   length abovetext tempstring origchar $45;
22208      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
22209      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
22210      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22211      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22212      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
22213      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
22214      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22215      output;
MPRINT(EM_DIAGRAM):   output;
22216      end;
MPRINT(EM_DIAGRAM):   end;
22217      else do;
MPRINT(EM_DIAGRAM):   else do;
22218      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
22219      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
22220      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
22221      output;
MPRINT(EM_DIAGRAM):   output;
22222      end;
MPRINT(EM_DIAGRAM):   end;
22223      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
22224      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22225      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22226      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22227      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22228      output;
MPRINT(EM_DIAGRAM):   output;
22229      end;
MPRINT(EM_DIAGRAM):   end;
22230      else do;
MPRINT(EM_DIAGRAM):   else do;
22231      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22232      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22233      output;
MPRINT(EM_DIAGRAM):   output;
22234      end;
MPRINT(EM_DIAGRAM):   end;
22235      end;
MPRINT(EM_DIAGRAM):   end;
22236      end;
MPRINT(EM_DIAGRAM):   end;
22237      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
22238      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
22239      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22240      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22241      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
22242      end;
MPRINT(EM_DIAGRAM):   end;
22243      else do;
MPRINT(EM_DIAGRAM):   else do;
22244      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
22245      end;
MPRINT(EM_DIAGRAM):   end;
22246      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22247      output;
MPRINT(EM_DIAGRAM):   output;
22248      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22249      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22250      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22251      end;
MPRINT(EM_DIAGRAM):   end;
22252      else do;
MPRINT(EM_DIAGRAM):   else do;
22253      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22254      end;
MPRINT(EM_DIAGRAM):   end;
22255      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22256      output;
MPRINT(EM_DIAGRAM):   output;
22257      end;
MPRINT(EM_DIAGRAM):   end;
22258      else do;
MPRINT(EM_DIAGRAM):   else do;
22259      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22260      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22261      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22262      end;
MPRINT(EM_DIAGRAM):   end;
22263      else do;
MPRINT(EM_DIAGRAM):   else do;
22264      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22265      end;
MPRINT(EM_DIAGRAM):   end;
22266      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22267      output;
MPRINT(EM_DIAGRAM):   output;
22268      end;
MPRINT(EM_DIAGRAM):   end;
22269      end;
MPRINT(EM_DIAGRAM):   end;
22270      else do;
MPRINT(EM_DIAGRAM):   else do;
22271      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
22272      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22273      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
22274      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
22275      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22276      end;
MPRINT(EM_DIAGRAM):   end;
22277      else do;
MPRINT(EM_DIAGRAM):   else do;
22278      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
22279      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
22280      end;
MPRINT(EM_DIAGRAM):   end;
22281      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22282      output;
MPRINT(EM_DIAGRAM):   output;
22283      end;
MPRINT(EM_DIAGRAM):   end;
22284      else do;
MPRINT(EM_DIAGRAM):   else do;
22285      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
22286      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
22287      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
22288      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
22289      end;
MPRINT(EM_DIAGRAM):   end;
22290      else do;
MPRINT(EM_DIAGRAM):   else do;
22291      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
22292      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
22293      end;
MPRINT(EM_DIAGRAM):   end;
22294      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
22295      output;
MPRINT(EM_DIAGRAM):   output;
22296      end;
MPRINT(EM_DIAGRAM):   end;
22297      end;
MPRINT(EM_DIAGRAM):   end;
22298      end;
MPRINT(EM_DIAGRAM):   end;
22299      else do;
MPRINT(EM_DIAGRAM):   else do;
22300      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
22301      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
22302      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
22303      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22304      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
22305      output;
MPRINT(EM_DIAGRAM):   output;
22306      end;
MPRINT(EM_DIAGRAM):   end;
22307      end;
MPRINT(EM_DIAGRAM):   end;
22308      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
22309      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
22310      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
22311      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
22312      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
22313      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
22314      end;
MPRINT(EM_DIAGRAM):   end;
22315      else do;
MPRINT(EM_DIAGRAM):   else do;
22316      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
22317      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
22318      end;
MPRINT(EM_DIAGRAM):   end;
22319      end;
MPRINT(EM_DIAGRAM):   end;
22320      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22321      output;
MPRINT(EM_DIAGRAM):   output;
22322      end;
MPRINT(EM_DIAGRAM):   end;
22323      else do;
MPRINT(EM_DIAGRAM):   else do;
22324      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
22325      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
22326      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
22327      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
22328      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
22329      end;
MPRINT(EM_DIAGRAM):   end;
22330      else do;
MPRINT(EM_DIAGRAM):   else do;
22331      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
22332      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
22333      end;
MPRINT(EM_DIAGRAM):   end;
22334      end;
MPRINT(EM_DIAGRAM):   end;
22335      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
22336      end;
MPRINT(EM_DIAGRAM):   end;
22337      end;
MPRINT(EM_DIAGRAM):   end;
22338      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
22339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      22212:25   22227:26   22241:24   22241:47   22250:26   22261:26   22274:24   22274:47   22287:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      22292:11
NOTE: There were 37 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 72 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22340      /* MIssing value to abovetext */
22341      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
22342      set WORK.OUTRULES_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_3GET5SD;
22343      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
22344      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
22345      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1496 observations read from the data set WORK.OUTRULES_TREE_3GET5SD.
NOTE: The data set WORK.TEMPMISSING has 36 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22346      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
22347      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22348      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 72 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 72 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22349      proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
22350      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22351      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 73 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22352      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
22353      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 36 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22355      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
22356      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
22357      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
22358      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
22359      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
22360      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
22361      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
22362      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
22363      end;
MPRINT(EM_DIAGRAM):   end;
22364      else do;
MPRINT(EM_DIAGRAM):   else do;
22365      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
22366      end;
MPRINT(EM_DIAGRAM):   end;
22367      end;
MPRINT(EM_DIAGRAM):   end;
22368      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
22369      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
22370      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
22371      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
22372      end;
MPRINT(EM_DIAGRAM):   end;
22373      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
22374      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 72 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 73 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 36 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
22375      proc sort data=WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_outnodes;
22376      by node;
MPRINT(EM_DIAGRAM):   by node;
22377      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22378      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
22379      by node;
MPRINT(EM_DIAGRAM):   by node;
22380      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22381      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
22382      merge WORK.Clus_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_outnodes tempbelow;
22383      by node;
MPRINT(EM_DIAGRAM):   by node;
22384      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: There were 36 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS_OUTNODES has 73 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.36 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
22385      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
22386      set WORK.OUTSTATS_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_3GET5SD;
22387      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
22388      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
22389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.OUTSTATS_TREE_3GET5SD.
NOTE: The data set WORK.TEMPOUTSTATS has 365 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22390      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
22391      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
22392      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
22393      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
22394         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
22395         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
22396         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
22397      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
22398      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22399      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22400      by node;
MPRINT(EM_DIAGRAM):   by node;
22401      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22402      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
22403      by node;
MPRINT(EM_DIAGRAM):   by node;
22404      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 365 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22405      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
22406      merge EMWS1.Clus_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempoutstats;
22407      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
22408      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
22409      by node;
MPRINT(EM_DIAGRAM):   by node;
22410      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
22411      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
22412      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
22413      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
22414      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
22415      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
22416      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
22417      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22418      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22419      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
22420      end;
MPRINT(EM_DIAGRAM):   end;
22421      else do;
MPRINT(EM_DIAGRAM):   else do;
22422      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
22423      end;
MPRINT(EM_DIAGRAM):   end;
22424      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
22425      end;
MPRINT(EM_DIAGRAM):   end;
22426      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22427      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
22428      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
22429      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
22430      end;
MPRINT(EM_DIAGRAM):   end;
22431      end;
MPRINT(EM_DIAGRAM):   end;
22432      else do;
MPRINT(EM_DIAGRAM):   else do;
22433      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
22434      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
22435      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
22436      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
22437      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
22438      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
22439      ;
MPRINT(EM_DIAGRAM):   ;
22440      ;
MPRINT(EM_DIAGRAM):   ;
22441      end;
MPRINT(EM_DIAGRAM):   end;
22442      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
22443      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
22444      end;
MPRINT(EM_DIAGRAM):   end;
22445      ;
MPRINT(EM_DIAGRAM):   ;
22446      end;
MPRINT(EM_DIAGRAM):   end;
22447      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
22448      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
22449      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 365 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22450      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22451      set WORK.OUTSTATS_TREE_3GET5SD;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_3GET5SD;
22452      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
22453      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
22454      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.OUTSTATS_TREE_3GET5SD.
NOTE: The data set WORK.TEMPCOLOR has 365 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22455      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22456      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
22457      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
22458      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
22459      end;
MPRINT(EM_DIAGRAM):   end;
22460      else do;
MPRINT(EM_DIAGRAM):   else do;
22461      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
22462      end;
MPRINT(EM_DIAGRAM):   end;
22463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 365 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22464      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
22465      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
22466      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
22467      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
22468      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
22469      end;
MPRINT(EM_DIAGRAM):   end;
22470      else do;
MPRINT(EM_DIAGRAM):   else do;
22471      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
22472      end;
MPRINT(EM_DIAGRAM):   end;
22473      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
22474      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22475      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22476      by node;
MPRINT(EM_DIAGRAM):   by node;
22477      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22478      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
22479      by node;
MPRINT(EM_DIAGRAM):   by node;
22480      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 73 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22481      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22482      merge EMWS1.Clus_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempcolor;
22483      by node;
MPRINT(EM_DIAGRAM):   by node;
22484      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
22485      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
22486      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
22487      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
22488      end;
MPRINT(EM_DIAGRAM):   end;
22489      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
22490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 73 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22491      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22492      set EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TREE_PLOT;
22493      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
22494      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22495      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
22496      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
22497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 73 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22498      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
22499      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
22500      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 73 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22501      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
22502      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
22503      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
22504      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
22505      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Event Percentage";
22506      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Percent Cases";
22507      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
22508      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
22509      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
22510      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
22511      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
22512      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
22513      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
22514      keep NODE index tprob perc_train percevent_train
22515      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
22516      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22517      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
22518      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22519      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22520      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22521      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22523      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
22524      merge EMWS1.Clus_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tree_temp;
22525      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
22526      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 37 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22527      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
22528      by node index;
MPRINT(EM_DIAGRAM):   by node index;
22529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 73 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22530      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
22531      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
22532      proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs;
22533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22534      title10;
MPRINT(EM_DIAGRAM):   title10;
22535      data WORK.M112YBG_;
MPRINT(EM_DIAGRAM):    data WORK.M112YBG_;
22536      set WORK.M112YBG_;
MPRINT(EM_DIAGRAM):   set WORK.M112YBG_;
22537      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22538      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M112YBG_.
NOTE: The data set WORK.M112YBG_ has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22539      proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
22540      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
22541      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22542      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS_GRAPHVARS has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22543      proc sort data = WORK.M112YBG_;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M112YBG_;
22544      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22545      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M112YBG_.
NOTE: The data set WORK.M112YBG_ has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22546      data WORK.M112YBG_;
MPRINT(EM_DIAGRAM):   data WORK.M112YBG_;
22547      merge WORK.M112YBG_ WORK.Clus_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M112YBG_ WORK.Clus_GRAPHVARS(in=_b_);
22548      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22549      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
22550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M112YBG_.
NOTE: There were 12 observations read from the data set WORK.CLUS_GRAPHVARS.
NOTE: The data set WORK.M112YBG_ has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22551      data WORK.M112YBG_;
MPRINT(EM_DIAGRAM):    data WORK.M112YBG_;
22552      set WORK.M112YBG_ end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M112YBG_ end=_eof_ nobs=_nobs_;
22553      output;
MPRINT(EM_DIAGRAM):   output;
22554      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
22555      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
22556      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
22557      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
22558      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
22559      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
22560      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
22561      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
22562      output;
MPRINT(EM_DIAGRAM):   output;
22563      end;
MPRINT(EM_DIAGRAM):   end;
22564      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.M112YBG_.
NOTE: The data set WORK.M112YBG_ has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22565      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22566      * Clus: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: STDIZE Variables Macro ;
22567      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22568      %macro stdizevar;
22569          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
22570         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor
22571         IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
22572      %mend stdizevar;
22573      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22574      * Clus: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus: Computing Summary Statistics;
22575      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22576      proc stdize
22577      data = EMWS1.Clus_TRAIN
22578      out=_null_
22579      outstat=WORK.Clus_STAT
22580      add=0 fuzz=1E-14 initial=MAD
22581      vardef=df
22582      method=STD
22583      mult=1
22584      pctlmtd=ORD_STAT pctldef=2
22585      pctlpts=(
22586      0
22587      100
22588      )
22589      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Clus_TRAIN out=_null_ outstat=WORK.Clus_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
22590      var %stdizevar;
MPRINT(STDIZEVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold
MPRINT(EM_DIAGRAM):  ;
22591      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.31 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK.CLUS_STAT has 10 observations and 10 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.35 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22592      quit;
 
22593      data WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus_MINMAX;
22594      set WORK.Clus_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus_STAT;
22595      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
22596      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
22597      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
22598      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS_MINMAX has 2 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22599      proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
22600      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
22601      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_MINMAX has 9 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22602      data WORK.Clus_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus_UGRID;
22603      set WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus_MINMAX;
22604      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
22605      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
22606      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
22607      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
22608      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
22609      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
22610      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
22611      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
22612      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
22613      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
22614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_UGRID has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22615      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22616      * Clus: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus: Creating formats for binning interval variables;
22617      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22618      proc format;
MPRINT(EM_DIAGRAM):   proc format;
22619      value F1_
22620      0-0.16212697539413 = "0:0.1621"
22621      0.16212697539413-0.32425395078826 = "0.1621:0.3243"
22622      0.32425395078826-0.48638092618239 = "0.3243:0.4864"
22623      0.48638092618239-0.64850790157652 = "0.4864:0.6485"
22624      0.64850790157652-0.81063487697065 = "0.6485:0.8106"
22625      0.81063487697065-0.97276185236478 = "0.8106:0.9728"
22626      0.97276185236478-1.13488882775891 = "0.9728:1.1349"
22627      1.13488882775891-1.29701580315304 = "1.1349:1.297"
22628      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-0.16212697539413 = "0:0.1621" 0.16212697539413-0.32425395078826 = "0.1621:0.3243" 0.32425395078826-0.48638092618239 = "0.3243:0.4864" 0.48638092618239-0.64850790157652 = "0.4864:0.6485" 0.64850790157652-0.81063487697065 =
"0.6485:0.8106" 0.81063487697065-0.97276185236478 = "0.8106:0.9728" 0.97276185236478-1.13488882775891 = "0.9728:1.1349" 1.13488882775891-1.29701580315304 = "1.1349:1.297" ;
NOTE: Format F1_ has been output.
22629      value F2_
22630      -250.93--76.675 = "-250.9:-76.68"
22631      -76.675-97.58 = "-76.68:97.58"
22632      97.58-271.835 = "97.58:271.84"
22633      271.835-446.09 = "271.84:446.09"
22634      446.09-620.345 = "446.09:620.35"
22635      620.345-794.6 = "620.35:794.6"
22636      794.6-968.855 = "794.6:968.86"
22637      968.855-1143.11 = "968.86:1143.1"
22638      ;
MPRINT(EM_DIAGRAM):   value F2_ -250.93--76.675 = "-250.9:-76.68" -76.675-97.58 = "-76.68:97.58" 97.58-271.835 = "97.58:271.84" 271.835-446.09 = "271.84:446.09" 446.09-620.345 = "446.09:620.35" 620.345-794.6 = "620.35:794.6" 794.6-968.855 = "794.6:968.86"
968.855-1143.11 = "968.86:1143.1" ;
NOTE: Format F2_ has been output.
22639      value F3_
22640      866-1893.375 = "866:1893.4"
22641      1893.375-2920.75 = "1893.4:2920.8"
22642      2920.75-3948.125 = "2920.8:3948.1"
22643      3948.125-4975.5 = "3948.1:4975.5"
22644      4975.5-6002.875 = "4975.5:6002.9"
22645      6002.875-7030.25 = "6002.9:7030.3"
22646      7030.25-8057.625 = "7030.3:8057.6"
22647      8057.625-9085 = "8057.6:9085"
22648      ;
MPRINT(EM_DIAGRAM):   value F3_ 866-1893.375 = "866:1893.4" 1893.375-2920.75 = "1893.4:2920.8" 2920.75-3948.125 = "2920.8:3948.1" 3948.125-4975.5 = "3948.1:4975.5" 4975.5-6002.875 = "4975.5:6002.9" 6002.875-7030.25 = "6002.9:7030.3" 7030.25-8057.625 =
"7030.3:8057.6" 8057.625-9085 = "8057.6:9085" ;
NOTE: Format F3_ has been output.
22649      value F4_
22650      24.45-67.0275 = "24.45:67.028"
22651      67.0275-109.605 = "67.028:109.61"
22652      109.605-152.1825 = "109.61:152.18"
22653      152.1825-194.76 = "152.18:194.76"
22654      194.76-237.3375 = "194.76:237.34"
22655      237.3375-279.915 = "237.34:279.92"
22656      279.915-322.4925 = "279.92:322.49"
22657      322.4925-365.07 = "322.49:365.07"
22658      ;
MPRINT(EM_DIAGRAM):   value F4_ 24.45-67.0275 = "24.45:67.028" 67.0275-109.605 = "67.028:109.61" 109.605-152.1825 = "109.61:152.18" 152.1825-194.76 = "152.18:194.76" 194.76-237.3375 = "194.76:237.34" 237.3375-279.915 = "237.34:279.92" 279.915-322.4925 =
"279.92:322.49" 322.4925-365.07 = "322.49:365.07" ;
NOTE: Format F4_ has been output.
22659      value F5_
22660      -7-43.6625 = "-7:43.663"
22661      43.6625-94.325 = "43.663:94.325"
22662      94.325-144.9875 = "94.325:144.99"
22663      144.9875-195.65 = "144.99:195.65"
22664      195.65-246.3125 = "195.65:246.31"
22665      246.3125-296.975 = "246.31:296.98"
22666      296.975-347.6375 = "296.98:347.64"
22667      347.6375-398.3 = "347.64:398.3"
22668      ;
MPRINT(EM_DIAGRAM):   value F5_ -7-43.6625 = "-7:43.663" 43.6625-94.325 = "43.663:94.325" 94.325-144.9875 = "94.325:144.99" 144.9875-195.65 = "144.99:195.65" 195.65-246.3125 = "195.65:246.31" 246.3125-296.975 = "246.31:296.98" 296.975-347.6375 =
"296.98:347.64" 347.6375-398.3 = "347.64:398.3" ;
NOTE: Format F5_ has been output.
22669      value F6_
22670      18.78-86.3625 = "18.78:86.363"
22671      86.3625-153.945 = "86.363:153.95"
22672      153.945-221.5275 = "153.95:221.53"
22673      221.5275-289.11 = "221.53:289.11"
22674      289.11-356.6925 = "289.11:356.69"
22675      356.6925-424.275 = "356.69:424.28"
22676      424.275-491.8575 = "424.28:491.86"
22677      491.8575-559.44 = "491.86:559.44"
22678      ;
MPRINT(EM_DIAGRAM):   value F6_ 18.78-86.3625 = "18.78:86.363" 86.3625-153.945 = "86.363:153.95" 153.945-221.5275 = "153.95:221.53" 221.5275-289.11 = "221.53:289.11" 289.11-356.6925 = "289.11:356.69" 356.6925-424.275 = "356.69:424.28" 424.275-491.8575 =
"424.28:491.86" 491.8575-559.44 = "491.86:559.44" ;
NOTE: Format F6_ has been output.
22679      value F7_
22680      -11-22.1725 = "-11:22.173"
22681      22.1725-55.345 = "22.173:55.345"
22682      55.345-88.5175 = "55.345:88.518"
22683      88.5175-121.69 = "88.518:121.69"
22684      121.69-154.8625 = "121.69:154.86"
22685      154.8625-188.035 = "154.86:188.04"
22686      188.035-221.2075 = "188.04:221.21"
22687      221.2075-254.38 = "221.21:254.38"
22688      ;
MPRINT(EM_DIAGRAM):   value F7_ -11-22.1725 = "-11:22.173" 22.1725-55.345 = "22.173:55.345" 55.345-88.5175 = "55.345:88.518" 88.5175-121.69 = "88.518:121.69" 121.69-154.8625 = "121.69:154.86" 154.8625-188.035 = "154.86:188.04" 188.035-221.2075 =
"188.04:221.21" 221.2075-254.38 = "221.21:254.38" ;
NOTE: Format F7_ has been output.
22689      value F8_
22690      15-23.25 = "15:23.25"
22691      23.25-31.5 = "23.25:31.5"
22692      31.5-39.75 = "31.5:39.75"
22693      39.75-48 = "39.75:48"
22694      48-56.25 = "48:56.25"
22695      56.25-64.5 = "56.25:64.5"
22696      64.5-72.75 = "64.5:72.75"
22697      72.75-81 = "72.75:81"
22698      ;
MPRINT(EM_DIAGRAM):   value F8_ 15-23.25 = "15:23.25" 23.25-31.5 = "23.25:31.5" 31.5-39.75 = "31.5:39.75" 39.75-48 = "39.75:48" 48-56.25 = "48:56.25" 56.25-64.5 = "56.25:64.5" 64.5-72.75 = "64.5:72.75" 72.75-81 = "72.75:81" ;
NOTE: Format F8_ has been output.
22699      value F9_
22700      -70-88.0125 = "-70:88.013"
22701      88.0125-246.025 = "88.013:246.03"
22702      246.025-404.0375 = "246.03:404.04"
22703      404.0375-562.05 = "404.04:562.05"
22704      562.05-720.0625 = "562.05:720.06"
22705      720.0625-878.075 = "720.06:878.08"
22706      878.075-1036.0875 = "878.08:1036.1"
22707      1036.0875-1194.1 = "1036.1:1194.1"
22708      ;
MPRINT(EM_DIAGRAM):   value F9_ -70-88.0125 = "-70:88.013" 88.0125-246.025 = "88.013:246.03" 246.025-404.0375 = "246.03:404.04" 404.0375-562.05 = "404.04:562.05" 562.05-720.0625 = "562.05:720.06" 720.0625-878.075 = "720.06:878.08" 878.075-1036.0875 =
"878.08:1036.1" 1036.0875-1194.1 = "1036.1:1194.1" ;
NOTE: Format F9_ has been output.
MPRINT(EM_DIAGRAM):   run;
22709      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22710      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
22711      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
22712      proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
22713      table ClaimsRate * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ClaimsRate * _SEGMENT_ / missing;
22714      table CustomerMonetaryValue * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CustomerMonetaryValue * _SEGMENT_ / missing;
22715      table IMP_EducationalDegree * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_EducationalDegree * _SEGMENT_ / missing;
22716      table IMP_GeographicLiving * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_GeographicLiving * _SEGMENT_ / missing;
22717      table IMP_GrossMonthlySalary * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_GrossMonthlySalary * _SEGMENT_ / missing;
22718      table IMP_HasChildren * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_HasChildren * _SEGMENT_ / missing;
22719      table IMP_PremiumsinLOBHealth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBHealth * _SEGMENT_ / missing;
22720      table IMP_PremiumsinLOBLife * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBLife * _SEGMENT_ / missing;
22721      table IMP_PremiumsinLOBMotor * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBMotor * _SEGMENT_ / missing;
22722      table IMP_PremiumsinLOBWorkComp * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_PremiumsinLOBWorkComp * _SEGMENT_ / missing;
22723      table IMP_REP_CustomerAge * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table IMP_REP_CustomerAge * _SEGMENT_ / missing;
22724      table PremiumsinLOBHousehold * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PremiumsinLOBHousehold * _SEGMENT_ / missing;
22725      format CLAIMSRATE F1_.;
MPRINT(EM_DIAGRAM):   format CLAIMSRATE F1_.;
22726      format CUSTOMERMONETARYVALUE F2_.;
MPRINT(EM_DIAGRAM):   format CUSTOMERMONETARYVALUE F2_.;
22727      format IMP_GROSSMONTHLYSALARY F3_.;
MPRINT(EM_DIAGRAM):   format IMP_GROSSMONTHLYSALARY F3_.;
22728      format IMP_PREMIUMSINLOBHEALTH F4_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBHEALTH F4_.;
22729      format IMP_PREMIUMSINLOBLIFE F5_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBLIFE F5_.;
22730      format IMP_PREMIUMSINLOBMOTOR F6_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBMOTOR F6_.;
22731      format IMP_PREMIUMSINLOBWORKCOMP F7_.;
MPRINT(EM_DIAGRAM):   format IMP_PREMIUMSINLOBWORKCOMP F7_.;
22732      format IMP_REP_CUSTOMERAGE F8_.;
MPRINT(EM_DIAGRAM):   format IMP_REP_CUSTOMERAGE F8_.;
22733      format PREMIUMSINLOBHOUSEHOLD F9_.;
MPRINT(EM_DIAGRAM):   format PREMIUMSINLOBHOUSEHOLD F9_.;
22734      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 128408:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.36 seconds
      cpu time            0.32 seconds
 
NOTE: There were 9787 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 376 observations and 23 variables.
NOTE: There were 9787 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.41 seconds
      cpu time            0.37 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22735      quit;
22736      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
22737      data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
22738      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
22739         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
22740         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
22741      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
22742      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
22743      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
22744      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
22745      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
22746      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
22747      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
22748      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
22749      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
22750      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
22751      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
22752      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
22753      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
22754      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
22755      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
22756      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
22757      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
22758      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
22759      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
22760      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
22761      end;
MPRINT(EM_DIAGRAM):   end;
22762      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
22763      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
22764      end;
MPRINT(EM_DIAGRAM):   end;
22765      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22766      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22767      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
22768      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22769      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22770      proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
22771      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
22772      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
22773      output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
22774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set WORK.CLUS_STATCOUNT has 36 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22775      proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
22776      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set WORK.CLUS_STATCOUNT has 36 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22778      data EMWS1.Clus_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(drop=SUM);
22779      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
22780      merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
22781      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
22782      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
22783      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 36 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22784      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
22785      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
22786      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22787      proc sort data=WORK.M112YBG_;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M112YBG_;
22788      by Name;
MPRINT(EM_DIAGRAM):   by Name;
22789      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M112YBG_.
NOTE: The data set WORK.M112YBG_ has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22790      data EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE;
22791      merge EMWS1.Clus_PROFILE(in=_a) WORK.M112YBG_(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE(in=_a) WORK.M112YBG_(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
22792      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
22793      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
22794      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
22795      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
22796      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This may cause unexpected results.
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 13 observations read from the data set WORK.M112YBG_.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22797      proc sort data=EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE;
22798      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
22799      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22800      data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
22801      set EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_PROFILE;
22802      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
22803      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_label, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "rpt_OrderedValue_label";
22804      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
22805      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
22806      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
22807      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 246 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 246 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22808      data WORK.Clus_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus_temp;
22809      set EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTMEAN;
22810      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
22811      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTMEAN.
NOTE: The data set WORK.CLUS_TEMP has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22812      proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
22813      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
22814      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge PremiumsinLOBHousehold IMP_GeographicLiving1
IMP_GeographicLiving2 IMP_GeographicLiving3 IMP_GeographicLiving4 IMP_HasChildren0 IMP_HasChildren1 T_IMP_EducationalDegree
MPRINT(EM_DIAGRAM):  );
22815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_DISTANCE has 3 observations and 4 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22816      proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
22817      modify Clus_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus_DISTANCE;
22818      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
22819      run;
 
NOTE: MODIFY was successful for EMWS1.CLUS_DISTANCE.DATA.
22820      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22821      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22822      * Clus: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus: Creating data set for Input Mean report;
22823      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22824      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
22825      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
22826      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
22827      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 4 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22828      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22829      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22830      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 4 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22831      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
22832      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22833      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 4 observations and 17 variables.
NOTE: The data set WORK.STAT has 10 observations and 17 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22834      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
22835      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
22836      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 16 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22837      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
22838      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
22839      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
22840      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
22841      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
22842      end;
MPRINT(EM_DIAGRAM):   end;
22843      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
22844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 16 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22845      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
22846      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22847      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 16 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22848      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
22849      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22850      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22851      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
22852      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22853      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22854      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
22855      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
22856      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22857      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
22858      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
22859      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 16 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22860      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
22861      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22862      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
22863      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
22864      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22865      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
22866      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22867      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22868      data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
22869      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
22870      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
22870    !  INPUT =
22871         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
22872         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
22873      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
22874      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22875      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
22876      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
22877      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
22878      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: There were 64 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 65 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22879      proc sort data=EMWS1.Clus_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_INPUTMEAN;
22880      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
22881      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS_INPUTMEAN.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 65 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22882      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22883      * Clus: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus: Determining the important variables;
22884      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
22885      %let _nobs = 0;
22886      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
22887      set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
22888      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
22889      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22890      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
22891      var ClaimsRate--T_IMP_EducationalDegree;
MPRINT(EM_DIAGRAM):   var ClaimsRate--T_IMP_EducationalDegree;
22892      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
22893      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
22894      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22895      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
22896      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22897      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22898      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
22899      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22900      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22901      data vars;
MPRINT(EM_DIAGRAM):   data vars;
22902      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
22903      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
22904      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
22905      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This may cause unexpected results.
NOTE: There were 17 observations read from the data set WORK.TEMPVAR.
NOTE: There were 8 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22906      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
22907      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
22908      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22909      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22910      set vars;
MPRINT(EM_DIAGRAM):   set vars;
22911      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
22912      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
22913      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22914      *------------------------------------------------------------*;
22915      * mergeVarMeansandClusLabel;
22916      *------------------------------------------------------------*;
22917      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ IMP_REP_CustomerAge IMP_PremiumsinLOBLife IMP_PremiumsinLOBHealth PremiumsinLOBHousehold IMP_PremiumsinLOBMotor IMP_GrossMonthlySalary IMP_PremiumsinLOBWorkComp IMP_HasChildren0 IMP_HasChildren1);
22918      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ IMP_REP_CustomerAge IMP_PremiumsinLOBLife IMP_PremiumsinLOBHealth PremiumsinLOBHousehold IMP_PremiumsinLOBMotor IMP_GrossMonthlySalary IMP_PremiumsinLOBWorkComp IMP_HasChildren0 IMP_HasChildren1 8;
22919      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
22920      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
22921      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22922      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
22923      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22924      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22925      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
22926      merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
22927      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
22928      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_LABEL.
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.CLUS_LABEL has 3 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
