*------------------------------------------------------------*
User:                D059331
Date:                December 28, 2015
Time:                13:31:37
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:24" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 28, 2015
Time:                13:31:24
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0OL3_73 "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0OL3_73 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:24" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:24" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                D059331";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20479      proc freq data=EMWS1.Impt_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_VariableSet noprint;
20480      table ROLE*LEVEL/out=WORK.ImptMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ImptMETA;
20481      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.IMPT_VARIABLESET.
NOTE: The data set WORK.IMPTMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
20482      proc print data=WORK.ImptMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptMETA label noobs;
20483      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20484      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20485      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20486      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20487      run;
 
NOTE: There were 3 observations read from the data set WORK.IMPTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20488      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   set WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (ROLE ne 'REJECTED' and USE = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "COUNT";
MPRINT(EM_DIAGRAM):   else METHOD = "MEAN";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'TARGET' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "NONE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
20506      data WORK.Impt_TREEINPUTS;
MPRINT(EM_DIAGRAM):    data WORK.Impt_TREEINPUTS;
20507      set WORK.M3P56POU;
MPRINT(EM_DIAGRAM):   set WORK.M3P56POU;
20508      if ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then do;
20509      if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
MPRINT(EM_DIAGRAM):   if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
20510      ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   ROLE = 'INPUT';
20511      end;
MPRINT(EM_DIAGRAM):   end;
20512      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M3P56POU.
NOTE: The data set WORK.IMPT_TREEINPUTS has 13 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20513      data WORK.M3P56POU;
MPRINT(EM_DIAGRAM):   data WORK.M3P56POU;
20514      set WORK.M3P56POU;
MPRINT(EM_DIAGRAM):   set WORK.M3P56POU;
20515      if METHOD in("TREE", "TREESURR") then role = 'TARGET';
MPRINT(EM_DIAGRAM):   if METHOD in("TREE", "TREESURR") then role = 'TARGET';
20516      else if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if (role = 'REJECTED') then role = 'INPUT';
20517      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M3P56POU.
NOTE: The data set WORK.M3P56POU has 13 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
20518      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20519      * Impt: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBClass Macro ;
20520      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20521      %macro DMDBClass;
20522          EducationalDegree(DESC) FirstPolicyYear(DESC) GeographicLiving(DESC)
20523         HasChildren(DESC)
20524      %mend DMDBClass;
20525      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20526      * Impt: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBVar Macro ;
20527      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20528      %macro DMDBVar;
20529          ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary
20530         PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor
20531         PremiumsinLOBWorkComp
20532      %mend DMDBVar;
20533      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20534      * Impt: Create DMDB;
MPRINT(EM_DIAGRAM):   * Impt: Create DMDB;
20535      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20536      proc dmdb batch data=EMWS1.Plot2_TRAIN
20537      dmdbcat=WORK.Impt_DMDB
20538      classout=WORK.Impt_DMDBCLASSOUT
20539      varout=WORK.IMPUTE_1MUI3F5_DMDBVAROUT
20540      maxlevel = 513
20541      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Plot2_TRAIN dmdbcat=WORK.Impt_DMDB classout=WORK.Impt_DMDBCLASSOUT varout=WORK.IMPUTE_1MUI3F5_DMDBVAROUT maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20542      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(DESC) FirstPolicyYear(DESC) GeographicLiving(DESC) HasChildren(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20543      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20544      target
20545      EducationalDegree
20546      FirstPolicyYear
20547      GeographicLiving
20548      HasChildren
20549      ;
MPRINT(EM_DIAGRAM):   target EducationalDegree FirstPolicyYear GeographicLiving HasChildren ;
20550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10288   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10288 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 10288 observations read from the data set EMWS1.PLOT2_TRAIN.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 39 observations and 9 variables.
NOTE: The data set WORK.IMPUTE_1MUI3F5_DMDBVAROUT has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20551      quit;
20552      *--- end code ---*;
 
20553      proc sort data=WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Impt_DMDBCLASSOUT;
20554      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20555      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 39 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20556      data WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   data WORK.Impt_DMDBCLASSOUT;
20557      retain missFlag;
MPRINT(EM_DIAGRAM):   retain missFlag;
20558      set WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT;
20559      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20560      output;
MPRINT(EM_DIAGRAM):   output;
20561      if first.name then missflag = 0;
MPRINT(EM_DIAGRAM):   if first.name then missflag = 0;
20562      if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
MPRINT(EM_DIAGRAM):   if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
20563      if last.name and ^missFlag then do;
MPRINT(EM_DIAGRAM):   if last.name and ^missFlag then do;
20564      if type = 'C' then do;
MPRINT(EM_DIAGRAM):   if type = 'C' then do;
20565      LEVEL= '';
MPRINT(EM_DIAGRAM):   LEVEL= '';
20566      CRAW = '';
MPRINT(EM_DIAGRAM):   CRAW = '';
20567      NRAW = .;
MPRINT(EM_DIAGRAM):   NRAW = .;
20568      end;
MPRINT(EM_DIAGRAM):   end;
20569      else do;
MPRINT(EM_DIAGRAM):   else do;
20570      LEVEL='.';
MPRINT(EM_DIAGRAM):   LEVEL='.';
20571      CRAW = '.';
MPRINT(EM_DIAGRAM):   CRAW = '.';
20572      NRAW= .;
MPRINT(EM_DIAGRAM):   NRAW= .;
20573      end;
MPRINT(EM_DIAGRAM):   end;
20574      FREQUENCY = 0;
MPRINT(EM_DIAGRAM):   FREQUENCY = 0;
20575      FREQPERCENT = 0;
MPRINT(EM_DIAGRAM):   FREQPERCENT = 0;
20576      NMISSPERCENT = 0;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = 0;
20577      output;
MPRINT(EM_DIAGRAM):   output;
20578      end;
MPRINT(EM_DIAGRAM):   end;
20579      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 39 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20580      data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
MPRINT(EM_DIAGRAM):    data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
20581      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
20582      set
20583      WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.)))
20584      WORK.IMPUTE_1MUI3F5_DMDBVAROUT
20585      ;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.))) WORK.IMPUTE_1MUI3F5_DMDBVAROUT ;
20586      if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
MPRINT(EM_DIAGRAM):   if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
20587      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
      WHERE ((TYPE='C') and (CRAW=' ')) or ((TYPE='N') and (NRAW=.));
NOTE: There were 9 observations read from the data set WORK.IMPUTE_1MUI3F5_DMDBVAROUT.
NOTE: The data set WORK.IMPT_MISS has 13 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20588      proc sort data=WORK.M1PT88WB NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1PT88WB NOTHREADS;
20589      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20590      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: The data set WORK.M1PT88WB has 13 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20591      proc sort data=WORK.Impt_MISS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Impt_MISS NOTHREADS;
20592      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20593      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.IMPT_MISS has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20594      data WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   data WORK.M1PT88WB;
20595      merge WORK.M1PT88WB WORK.Impt_MISS(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M1PT88WB WORK.Impt_MISS(in=_b);
20596      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20597      if _b then output;
MPRINT(EM_DIAGRAM):   if _b then output;
20598      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: There were 13 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.M1PT88WB has 13 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20599      data WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   data WORK.M1PT88WB;
20600      set WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   set WORK.M1PT88WB;
20601      if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
MPRINT(EM_DIAGRAM):   if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
20602      else IMPUTE = 0;
MPRINT(EM_DIAGRAM):   else IMPUTE = 0;
20603      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: The data set WORK.M1PT88WB has 13 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20604      proc dmdb data=WORK.M1PT88WB outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):    proc dmdb data=WORK.M1PT88WB outtable=WORK.NEWNAMES nameserver;
20605      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
20606      prefix M_ IMP_;
MPRINT(EM_DIAGRAM):   prefix M_ IMP_;
20607      where IMPUTE=1;
MPRINT(EM_DIAGRAM):   where IMPUTE=1;
20608      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M1PT88WB.
      WHERE IMPUTE=1;
NOTE: The data set WORK.NEWNAMES has 10 observations and 3 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20609      data WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   data WORK.M1PT88WB;
20610      merge WORK.M1PT88WB WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M1PT88WB WORK.NEWNAMES;
20611      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20612      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: There were 10 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M1PT88WB has 13 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20613      proc dmdb data=WORK.M1PT88WB outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):   proc dmdb data=WORK.M1PT88WB outtable=WORK.NEWNAMES nameserver;
20614      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
20615      prefix M_;
MPRINT(EM_DIAGRAM):   prefix M_;
20616      where IMPUTE=0;
MPRINT(EM_DIAGRAM):   where IMPUTE=0;
20617      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.M1PT88WB.
      WHERE IMPUTE=0;
NOTE: The data set WORK.NEWNAMES has 3 observations and 2 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20618      data WORK.M1PT88WB;
MPRINT(EM_DIAGRAM):   data WORK.M1PT88WB;
20619      merge WORK.M1PT88WB WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M1PT88WB WORK.NEWNAMES;
20620      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
20621      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: There were 3 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M1PT88WB has 13 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20622      data WORK.Impt;
MPRINT(EM_DIAGRAM):    data WORK.Impt;
20623      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IMPT has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20624      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20625      * Impt: IMPUTE INTERVAL Macro ;
MPRINT(EM_DIAGRAM):   * Impt: IMPUTE INTERVAL Macro ;
20626      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20627      %macro IMPTINT;
20628          CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife
20629         PremiumsinLOBMotor PremiumsinLOBWorkComp
20630      %mend IMPTINT;
 
20631      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20632      * Impt: IMPUTE MEDIAN Macro ;
MPRINT(EM_DIAGRAM):   * Impt: IMPUTE MEDIAN Macro ;
20633      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20634      %macro IMPTMEDIAN;
20635          CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife
20636         PremiumsinLOBMotor PremiumsinLOBWorkComp
20637      %mend IMPTMEDIAN;
 
20638      data EM_STDIZE / view=EM_STDIZE;
MPRINT(EM_DIAGRAM):    data EM_STDIZE / view=EM_STDIZE;
20639      set
20639    ! EMWS1.Plot2_TRAIN(keep= %IMPTInt
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN(keep
20640      );
MPRINT(EM_DIAGRAM):  = CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp );
20641      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_STDIZE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
      cpu time            0.29 seconds
 
 
20642      proc stdize data=EM_STDIZE
20643      pctlpts=(0 1 10 20 25 30 40 50 75 60 80 90 99 100) outstat=WORK._STDIZEDS out=_NULL_;
MPRINT(EM_DIAGRAM):   proc stdize data=EM_STDIZE pctlpts=(0 1 10 20 25 30 40 50 75 60 80 90 99 100) outstat=WORK._STDIZEDS out=_NULL_;
MPRINT(EM_DIAGRAM):   var
20644      var %IMPTInt;
MPRINT(IMPTINT):   CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10296 observations read from the data set INS_PROJ.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10288 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View WORK.EM_STDIZE.VIEW used (Total process time):
      real time           0.81 seconds
      cpu time            0.81 seconds
 
NOTE: There were 10288 observations read from the data set EMWS1.PLOT2_TRAIN.
NOTE: There were 10288 observations read from the data set WORK.EM_STDIZE.
NOTE: The data set WORK._STDIZEDS has 22 observations and 7 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.83 seconds
      cpu time            0.82 seconds
 
 
20646      data WORK._IMPUTEMEDIAN;
MPRINT(EM_DIAGRAM):    data WORK._IMPUTEMEDIAN;
20647      set WORK._STDIZEDS;
MPRINT(EM_DIAGRAM):   set WORK._STDIZEDS;
20648      where _TYPE_='P50';
MPRINT(EM_DIAGRAM):   where _TYPE_='P50';
MPRINT(EM_DIAGRAM):   keep
20649      keep %IMPTMEDIAN;
MPRINT(IMPTMEDIAN):   CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):  ;
20650      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._STDIZEDS.
      WHERE _TYPE_='P50';
NOTE: The data set WORK._IMPUTEMEDIAN has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20651      data WORK.Impt;
MPRINT(EM_DIAGRAM):   data WORK.Impt;
20652      merge WORK.Impt WORK._IMPUTEMEDIAN;
MPRINT(EM_DIAGRAM):   merge WORK.Impt WORK._IMPUTEMEDIAN;
20653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: There were 1 observations read from the data set WORK._IMPUTEMEDIAN.
NOTE: The data set WORK.IMPT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20654      data WORK._STDIZEDS;
MPRINT(EM_DIAGRAM):   data WORK._STDIZEDS;
20655      set WORK._STDIZEDS;
MPRINT(EM_DIAGRAM):   set WORK._STDIZEDS;
20656      where _TYPE_ =: 'P';
MPRINT(EM_DIAGRAM):   where _TYPE_ =: 'P';
20657      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._STDIZEDS.
      WHERE _TYPE_=:'P';
NOTE: The data set WORK._STDIZEDS has 14 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M209XCEX;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M209XCEX end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'EducationalDegree' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'EducationalDegree';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = '';
MPRINT(EM_DIAGRAM):   TYPE = 'C';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = '$CHAR15.0';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'ORDINAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target EducationalDegree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear GeographicLiving GrossMonthlySalary HasChildren PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp EducationalDegree);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 MAXRULES=5 MAXSURRS=2 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   GeographicLiving HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
MPRINT(ORDINPUTS):   FirstPolicyYear
MPRINT(EM_DIAGRAM):   / level=ordinal;
MPRINT(EM_DIAGRAM):   target EducationalDegree / level=ORDINAL Criterion=GINI ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_2BMXCOU SEQUENCE=WORK.OUTSEQ_TREE_2BMXCOU IMPORTANCE=WORK.OUTIMPORT_TREE_2BMXCOU NODESTAT=WORK.OUTNODES_TREE_2BMXCOU SUMMARY=WORK.OUTSUMMARY_TREE_2BMXCOU STATSBYNODE=WORK.OUTSTATS_TREE_2BMXCOU
Pathlistnonmissing = WORK.OUTPATH_TREE_2BMXCOU Rules = WORK.OUTRULES_TREE_2BMXCOU ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_2BMXCOU.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_2BMXCOU.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_2BMXCOU role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_2BMXCOU;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_2BMXCOU;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6568_WDFN33788459A_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $22;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_2BMXCOU;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_2BMXCOU out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_EducationalDegr1___Basic P_EducationalDegr2___High_School P_EducationalDegr3___BSc_MSc P_EducationalDegr4___PhD );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Predicted: EducationalDegree=1 - Basic  = " P_EducationalDegr1___Basic;
MPRINT(EM_DIAGRAM):   put " Predicted: EducationalDegree=2 - High School  = " P_EducationalDegr2___High_School;
MPRINT(EM_DIAGRAM):   put " Predicted: EducationalDegree=3 - BSc/MSc  = " P_EducationalDegr3___BSc_MSc;
MPRINT(EM_DIAGRAM):   put " Predicted: EducationalDegree=4 - PhD  = " P_EducationalDegr4___PhD;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3LVYX5Q;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M3LVYX5Q end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'FirstPolicyYear' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'FirstPolicyYear';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = '';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST12.0';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'ORDINAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target FirstPolicyYear;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerAge CustomerMonetaryValue EducationalDegree GeographicLiving GrossMonthlySalary HasChildren PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp FirstPolicyYear);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 MAXRULES=5 MAXSURRS=2 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   GeographicLiving HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
MPRINT(ORDINPUTS):   EducationalDegree
MPRINT(EM_DIAGRAM):   / level=ordinal;
MPRINT(EM_DIAGRAM):   target FirstPolicyYear / level=ORDINAL Criterion=GINI ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_05U0LC7 SEQUENCE=WORK.OUTSEQ_TREE_05U0LC7 IMPORTANCE=WORK.OUTIMPORT_TREE_05U0LC7 NODESTAT=WORK.OUTNODES_TREE_05U0LC7 SUMMARY=WORK.OUTSUMMARY_TREE_05U0LC7 STATSBYNODE=WORK.OUTSTATS_TREE_05U0LC7
Pathlistnonmissing = WORK.OUTPATH_TREE_05U0LC7 Rules = WORK.OUTRULES_TREE_05U0LC7 ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_05U0LC7.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_05U0LC7.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_05U0LC7 role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_05U0LC7;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_05U0LC7;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6568_WDFN33788459A_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $22;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_05U0LC7;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_05U0LC7 out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_FirstPolicyYear1974 P_FirstPolicyYear1975 P_FirstPolicyYear1976 P_FirstPolicyYear1977 P_FirstPolicyYear1978 P_FirstPolicyYear1979 P_FirstPolicyYear1980 P_FirstPolicyYear1981
P_FirstPolicyYear1982 P_FirstPolicyYear1983 P_FirstPolicyYear1984 P_FirstPolicyYear1985 P_FirstPolicyYear1986 P_FirstPolicyYear1987 P_FirstPolicyYear1988 P_FirstPolicyYear1989 P_FirstPolicyYear1990 P_FirstPolicyYear1991 P_FirstPolicyYear1992
P_FirstPolicyYear1993 P_FirstPolicyYear1994 P_FirstPolicyYear1995 P_FirstPolicyYear1996 P_FirstPolicyYear1997 P_FirstPolicyYear1998 );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1974  = " P_FirstPolicyYear1974;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1975  = " P_FirstPolicyYear1975;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1976  = " P_FirstPolicyYear1976;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1977  = " P_FirstPolicyYear1977;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1978  = " P_FirstPolicyYear1978;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1979  = " P_FirstPolicyYear1979;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1980  = " P_FirstPolicyYear1980;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1981  = " P_FirstPolicyYear1981;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1982  = " P_FirstPolicyYear1982;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1983  = " P_FirstPolicyYear1983;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1984  = " P_FirstPolicyYear1984;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1985  = " P_FirstPolicyYear1985;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1986  = " P_FirstPolicyYear1986;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1987  = " P_FirstPolicyYear1987;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1988  = " P_FirstPolicyYear1988;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1989  = " P_FirstPolicyYear1989;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1990  = " P_FirstPolicyYear1990;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1991  = " P_FirstPolicyYear1991;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1992  = " P_FirstPolicyYear1992;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1993  = " P_FirstPolicyYear1993;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1994  = " P_FirstPolicyYear1994;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1995  = " P_FirstPolicyYear1995;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1996  = " P_FirstPolicyYear1996;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1997  = " P_FirstPolicyYear1997;
MPRINT(EM_DIAGRAM):   put " Predicted: FirstPolicyYear=1998  = " P_FirstPolicyYear1998;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1JHZ1SI;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M1JHZ1SI end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'GeographicLiving' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'GeographicLiving';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = '';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST12.0';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target GeographicLiving;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerAge CustomerMonetaryValue EducationalDegree FirstPolicyYear GrossMonthlySalary HasChildren PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp GeographicLiving);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 MAXSURRS=2 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   HasChildren
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
MPRINT(ORDINPUTS):   EducationalDegree FirstPolicyYear
MPRINT(EM_DIAGRAM):   / level=ordinal;
MPRINT(EM_DIAGRAM):   target GeographicLiving / level=NOMINAL Criterion=PROBCHISQ ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_0_ULN19 SEQUENCE=WORK.OUTSEQ_TREE_0_ULN19 IMPORTANCE=WORK.OUTIMPORT_TREE_0_ULN19 NODESTAT=WORK.OUTNODES_TREE_0_ULN19 SUMMARY=WORK.OUTSUMMARY_TREE_0_ULN19 STATSBYNODE=WORK.OUTSTATS_TREE_0_ULN19
Pathlistnonmissing = WORK.OUTPATH_TREE_0_ULN19 Rules = WORK.OUTRULES_TREE_0_ULN19 ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0_ULN19.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0_ULN19.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_0_ULN19 role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_0_ULN19;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_0_ULN19;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6568_WDFN33788459A_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $22;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0_ULN19;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_0_ULN19 out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_GeographicLiving1 P_GeographicLiving4 P_GeographicLiving3 P_GeographicLiving2 );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Predicted: GeographicLiving=1  = " P_GeographicLiving1;
MPRINT(EM_DIAGRAM):   put " Predicted: GeographicLiving=4  = " P_GeographicLiving4;
MPRINT(EM_DIAGRAM):   put " Predicted: GeographicLiving=3  = " P_GeographicLiving3;
MPRINT(EM_DIAGRAM):   put " Predicted: GeographicLiving=2  = " P_GeographicLiving2;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M35R6NE5;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M35R6NE5 end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'HasChildren' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'HasChildren';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = '';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST12.0';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target HasChildren;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerAge CustomerMonetaryValue EducationalDegree FirstPolicyYear GeographicLiving GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp HasChildren);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 MAXSURRS=2 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   ClaimsRate CustomerAge CustomerMonetaryValue GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBHousehold PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   GeographicLiving
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
MPRINT(ORDINPUTS):   EducationalDegree FirstPolicyYear
MPRINT(EM_DIAGRAM):   / level=ordinal;
MPRINT(EM_DIAGRAM):   target HasChildren / level=NOMINAL Criterion=PROBCHISQ ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_03JL2UC SEQUENCE=WORK.OUTSEQ_TREE_03JL2UC IMPORTANCE=WORK.OUTIMPORT_TREE_03JL2UC NODESTAT=WORK.OUTNODES_TREE_03JL2UC SUMMARY=WORK.OUTSUMMARY_TREE_03JL2UC STATSBYNODE=WORK.OUTSTATS_TREE_03JL2UC
Pathlistnonmissing = WORK.OUTPATH_TREE_03JL2UC Rules = WORK.OUTRULES_TREE_03JL2UC ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_03JL2UC.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_03JL2UC.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_03JL2UC role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_03JL2UC;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_03JL2UC;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\D059331\AppData\Local\Temp\SAS Temporary Files\_TD6568_WDFN33788459A_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $22;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_03JL2UC;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_03JL2UC out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_HasChildren1 P_HasChildren0 );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Predicted: HasChildren=1  = " P_HasChildren1;
MPRINT(EM_DIAGRAM):   put " Predicted: HasChildren=0  = " P_HasChildren0;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           8.42 seconds
      cpu time            7.14 seconds
 
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.14 seconds
 
21761      proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
MPRINT(EM_DIAGRAM):    proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
21762      var
21763      CustomerAge
21764      GrossMonthlySalary
21765      PremiumsinLOBHealth
21766      PremiumsinLOBLife
21767      PremiumsinLOBMotor
21768      PremiumsinLOBWorkComp
21769      ;
MPRINT(EM_DIAGRAM):   var CustomerAge GrossMonthlySalary PremiumsinLOBHealth PremiumsinLOBLife PremiumsinLOBMotor PremiumsinLOBWorkComp ;
21770      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: The data set WORK._IMPVALUE has 6 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21771      proc sort data=WORK._IMPVALUE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._IMPVALUE NOTHREADS;
21772      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21773      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._IMPVALUE.
NOTE: The data set WORK._IMPVALUE has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21774      data EMWS1.Impt_META;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_META;
21775      merge WORK.M1PT88WB WORK._IMPVALUE;
MPRINT(EM_DIAGRAM):   merge WORK.M1PT88WB WORK._IMPVALUE;
21776      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1PT88WB.
NOTE: There were 6 observations read from the data set WORK._IMPVALUE.
NOTE: The data set EMWS1.IMPT_META has 13 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21778      proc print data=EMWS1.Impt_META(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_META(obs=500) label noobs;
21779      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,          NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,         NOQUOTE))" PERCENTMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_percentmissing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" PERCENTMISS = "Percent Missing";
21780      var NAME LABEL PERCENTMISS;
MPRINT(EM_DIAGRAM):   var NAME LABEL PERCENTMISS;
21781      where IMP eq '' and PERCENTMISS>50;
MPRINT(EM_DIAGRAM):   where IMP eq '' and PERCENTMISS>50;
21782      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rejectedsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Rejected Variables Summary";
21783      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
21784      run;
 
NOTE: No observations were selected from data set EMWS1.IMPT_META.
NOTE: There were 0 observations read from the data set EMWS1.IMPT_META.
      WHERE (IMP=' ') and (PERCENTMISS>50);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 28, 2015
Time:                13:31:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2P35PWF "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2P35PWF new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
21886      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21887      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
21888      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
21889      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
21890      file #LN00341;
MPRINT(EM_DIAGRAM):   file #LN00341;
21891      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
21892      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
21893      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
21894      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
21895      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
21896      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
21897      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
21898      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
21899      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
21900      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
21901      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
21902      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
21903      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
21904      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
21905      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
21906      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
21907      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
21908      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
21909      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
21910      end;
MPRINT(EM_DIAGRAM):   end;
21911      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
21912      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
21913      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
21914      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
21915      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
21916      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
21917      end;
MPRINT(EM_DIAGRAM):   end;
21918      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file #LN00341 is:
      Filename=C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28Dec2015:13:31:36,
      Create Time=28Dec2015:13:23:09
 
NOTE: 90 records were written to the file #LN00341.
      The minimum record length was 4.
      The maximum record length was 50.
NOTE: There were 13 observations read from the data set EMWS1.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21919      filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21920      *------------------------------------------------------------*;
21921      * Impt: Scoring DATA data;
21922      *------------------------------------------------------------*;
21923      data EMWS1.Impt_TRAIN
21924      / view=EMWS1.Impt_TRAIN
21925      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TRAIN / view=EMWS1.Impt_TRAIN ;
21926      set EMWS1.Plot2_TRAIN
21927      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Plot2_TRAIN ;
21928      %inc emflow;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   format IMP_CustomerAge BEST12.0;
MPRINT(EM_DIAGRAM):   label IMP_CustomerAge = 'Imputed CustomerAge';
MPRINT(EM_DIAGRAM):   IMP_CustomerAge = CustomerAge;
MPRINT(EM_DIAGRAM):   if CustomerAge = . then IMP_CustomerAge = 48;
MPRINT(EM_DIAGRAM):   format IMP_GrossMonthlySalary F12.0;
MPRINT(EM_DIAGRAM):   label IMP_GrossMonthlySalary = 'Imputed GrossMonthlySalary';
MPRINT(EM_DIAGRAM):   IMP_GrossMonthlySalary = GrossMonthlySalary;
MPRINT(EM_DIAGRAM):   if GrossMonthlySalary = . then IMP_GrossMonthlySalary = 5000;
MPRINT(EM_DIAGRAM):   format IMP_PremiumsinLOBHealth F12.2;
MPRINT(EM_DIAGRAM):   label IMP_PremiumsinLOBHealth = 'Imputed PremiumsinLOBHealth';
MPRINT(EM_DIAGRAM):   IMP_PremiumsinLOBHealth = PremiumsinLOBHealth;
MPRINT(EM_DIAGRAM):   if PremiumsinLOBHealth = . then IMP_PremiumsinLOBHealth = 162.81;
MPRINT(EM_DIAGRAM):   format IMP_PremiumsinLOBLife F12.2;
MPRINT(EM_DIAGRAM):   label IMP_PremiumsinLOBLife = 'Imputed PremiumsinLOBLife';
MPRINT(EM_DIAGRAM):   IMP_PremiumsinLOBLife = PremiumsinLOBLife;
MPRINT(EM_DIAGRAM):   if PremiumsinLOBLife = . then IMP_PremiumsinLOBLife = 25.56;
MPRINT(EM_DIAGRAM):   format IMP_PremiumsinLOBMotor F12.2;
MPRINT(EM_DIAGRAM):   label IMP_PremiumsinLOBMotor = 'Imputed PremiumsinLOBMotor';
MPRINT(EM_DIAGRAM):   IMP_PremiumsinLOBMotor = PremiumsinLOBMotor;
MPRINT(EM_DIAGRAM):   if PremiumsinLOBMotor = . then IMP_PremiumsinLOBMotor = 298.61;
MPRINT(EM_DIAGRAM):   format IMP_PremiumsinLOBWorkComp F12.2;
MPRINT(EM_DIAGRAM):   label IMP_PremiumsinLOBWorkComp = 'Imputed PremiumsinLOBWorkComp';
MPRINT(EM_DIAGRAM):   IMP_PremiumsinLOBWorkComp = PremiumsinLOBWorkComp;
MPRINT(EM_DIAGRAM):   if PremiumsinLOBWorkComp = . then IMP_PremiumsinLOBWorkComp = 25.67;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: EducationalDegree;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length IMP_EducationalDegree $15;
MPRINT(EM_DIAGRAM):   format IMP_EducationalDegree $CHAR15.0;
MPRINT(EM_DIAGRAM):   label IMP_EducationalDegree = 'Imputed EducationalDegree';
MPRINT(EM_DIAGRAM):   IMP_EducationalDegree = EducationalDegree;
MPRINT(EM_DIAGRAM):   if IMP_EducationalDegree eq '' then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_EducationalDegree $ 15;
MPRINT(EM_DIAGRAM):   LENGTH U_EducationalDegree $ 15;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   LABEL P_EducationalDegr1___Basic = 'Predicted: EducationalDegree=1 - Basic';
MPRINT(EM_DIAGRAM):   LABEL P_EducationalDegr2___High_School = 'Predicted: EducationalDegree=2 - High School';
MPRINT(EM_DIAGRAM):   LABEL P_EducationalDegr3___BSc_MSc = 'Predicted: EducationalDegree=3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   LABEL P_EducationalDegr4___PhD = 'Predicted: EducationalDegree=4 - PhD';
MPRINT(EM_DIAGRAM):   LABEL Q_EducationalDegr1___Basic = 'Unadjusted P: EducationalDegree=1 - Basic';
MPRINT(EM_DIAGRAM):   LABEL Q_EducationalDegr2___High_School = 'Unadjusted P: EducationalDegree=2 - High School';
MPRINT(EM_DIAGRAM):   LABEL Q_EducationalDegr3___BSc_MSc = 'Unadjusted P: EducationalDegree=3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   LABEL Q_EducationalDegr4___PhD = 'Unadjusted P: EducationalDegree=4 - PhD';
MPRINT(EM_DIAGRAM):   LABEL I_EducationalDegree = 'Into: EducationalDegree';
MPRINT(EM_DIAGRAM):   LABEL U_EducationalDegree = 'Unnormalized Into: EducationalDegree';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_15 $ 15;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_15;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 259.215 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 259.215 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 223.375 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 223.375 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 39.73 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 39.73 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 107.965 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 107.965 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 23.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 131.415 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 131.415 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 20.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 20.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHealth < 133.025 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 133.025 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 1849.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1849.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 215.485 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 215.485 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 527.875 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 527.875 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 93.185 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 93.185 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 46.065 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 46.065 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 257.215 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 257.215 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 934.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 934.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 23.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 3366 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 3366 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHealth < 204.095 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 204.095 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.27272727272727;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.63636363636363;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.27272727272727;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.63636363636363;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.77272727272727;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.21590909090909;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.01136363636363;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.77272727272727;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.21590909090909;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.01136363636363;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 87.85 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 87.85 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 340.675 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 340.675 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.10733716138144 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.10733716138144 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.77272727272727;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.22727272727272;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.77272727272727;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.22727272727272;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.37686567164179;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.53358208955223;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.08955223880597;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.37686567164179;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.53358208955223;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.08955223880597;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 296.555 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 296.555 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 16.225 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 16.225 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 8471.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 8471.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerMonetaryValue ) AND CustomerMonetaryValue < -96.1250000000002 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerMonetaryValue ) AND -96.1250000000002 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1.07183714662013 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 1.07183714662013 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 104.575 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 104.575 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.21428571428571;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.71428571428571;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.21428571428571;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.12903225806451;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.46236559139784;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.40860215053763;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.12903225806451;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.46236559139784;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.40860215053763;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND 191.87 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.71428571428571;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.20487804878048;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.62439024390243;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.17073170731707;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.20487804878048;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.62439024390243;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.17073170731707;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 86.85 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 86.85 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -3.05 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -3.05 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 383.125 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 383.125 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 162.42 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 162.42 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 140.415 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 140.415 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 96.85 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 96.85 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.63425345711448 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.63425345711448 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 326.9 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 326.9 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.83333333333333;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.8;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.2;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.8;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.2;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.15;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.8;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.05;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.15;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.8;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.05;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.81924198250728;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.16326530612244;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.01749271137026;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.81924198250728;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.16326530612244;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.01749271137026;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 220.875 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 220.875 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 368.675 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 368.675 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 69.625 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 69.625 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 194.425 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 194.425 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 43.675 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 43.675 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 229.775 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 229.775 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 269.885 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 269.885 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 20.615 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 20.615 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 27.005 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 27.005 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.02614379084967;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.22875816993464;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.66339869281045;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.08169934640522;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.02614379084967;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.22875816993464;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.66339869281045;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.08169934640522;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 31.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 31.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 3353 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 3353 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 603.175 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 603.175 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.00980392156862;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.30392156862745;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.6078431372549;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.07843137254901;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.00980392156862;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.30392156862745;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.6078431372549;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.07843137254901;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.08100558659217;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.45251396648044;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.43016759776536;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.03631284916201;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.08100558659217;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.45251396648044;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.43016759776536;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.03631284916201;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 314.115 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 314.115 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -42.775 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -42.775 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 108.965 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 108.965 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 33.95 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 33.95 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 119.8 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 119.8 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FirstPolicyYear ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FirstPolicyYear , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1983' ,'1984' ,'1985' ,'1986' ,'1987' , '1988' ,'1989' ,'1990' ,'1991' ,'1992' ,'1993' ,'1994' ,'1995' , '1996' ,'1997' ,'1998' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1974' ,'1975' ,'1976' ,'1977' ,'1978' , '1979' ,'1980' ,'1981' ,'1982' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.05617977528089;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.46067415730337;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.44943820224719;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.03370786516853;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.05617977528089;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.46067415730337;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.44943820224719;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.03370786516853;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.06122448979591;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.26530612244897;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.60204081632653;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.06122448979591;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.26530612244897;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.60204081632653;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.07142857142857;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 252.77 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 252.77 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 79.625 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 79.625 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.37136299046797 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.37136299046797 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.11389521640091;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.48519362186788;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.38268792710706;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.01822323462414;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.11389521640091;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.48519362186788;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.38268792710706;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.01822323462414;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.16078431372549;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.58039215686274;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.25098039215686;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.0078431372549;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.16078431372549;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.58039215686274;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.25098039215686;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.0078431372549;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 172.255 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 172.255 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 129.635 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 129.635 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 23.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 139.86 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 139.86 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 123.58 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 123.58 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 762.925 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 762.925 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND GrossMonthlySalary < 2338.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(GrossMonthlySalary ) AND 2338.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 23.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHealth < 39.62 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 39.62 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.25;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.29166666666666;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.41666666666666;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.04166666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.25;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.41666666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.04166666666666;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.24378109452736;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.59701492537313;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.1592039800995;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.24378109452736;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.59701492537313;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.1592039800995;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 59.845 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 59.845 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 299.225 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 299.225 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 185.535 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 185.535 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.13043478260869;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.47554347826086;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.38586956521739;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.00815217391304;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.13043478260869;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.47554347826086;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.38586956521739;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.00815217391304;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.17151162790697;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.5406976744186;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.27325581395348;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.01453488372093;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.17151162790697;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.5406976744186;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.27325581395348;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.01453488372093;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 1;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 1;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 146.695 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 146.695 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 138.08 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 138.08 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 179.2 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 179.2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.38255033557046;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.49664429530201;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.12080536912751;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.38255033557046;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.49664429530201;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.12080536912751;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.2087542087542;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.58922558922558;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.19528619528619;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.006734006734;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.2087542087542;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.58922558922558;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.19528619528619;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.006734006734;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 41.285 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 41.285 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 582.6 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 582.6 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 8736.365 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 8736.365 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 15.225 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 15.225 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 425.025 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 425.025 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 790.7 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 790.7 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 57.955 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 57.955 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 1.19751330808059 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1.19751330808059 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 55.51 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 55.51 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerMonetaryValue ) AND CustomerMonetaryValue < 423.425 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerMonetaryValue ) AND 423.425 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.30171468180335 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 0.30171468180335 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 397.3 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 397.3 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GeographicLiving , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.23076923076923;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.15384615384615;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.23076923076923;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.07692307692307;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 1;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 1;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '1 - BASIC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '1 - Basic';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.11504424778761;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.56637168141592;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.31858407079646;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.11504424778761;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.56637168141592;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.31858407079646;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 57.01 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 59.175 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 59.175 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1.15866466633517 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 1.15866466633517 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 1083 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1083 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.06194690265486;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.34513274336283;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.53982300884955;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.05309734513274;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.06194690265486;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.34513274336283;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.53982300884955;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.05309734513274;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.10327455919395;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.4609571788413;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.42065491183879;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.01511335012594;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.10327455919395;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.4609571788413;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.42065491183879;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.01511335012594;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.91666666666666;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 236.1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 310.325 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 310.325 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 604.39 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 604.39 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 25.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerAge < 25.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 331.725 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 331.725 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.11927770679869 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.11927770679869 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 73 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerAge < 73 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 1;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 1;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.12903225806451;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.2258064516129;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.64516129032258;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.12903225806451;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.64516129032258;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.06077348066298;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.2817679558011;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.60220994475138;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.05524861878453;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.06077348066298;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.2817679558011;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.60220994475138;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.05524861878453;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.83333333333333;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.16666666666666;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 19.115 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 19.115 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 351.345 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 351.345 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 136.425 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 136.425 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 285.325 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 285.325 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 649.015 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 649.015 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 132.525 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 132.525 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 305.67 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 305.67 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 644.905 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 644.905 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 0.75027746188552 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 0.75027746188552 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 216.325 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 216.325 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FirstPolicyYear ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FirstPolicyYear , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1980' ,'1981' ,'1982' ,'1983' ,'1984' , '1985' ,'1986' ,'1987' ,'1988' ,'1989' ,'1990' ,'1991' ,'1992' , '1993' ,'1994' ,'1995' ,'1996' ,'1997' ,'1998' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1974' ,'1975' ,'1976' ,'1977' ,'1978' , '1979' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.75;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.17857142857142;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.75;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.17857142857142;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.28813559322033;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.32203389830508;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.38983050847457;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.28813559322033;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.32203389830508;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.38983050847457;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.36363636363636;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.47272727272727;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.07272727272727;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.47272727272727;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.07272727272727;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 57.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 57.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 5862 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 5862 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(HasChildren ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HasChildren , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 73.68 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 73.68 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 1087.455 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1087.455 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -52.5 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -52.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.08108108108108;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.51351351351351;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.37837837837837;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.02702702702702;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.08108108108108;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.51351351351351;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.37837837837837;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.02702702702702;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '2 - HIGH SCHOOL';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '2 - High School';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.0251968503937;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.2267716535433;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.65669291338582;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.09133858267716;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.0251968503937;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.2267716535433;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.65669291338582;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.09133858267716;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 41.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 41.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 4203 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 4203 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 149.305 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 149.305 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.03488372093023;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.26356589147286;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.60465116279069;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.0968992248062;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.03488372093023;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.26356589147286;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.60465116279069;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.0968992248062;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.09210526315789;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.41353383458646;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.45864661654135;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.03571428571428;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.09210526315789;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.41353383458646;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.45864661654135;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.03571428571428;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 11.28 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 11.28 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 425.135 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 425.135 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHealth < 128.525 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 128.525 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.04054054054054;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.25462304409672;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.60028449502133;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.10455192034139;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.04054054054054;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.25462304409672;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.60028449502133;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.10455192034139;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 93.075 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 93.075 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 585.27 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 585.27 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.03243243243243;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.24324324324324;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.63243243243243;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.09189189189189;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.03243243243243;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.24324324324324;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.63243243243243;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.09189189189189;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 15.115 THEN DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.85714285714285;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '4 - PHD';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '4 - PhD';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_EducationalDegr1___Basic = 0.01802962009014;
MPRINT(EM_DIAGRAM):   P_EducationalDegr2___High_School = 0.14230521571152;
MPRINT(EM_DIAGRAM):   P_EducationalDegr3___BSc_MSc = 0.66323245331616;
MPRINT(EM_DIAGRAM):   P_EducationalDegr4___PhD = 0.17643271088216;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr1___Basic = 0.01802962009014;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr2___High_School = 0.14230521571152;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr3___BSc_MSc = 0.66323245331616;
MPRINT(EM_DIAGRAM):   Q_EducationalDegr4___PhD = 0.17643271088216;
MPRINT(EM_DIAGRAM):   I_EducationalDegree = '3 - BSC/MSC';
MPRINT(EM_DIAGRAM):   U_EducationalDegree = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: EducationalDegree;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_EducationalDegree);
MPRINT(EM_DIAGRAM):   if _format200="4 - PHD" then IMP_EducationalDegree = "4 - PhD        ";
MPRINT(EM_DIAGRAM):   else if _format200="3 - BSC/MSC" then IMP_EducationalDegree = "3 - BSc/MSc    ";
MPRINT(EM_DIAGRAM):   else if _format200="2 - HIGH SCHOOL" then IMP_EducationalDegree = "2 - High School";
MPRINT(EM_DIAGRAM):   else if _format200="1 - BASIC" then IMP_EducationalDegree = "1 - Basic      ";
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: FirstPolicyYear;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   format IMP_FirstPolicyYear BEST12.0;
MPRINT(EM_DIAGRAM):   label IMP_FirstPolicyYear = 'Imputed FirstPolicyYear';
MPRINT(EM_DIAGRAM):   IMP_FirstPolicyYear = FirstPolicyYear;
MPRINT(EM_DIAGRAM):   if IMP_FirstPolicyYear eq . then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_FirstPolicyYear $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1974 = 'Predicted: FirstPolicyYear=1974';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1975 = 'Predicted: FirstPolicyYear=1975';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1976 = 'Predicted: FirstPolicyYear=1976';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1977 = 'Predicted: FirstPolicyYear=1977';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1978 = 'Predicted: FirstPolicyYear=1978';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1979 = 'Predicted: FirstPolicyYear=1979';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1980 = 'Predicted: FirstPolicyYear=1980';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1981 = 'Predicted: FirstPolicyYear=1981';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1982 = 'Predicted: FirstPolicyYear=1982';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1983 = 'Predicted: FirstPolicyYear=1983';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1984 = 'Predicted: FirstPolicyYear=1984';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1985 = 'Predicted: FirstPolicyYear=1985';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1986 = 'Predicted: FirstPolicyYear=1986';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1987 = 'Predicted: FirstPolicyYear=1987';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1988 = 'Predicted: FirstPolicyYear=1988';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1989 = 'Predicted: FirstPolicyYear=1989';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1990 = 'Predicted: FirstPolicyYear=1990';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1991 = 'Predicted: FirstPolicyYear=1991';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1992 = 'Predicted: FirstPolicyYear=1992';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1993 = 'Predicted: FirstPolicyYear=1993';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1994 = 'Predicted: FirstPolicyYear=1994';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1995 = 'Predicted: FirstPolicyYear=1995';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1996 = 'Predicted: FirstPolicyYear=1996';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1997 = 'Predicted: FirstPolicyYear=1997';
MPRINT(EM_DIAGRAM):   LABEL P_FirstPolicyYear1998 = 'Predicted: FirstPolicyYear=1998';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1974 = 'Unadjusted P: FirstPolicyYear=1974';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1975 = 'Unadjusted P: FirstPolicyYear=1975';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1976 = 'Unadjusted P: FirstPolicyYear=1976';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1977 = 'Unadjusted P: FirstPolicyYear=1977';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1978 = 'Unadjusted P: FirstPolicyYear=1978';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1979 = 'Unadjusted P: FirstPolicyYear=1979';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1980 = 'Unadjusted P: FirstPolicyYear=1980';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1981 = 'Unadjusted P: FirstPolicyYear=1981';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1982 = 'Unadjusted P: FirstPolicyYear=1982';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1983 = 'Unadjusted P: FirstPolicyYear=1983';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1984 = 'Unadjusted P: FirstPolicyYear=1984';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1985 = 'Unadjusted P: FirstPolicyYear=1985';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1986 = 'Unadjusted P: FirstPolicyYear=1986';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1987 = 'Unadjusted P: FirstPolicyYear=1987';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1988 = 'Unadjusted P: FirstPolicyYear=1988';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1989 = 'Unadjusted P: FirstPolicyYear=1989';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1990 = 'Unadjusted P: FirstPolicyYear=1990';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1991 = 'Unadjusted P: FirstPolicyYear=1991';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1992 = 'Unadjusted P: FirstPolicyYear=1992';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1993 = 'Unadjusted P: FirstPolicyYear=1993';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1994 = 'Unadjusted P: FirstPolicyYear=1994';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1995 = 'Unadjusted P: FirstPolicyYear=1995';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1996 = 'Unadjusted P: FirstPolicyYear=1996';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1997 = 'Unadjusted P: FirstPolicyYear=1997';
MPRINT(EM_DIAGRAM):   LABEL Q_FirstPolicyYear1998 = 'Unadjusted P: FirstPolicyYear=1998';
MPRINT(EM_DIAGRAM):   LABEL I_FirstPolicyYear = 'Into: FirstPolicyYear';
MPRINT(EM_DIAGRAM):   LABEL U_FirstPolicyYear = 'Unnormalized Into: FirstPolicyYear';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_15 $ 15;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_15;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND GrossMonthlySalary < 7335.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(GrossMonthlySalary ) AND 7335.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 69.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 69.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 322.45 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 322.45 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 1304.155 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1304.155 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 78.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 78.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -37.775 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -37.775 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1994';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1994;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 1.00581214492706 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 1.00581214492706 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -28.5499999999999 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < -28.5499999999999 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 9141 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 9141 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 1.04115794169863 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 1.04115794169863 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -62.2750000000001 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < -62.2750000000001 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 14.175 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 14.175 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1978';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1978;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.4;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.4;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1996';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1996;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 360.345 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 360.345 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 80.015 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 80.015 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBWorkComp < 112.355 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 112.355 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1991';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1991;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 17.78 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 17.78 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 62.29 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 62.29 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(EducationalDegree ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = PUT( EducationalDegree , $CHAR15.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_15,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_15 IN ('4 - PHD' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_15 IN ('1 - BASIC' ,'2 - HIGH SCHOOL' , '3 - BSC/MSC' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1975';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1975;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.07407407407407;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1979';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1979;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND GrossMonthlySalary < 7355 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 241.88 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 241.88 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 7352 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 7352 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 269.94 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 269.94 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.4;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.4;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1977';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1977;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 0.91824238530765 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 0.91824238530765 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 27.34 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 27.34 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 76 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 76 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.5;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.5;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1996';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1996;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 0.68021229519081 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 0.68021229519081 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 251.665 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 251.665 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 299.39 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 299.39 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.4;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.4;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1989';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1989;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.5;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.5;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1994';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1994;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND GrossMonthlySalary < 7366.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1980';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1980;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerMonetaryValue ) AND CustomerMonetaryValue < 132.15 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerMonetaryValue ) AND 132.15 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.79759306706372 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 0.79759306706372 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 68.625 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 68.625 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 34.785 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 34.785 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 284.72 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 284.72 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBWorkComp < 33.34 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 33.34 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.04814814814814;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.04814814814814;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.02592592592592;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.04444444444444;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.02592592592592;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.04814814814814;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.04814814814814;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.02592592592592;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.05185185185185;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.04444444444444;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.02592592592592;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.04074074074074;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.02962962962962;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1977';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1977;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.00611620795107;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02752293577981;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.02140672782874;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.04281345565749;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.05198776758409;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.02752293577981;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.03975535168195;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.03058103975535;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.03058103975535;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.05810397553516;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.06422018348623;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.05810397553516;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.04892966360856;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.0611620795107;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.07339449541284;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.03363914373088;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.04281345565749;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.02446483180428;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.0091743119266;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.00611620795107;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02752293577981;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.02140672782874;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.04281345565749;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.05198776758409;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.02752293577981;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.03975535168195;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.03058103975535;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.03669724770642;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.03058103975535;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.05810397553516;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.06422018348623;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.05810397553516;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.04892966360856;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.0611620795107;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.04587155963302;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.07339449541284;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.03363914373088;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.04281345565749;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.02446483180428;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.0091743119266;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1994';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1994;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerMonetaryValue ) AND CustomerMonetaryValue < 201.6 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerMonetaryValue ) AND 201.6 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.70497715187287 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 0.70497715187287 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.008547008547;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.008547008547;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.008547008547;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.008547008547;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.04273504273504;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.06837606837606;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.05982905982905;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.09401709401709;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.008547008547;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.008547008547;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.008547008547;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.008547008547;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.02564102564102;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.04273504273504;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.01709401709401;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.08547008547008;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.06837606837606;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.05982905982905;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.09401709401709;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.05128205128205;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1996';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1996;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.02190923317683;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02190923317683;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.04068857589984;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.02973395931142;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.02973395931142;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.04381846635367;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.04381846635367;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.05790297339593;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.03599374021909;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.037558685446;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.02503912363067;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.04538341158059;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.04694835680751;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.04225352112676;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.02660406885758;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.06729264475743;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.04538341158059;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.018779342723;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.0093896713615;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.02190923317683;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02190923317683;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.04068857589984;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.02973395931142;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.02973395931142;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.04381846635367;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.04381846635367;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.03912363067292;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.05790297339593;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.03599374021909;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.037558685446;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.02503912363067;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.04538341158059;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.04694835680751;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.04225352112676;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.02660406885758;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.06729264475743;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.04538341158059;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.06416275430359;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.018779342723;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.0093896713615;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1993';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1993;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND -11.5 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND 680 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBWorkComp ) AND PremiumsinLOBWorkComp < 2.945 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBWorkComp ) AND 2.945 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 546.715 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 546.715 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 0.05789984125872 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 0.05789984125872 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 3359.19 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 3359.19 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 22.115 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 22.115 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 498.665 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 498.665 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 5760 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF GrossMonthlySalary < 5760 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.4;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.4;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1979';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1979;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.375;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.375;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1997';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1997;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 564.605 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 564.605 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 18.115 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 18.115 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.01004566210045;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02922374429223;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.05114155251141;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.06027397260273;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.05022831050228;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.05753424657534;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.05296803652968;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.04018264840182;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.04566210045662;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.04383561643835;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.04383561643835;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.04109589041095;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.04474885844748;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.03926940639269;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.0310502283105;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.03561643835616;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.04474885844748;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.04018264840182;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.03652968036529;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.02465753424657;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.00913242009132;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.01004566210045;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02922374429223;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.05114155251141;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.06027397260273;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.05022831050228;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.05753424657534;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.05296803652968;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.04018264840182;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.04566210045662;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.04383561643835;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.04383561643835;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.04109589041095;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.04474885844748;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.03926940639269;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.0310502283105;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.03561643835616;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.04474885844748;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.04018264840182;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.03652968036529;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.04200913242009;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.02465753424657;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.00913242009132;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1978';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1978;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.25;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.25;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1991';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1991;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHousehold ) AND PremiumsinLOBHousehold < 1266.35 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHousehold ) AND 1266.35 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerMonetaryValue < 1417.265 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1417.265 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 20.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 20.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 26.395 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 26.395 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(EducationalDegree ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = PUT( EducationalDegree , $CHAR15.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_15,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_15 IN ('1 - BASIC' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_15 IN ('2 - HIGH SCHOOL' ,'3 - BSC/MSC' , '4 - PHD' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1979';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1979;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.1;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.1;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.1;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.05;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.1;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.1;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.1;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.05;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1997';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1997;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerMonetaryValue ) AND CustomerMonetaryValue < -190.585 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerMonetaryValue ) AND -190.585 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1.21572369899263 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 1.21572369899263 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.06521739130434;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.07608695652173;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.06521739130434;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.09782608695652;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.09782608695652;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.01086956521739;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.02173913043478;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.06521739130434;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.07608695652173;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.05434782608695;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.06521739130434;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.09782608695652;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.09782608695652;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.03260869565217;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1993';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1993;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.01281014023732;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02791262135922;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.04328478964401;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.04382416396979;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.0405879180151;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.04139697950377;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.04517259978425;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.04247572815533;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.04517259978425;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.0465210355987;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.04476806903991;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.0509708737864;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.04436353829557;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.04341963322545;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.04288025889967;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.04463322545846;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.04409385113268;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.04557713052858;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.04126213592233;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.04085760517799;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.02629449838187;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.01105717367853;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.01281014023732;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02791262135922;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.04328478964401;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.04382416396979;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.0405879180151;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.04139697950377;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.04517259978425;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.04247572815533;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.04517259978425;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.0435544768069;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.0465210355987;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.04476806903991;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.0509708737864;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.04436353829557;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.04341963322545;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.04288025889967;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.04463322545846;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.04409385113268;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.04557713052858;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.04126213592233;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.04085760517799;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.02629449838187;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.01105717367853;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1988';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1988;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 81.07 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 81.07 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.15628776417859 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.15628776417859 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBWorkComp < -1.555 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF -1.555 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 357.4 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 357.4 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 19.17 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 19.17 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 9.335 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 9.335 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 128.69 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 128.69 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 23 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 23 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 57.455 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 57.455 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.07142857142857;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1977';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1977;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1978';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1978;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0.375;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0.25;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.25;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.125;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0.375;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0.25;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.25;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.125;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1976';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1976;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1984';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1984;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 380.405 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 380.405 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 103.35 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 103.35 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 162.03 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 162.03 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 351.955 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 351.955 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(EducationalDegree ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = PUT( EducationalDegree , $CHAR15.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_15,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_15 IN ('1 - BASIC' ,'2 - HIGH SCHOOL' ,'3 - BSC/MSC' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_15 IN ('4 - PHD' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -5.825 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -5.825 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1978';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1978;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 1.0157395240181 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 1.0157395240181 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -35.78 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < -35.78 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 18 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerAge < 18 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.6;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.2;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.6;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.2;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1981';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1981;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(GrossMonthlySalary ) AND GrossMonthlySalary < 6401 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(GrossMonthlySalary ) AND 6401 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 56.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 56.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHealth < 236.545 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 236.545 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.26315789473684;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1992';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1992;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1983';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1983;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < -1.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND -1.5 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 179.645 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 179.645 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 40.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 40.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(ClaimsRate ) AND ClaimsRate < 0.07138013214237 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(ClaimsRate ) AND 0.07138013214237 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 2961 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 2961 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.5;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.5;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1995';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1995;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1980';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1980;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GeographicLiving , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'4' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerAge ) THEN DO;
MPRINT(EM_DIAGRAM):   IF CustomerAge < 72.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 72.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(EducationalDegree ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = PUT( EducationalDegree , $CHAR15.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_15,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_15 IN ('2 - HIGH SCHOOL' ,'3 - BSC/MSC' ,'4 - PHD' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_15 IN ('1 - BASIC' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1974';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1974;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HasChildren , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 7028.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 7028.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.03937372318692 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF ClaimsRate < 0.03937372318692 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1980';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1980;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1975 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1984 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1985 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1988 = 0.08108108108108;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1989 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1990 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1991 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1992 = 0.16216216216216;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1993 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1994 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1995 = 0.16216216216216;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1996 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1997 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   P_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1974 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1975 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1976 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1977 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1978 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1979 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1980 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1981 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1982 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1983 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1984 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1985 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1986 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1987 = 0;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1988 = 0.08108108108108;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1989 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1990 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1991 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1992 = 0.16216216216216;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1993 = 0.1081081081081;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1994 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1995 = 0.16216216216216;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1996 = 0.02702702702702;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1997 = 0.05405405405405;
MPRINT(EM_DIAGRAM):   Q_FirstPolicyYear1998 = 0;
MPRINT(EM_DIAGRAM):   I_FirstPolicyYear = '1992';
MPRINT(EM_DIAGRAM):   U_FirstPolicyYear = 1992;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: FirstPolicyYear;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_FirstPolicyYear);
MPRINT(EM_DIAGRAM):   if _format200="1998" then IMP_FirstPolicyYear = 1998;
MPRINT(EM_DIAGRAM):   else if _format200="1997" then IMP_FirstPolicyYear = 1997;
MPRINT(EM_DIAGRAM):   else if _format200="1996" then IMP_FirstPolicyYear = 1996;
MPRINT(EM_DIAGRAM):   else if _format200="1995" then IMP_FirstPolicyYear = 1995;
MPRINT(EM_DIAGRAM):   else if _format200="1994" then IMP_FirstPolicyYear = 1994;
MPRINT(EM_DIAGRAM):   else if _format200="1993" then IMP_FirstPolicyYear = 1993;
MPRINT(EM_DIAGRAM):   else if _format200="1992" then IMP_FirstPolicyYear = 1992;
MPRINT(EM_DIAGRAM):   else if _format200="1991" then IMP_FirstPolicyYear = 1991;
MPRINT(EM_DIAGRAM):   else if _format200="1990" then IMP_FirstPolicyYear = 1990;
MPRINT(EM_DIAGRAM):   else if _format200="1989" then IMP_FirstPolicyYear = 1989;
MPRINT(EM_DIAGRAM):   else if _format200="1988" then IMP_FirstPolicyYear = 1988;
MPRINT(EM_DIAGRAM):   else if _format200="1987" then IMP_FirstPolicyYear = 1987;
MPRINT(EM_DIAGRAM):   else if _format200="1986" then IMP_FirstPolicyYear = 1986;
MPRINT(EM_DIAGRAM):   else if _format200="1985" then IMP_FirstPolicyYear = 1985;
MPRINT(EM_DIAGRAM):   else if _format200="1984" then IMP_FirstPolicyYear = 1984;
MPRINT(EM_DIAGRAM):   else if _format200="1983" then IMP_FirstPolicyYear = 1983;
MPRINT(EM_DIAGRAM):   else if _format200="1982" then IMP_FirstPolicyYear = 1982;
MPRINT(EM_DIAGRAM):   else if _format200="1981" then IMP_FirstPolicyYear = 1981;
MPRINT(EM_DIAGRAM):   else if _format200="1980" then IMP_FirstPolicyYear = 1980;
MPRINT(EM_DIAGRAM):   else if _format200="1979" then IMP_FirstPolicyYear = 1979;
MPRINT(EM_DIAGRAM):   else if _format200="1978" then IMP_FirstPolicyYear = 1978;
MPRINT(EM_DIAGRAM):   else if _format200="1977" then IMP_FirstPolicyYear = 1977;
MPRINT(EM_DIAGRAM):   else if _format200="1976" then IMP_FirstPolicyYear = 1976;
MPRINT(EM_DIAGRAM):   else if _format200="1975" then IMP_FirstPolicyYear = 1975;
MPRINT(EM_DIAGRAM):   else if _format200="1974" then IMP_FirstPolicyYear = 1974;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: GeographicLiving;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   format IMP_GeographicLiving BEST12.0;
MPRINT(EM_DIAGRAM):   label IMP_GeographicLiving = 'Imputed GeographicLiving';
MPRINT(EM_DIAGRAM):   IMP_GeographicLiving = GeographicLiving;
MPRINT(EM_DIAGRAM):   if IMP_GeographicLiving eq . then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_GeographicLiving $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   LABEL P_GeographicLiving1 = 'Predicted: GeographicLiving=1';
MPRINT(EM_DIAGRAM):   LABEL P_GeographicLiving4 = 'Predicted: GeographicLiving=4';
MPRINT(EM_DIAGRAM):   LABEL P_GeographicLiving3 = 'Predicted: GeographicLiving=3';
MPRINT(EM_DIAGRAM):   LABEL P_GeographicLiving2 = 'Predicted: GeographicLiving=2';
MPRINT(EM_DIAGRAM):   LABEL Q_GeographicLiving1 = 'Unadjusted P: GeographicLiving=1';
MPRINT(EM_DIAGRAM):   LABEL Q_GeographicLiving4 = 'Unadjusted P: GeographicLiving=4';
MPRINT(EM_DIAGRAM):   LABEL Q_GeographicLiving3 = 'Unadjusted P: GeographicLiving=3';
MPRINT(EM_DIAGRAM):   LABEL Q_GeographicLiving2 = 'Unadjusted P: GeographicLiving=2';
MPRINT(EM_DIAGRAM):   LABEL I_GeographicLiving = 'Into: GeographicLiving';
MPRINT(EM_DIAGRAM):   LABEL U_GeographicLiving = 'Unnormalized Into: GeographicLiving';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HasChildren , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_GeographicLiving1 = 0.29667867926366;
MPRINT(EM_DIAGRAM):   P_GeographicLiving4 = 0.40333106067984;
MPRINT(EM_DIAGRAM):   P_GeographicLiving3 = 0.20103243401188;
MPRINT(EM_DIAGRAM):   P_GeographicLiving2 = 0.0989578260446;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving1 = 0.29667867926366;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving4 = 0.40333106067984;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving3 = 0.20103243401188;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving2 = 0.0989578260446;
MPRINT(EM_DIAGRAM):   I_GeographicLiving = '4';
MPRINT(EM_DIAGRAM):   U_GeographicLiving = 4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_GeographicLiving1 = 0;
MPRINT(EM_DIAGRAM):   P_GeographicLiving4 = 0;
MPRINT(EM_DIAGRAM):   P_GeographicLiving3 = 0;
MPRINT(EM_DIAGRAM):   P_GeographicLiving2 = 1;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving1 = 0;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving4 = 0;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving3 = 0;
MPRINT(EM_DIAGRAM):   Q_GeographicLiving2 = 1;
MPRINT(EM_DIAGRAM):   I_GeographicLiving = '2';
MPRINT(EM_DIAGRAM):   U_GeographicLiving = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: GeographicLiving;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_GeographicLiving);
MPRINT(EM_DIAGRAM):   if _format200="4" then IMP_GeographicLiving = 4;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_GeographicLiving = 3;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_GeographicLiving = 2;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_GeographicLiving = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: HasChildren;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   format IMP_HasChildren BEST12.0;
MPRINT(EM_DIAGRAM):   label IMP_HasChildren = 'Imputed HasChildren';
MPRINT(EM_DIAGRAM):   IMP_HasChildren = HasChildren;
MPRINT(EM_DIAGRAM):   if IMP_HasChildren eq . then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_HasChildren $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   LABEL P_HasChildren1 = 'Predicted: HasChildren=1';
MPRINT(EM_DIAGRAM):   LABEL P_HasChildren0 = 'Predicted: HasChildren=0';
MPRINT(EM_DIAGRAM):   LABEL Q_HasChildren1 = 'Unadjusted P: HasChildren=1';
MPRINT(EM_DIAGRAM):   LABEL Q_HasChildren0 = 'Unadjusted P: HasChildren=0';
MPRINT(EM_DIAGRAM):   LABEL I_HasChildren = 'Into: HasChildren';
MPRINT(EM_DIAGRAM):   LABEL U_HasChildren = 'Unnormalized Into: HasChildren';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_15 $ 15;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_15;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 63.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 63.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 6675 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 6675 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBHealth ) AND PremiumsinLOBHealth < 155.085 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBHealth ) AND 155.085 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 379.85 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 379.85 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(ClaimsRate ) THEN DO;
MPRINT(EM_DIAGRAM):   IF ClaimsRate < 0.26770824702269 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.26770824702269 <= ClaimsRate THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 65.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 65.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 6104 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 6104 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CustomerMonetaryValue ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1037.93 <= CustomerMonetaryValue THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF CustomerMonetaryValue < 1037.93 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.70149253731343;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.29850746268656;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.70149253731343;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.29850746268656;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 254.88 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 254.88 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 67.235 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 67.235 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 352.575 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 352.575 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.06578947368421;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.93421052631578;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.06578947368421;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.93421052631578;
MPRINT(EM_DIAGRAM):   I_HasChildren = '0';
MPRINT(EM_DIAGRAM):   U_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 434.86 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 434.86 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 100.63 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 100.63 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF -0.275 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < -0.275 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.58181818181818;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.41818181818181;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.58181818181818;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.41818181818181;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_15 = PUT( EducationalDegree , $CHAR15.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_15,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_15 IN ('1 - BASIC' ,'2 - HIGH SCHOOL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_15 IN ('3 - BSC/MSC' ,'4 - PHD' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBMotor < 333.34 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 333.34 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBWorkComp ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 57.51 <= PremiumsinLOBWorkComp THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBWorkComp < 57.51 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.5268817204301;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.47311827956989;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.5268817204301;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.47311827956989;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.27380952380952;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.72619047619047;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.27380952380952;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.72619047619047;
MPRINT(EM_DIAGRAM):   I_HasChildren = '0';
MPRINT(EM_DIAGRAM):   U_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.0950323974082;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.90496760259179;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.0950323974082;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.90496760259179;
MPRINT(EM_DIAGRAM):   I_HasChildren = '0';
MPRINT(EM_DIAGRAM):   U_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBLife ) AND PremiumsinLOBLife < 37.785 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBLife ) AND 37.785 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBMotor ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 271.44 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBMotor < 271.44 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 243.1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 243.1 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND 61.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 221.43 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 221.43 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 190.98 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 190.98 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBLife ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 77.625 <= PremiumsinLOBLife THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBLife < 77.625 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.66666666666666;
MPRINT(EM_DIAGRAM):   I_HasChildren = '0';
MPRINT(EM_DIAGRAM):   U_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.73255813953488;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.26744186046511;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.73255813953488;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.26744186046511;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.81473377097009;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.1852662290299;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.81473377097009;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.1852662290299;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 55.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 55.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(GrossMonthlySalary ) THEN DO;
MPRINT(EM_DIAGRAM):   IF GrossMonthlySalary < 6237.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 6237.5 <= GrossMonthlySalary THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.93665602749815;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.06334397250184;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.93665602749815;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.06334397250184;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(CustomerAge ) AND CustomerAge < 62.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(CustomerAge ) AND 62.5 <= CustomerAge THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PremiumsinLOBHousehold < 888.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 888.5 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PremiumsinLOBMotor ) AND PremiumsinLOBMotor < 322.115 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PremiumsinLOBMotor ) AND 322.115 <= PremiumsinLOBMotor THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHealth ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 195.315 <= PremiumsinLOBHealth THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHealth < 195.315 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PremiumsinLOBHousehold ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 188.925 <= PremiumsinLOBHousehold THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PremiumsinLOBHousehold < 188.925 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.27777777777777;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.72222222222222;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.27777777777777;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.72222222222222;
MPRINT(EM_DIAGRAM):   I_HasChildren = '0';
MPRINT(EM_DIAGRAM):   U_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.77380952380952;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.22619047619047;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.77380952380952;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.22619047619047;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_HasChildren1 = 0.8207171314741;
MPRINT(EM_DIAGRAM):   P_HasChildren0 = 0.17928286852589;
MPRINT(EM_DIAGRAM):   Q_HasChildren1 = 0.8207171314741;
MPRINT(EM_DIAGRAM):   Q_HasChildren0 = 0.17928286852589;
MPRINT(EM_DIAGRAM):   I_HasChildren = '1';
MPRINT(EM_DIAGRAM):   U_HasChildren = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: HasChildren;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_HasChildren);
MPRINT(EM_DIAGRAM):   if _format200="1" then IMP_HasChildren = 1;
MPRINT(EM_DIAGRAM):   else if _format200="0" then IMP_HasChildren = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   drop P_EducationalDegr4___PhD P_EducationalDegr3___BSc_MSc P_EducationalDegr2___High_School P_EducationalDegr1___Basic I_EducationalDegree U_EducationalDegree Q_EducationalDegr4___PhD Q_EducationalDegr3___BSc_MSc
Q_EducationalDegr2___High_School Q_EducationalDegr1___Basic P_FirstPolicyYear1998 P_FirstPolicyYear1997 P_FirstPolicyYear1996 P_FirstPolicyYear1995 P_FirstPolicyYear1994 P_FirstPolicyYear1993 P_FirstPolicyYear1992 P_FirstPolicyYear1991
P_FirstPolicyYear1990 P_FirstPolicyYear1989 P_FirstPolicyYear1988 P_FirstPolicyYear1987 P_FirstPolicyYear1986 P_FirstPolicyYear1985 P_FirstPolicyYear1984 P_FirstPolicyYear1983 P_FirstPolicyYear1982 P_FirstPolicyYear1981 P_FirstPolicyYear1980
P_FirstPolicyYear1979 P_FirstPolicyYear1978 P_FirstPolicyYear1977 P_FirstPolicyYear1976 P_FirstPolicyYear1975 P_FirstPolicyYear1974 I_FirstPolicyYear U_FirstPolicyYear Q_FirstPolicyYear1998 Q_FirstPolicyYear1997 Q_FirstPolicyYear1996 Q_FirstPolicyYear1995
Q_FirstPolicyYear1994 Q_FirstPolicyYear1993 Q_FirstPolicyYear1992 Q_FirstPolicyYear1991 Q_FirstPolicyYear1990 Q_FirstPolicyYear1989 Q_FirstPolicyYear1988 Q_FirstPolicyYear1987 Q_FirstPolicyYear1986 Q_FirstPolicyYear1985 Q_FirstPolicyYear1984
Q_FirstPolicyYear1983 Q_FirstPolicyYear1982 Q_FirstPolicyYear1981 Q_FirstPolicyYear1980 Q_FirstPolicyYear1979 Q_FirstPolicyYear1978 Q_FirstPolicyYear1977 Q_FirstPolicyYear1976 Q_FirstPolicyYear1975 Q_FirstPolicyYear1974 P_GeographicLiving2
P_GeographicLiving3 P_GeographicLiving4 P_GeographicLiving1 I_GeographicLiving U_GeographicLiving Q_GeographicLiving2 Q_GeographicLiving3 Q_GeographicLiving4 Q_GeographicLiving1 P_HasChildren0 P_HasChildren1 I_HasChildren U_HasChildren Q_HasChildren0
Q_HasChildren1 ;
MPRINT(EM_DIAGRAM):   run;
27200      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27201      quit;
27202      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
27203      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27204      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
27205      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Impt_TRAIN out=WORK.M0PFSWL4 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PFSWL4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PFSWL4(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PFSWL4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PFSWL4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3Q1TJ_9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2C9HB6C(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q1TJ_9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Plot2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Plot2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "CustomerAge" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_CustomerAge" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "EducationalDegree" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_EducationalDegree" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "ORDINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "FirstPolicyYear" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_FirstPolicyYear" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "ORDINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "GeographicLiving" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_GeographicLiving" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "GrossMonthlySalary" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_GrossMonthlySalary" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "HasChildren" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_HasChildren" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "PremiumsinLOBHealth" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_PremiumsinLOBHealth" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "PremiumsinLOBLife" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_PremiumsinLOBLife" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "PremiumsinLOBMotor" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_PremiumsinLOBMotor" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "PremiumsinLOBWorkComp" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_PremiumsinLOBWorkComp" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 28, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 28, 2015
Time:                13:31:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3ND9B1W "C:\Users\D059331\Desktop\DM_Insurance_segmentation\insurance_segmentation\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3ND9B1W new;
MPRINT(EM_DIAGRAM):   run;
27617      %let _nimpute = 0;
27618      data EMWS1.Impt_RESULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_RESULT;
27619      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,        NOQUOTE))" METHOD = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputemethod_vlabel, NOQUOTE))" IMPUTED = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputedvar_vlabel,   NOQUOTE))" INDICATOR
27619    !  =
27620         "%sysfunc(sasmsg(sashelp.dmine, rpt_indicatorvar_vlabel, NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputevalue_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" LEVEL =
27621         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,       NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" TRAIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_missingcount_vlabel, NOQUOTE, TRAIN))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" METHOD = "Impute Method" IMPUTED = "Imputed Variable" INDICATOR = "Indicator Variable" VALUE = "Impute Value" ROLE = "Role" LEVEL = "Measurement Level" LABEL = "Label" TRAIN = "Number of Missing for
TRAIN";
27622      set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
27623      if eof then call symput('_nimpute', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_nimpute', '1');
27624      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INDICATOR is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.IMPT_META.
      WHERE IMPUTED not = ' ';
NOTE: The data set EMWS1.IMPT_RESULT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27625      proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
27626      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_imputationsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imputation Summary";
27627      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
27628      run;
 
NOTE: There were 10 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27629      proc freq data=EMWS1.Impt_RESULT noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_RESULT noprint;
27630      table train /out=WORK.ImptSUMMARY nocum;
MPRINT(EM_DIAGRAM):   table train /out=WORK.ImptSUMMARY nocum;
27631      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The data set WORK.IMPTSUMMARY has 9 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27632      proc sort data=WORK.ImptSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ImptSUMMARY NOTHREADS;
27633      by descending TRAIN;
MPRINT(EM_DIAGRAM):   by descending TRAIN;
27634      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The data set WORK.IMPTSUMMARY has 9 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27635      proc print data=WORK.ImptSUMMARY(obs=100) label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptSUMMARY(obs=100) label;
27636      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varcount_vlabel,  NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varpercent_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Number of Variables" PERCENT = "Percent of Variables";
27637      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
27638      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_missingvardistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Distribution Training Data";
MPRINT(EM_DIAGRAM):   run;
27639      run;
 
NOTE: There were 9 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27640      data EMWS1.Impt_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_EMSCOREVAR;
27641      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
27642      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
27643      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
27644      file = "IMPUTECODE\"!!"_POSTALL_.sas";
MPRINT(EM_DIAGRAM):   file = "IMPUTECODE\"!!"_POSTALL_.sas";
27645      output;
MPRINT(EM_DIAGRAM):   output;
27646      end;
MPRINT(EM_DIAGRAM):   end;
27647      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
27648      *set EMWS1.Impt_RESULT end=eof;
MPRINT(EM_DIAGRAM):   *set EMWS1.Impt_RESULT end=eof;
27649      if M ne '' then do;
MPRINT(EM_DIAGRAM):   if M ne '' then do;
27650      NAME= M;
MPRINT(EM_DIAGRAM):   NAME= M;
27651      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
27652      output;
MPRINT(EM_DIAGRAM):   output;
27653      end;
MPRINT(EM_DIAGRAM):   end;
27654      if IMP ne '' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' then do;
27655      NAME= IMP;
MPRINT(EM_DIAGRAM):   NAME= IMP;
27656      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
27657      output;
MPRINT(EM_DIAGRAM):   output;
27658      end;
MPRINT(EM_DIAGRAM):   end;
27659      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.IMPT_META.
NOTE: The data set EMWS1.IMPT_EMSCOREVAR has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
