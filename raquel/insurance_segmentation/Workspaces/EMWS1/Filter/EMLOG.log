*------------------------------------------------------------*
User:                raquel
Date:                December 29, 2015
Time:                17:25:54
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:25:50" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 29, 2015
Time:                17:25:50
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QW5VHM "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QW5VHM new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:25:50" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                raquel";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:25:50" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                raquel";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
44911      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
44912      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
44913      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44914      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
44915      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
44916      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
44917      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
44918      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
44919      run;
 
NOTE: There were 6 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44920      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M238WSBV;
MPRINT(EM_DIAGRAM):   set WORK.M238WSBV;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
44943      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
44944      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
44945     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
44946     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
44947     +       %put *** Statistics for Class variables ***;
44948     +       %put >>> DATA= &data  OUTPUT= &output;
44949     +       %put >>> VAR= &vars;
44950     +       %put >>> WHERE=  &where;
44951     +       %put >>> FREQ=  &freq;
44952     +   %end;
44954     +      /* Process metadata data set */
44955     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
44956     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
44957     +       %let FREQ=;
44958     +       %let _nobs=0;
44959     +       data _null;
44960     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
44961     +          if eof then call symput('_nobs', put(_N_, best.));
44962     +       run;
44963     +       %if "&_nobs" ne "0" %then %do;
44964     +           data _null_;
44965     +              file _mac;
44966     +              length _VARS $80; retain _vars;
44967     +              if _n_ =1 then put '%macro _vars;';
44968     +              set &metadata end=eof;
44969     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
44970     +              if ROLE='FREQ' then call symput('FREQ', NAME);
44971     +              else do;
44972     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
44973     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
44974     +                 else do;
44975     +                    put _Vars;
44976     +                    _vars = strip(NAME);
44977     +                 end;
44978     +              end;
44979     +              if eof then do;
44980     +                 put _Vars;
44981     +                 put '%mend _vars;';
44982     +              end;
44983     +           run;
44984     +       %end;
44985     +       %else %do;
44986     +           data _null_;
44987     +              file _mac;
44988     +              put '%macro _vars;';
44989     +              put '%mend _vars;';
44990     +           run;
44991     +       %end;
44992     +   %end;
44993     +   %else %do;
44994     +       data _null_;
44995     +          file _mac;
44996     +          put '%macro _vars;';
44997     +          put '%mend _vars;';
44998     +       run;
44999     +   %end;
45000     +   %inc _mac;
45001     +   filename _mac;
45003     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
45005     +   /* Check if FREQ variable is in the data set */
45006     +   %if &freq ne %then %do;
45007     +       data _null_;
45008     +          dsid = open("&data");
45009     +          if dsid>0 then do;
45010     +               if varnum(dsid, "&FREQ")<1 then
45011     +                  call symput('FREQ', '');
45012     +               dsid = close(dsid);
45013     +          end;
45014     +       run;
45015     +   %end;
45017     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
45018     +      class %_Vars &vars;
45019     +      %if &FREQ ne %then %do;
45020     +          freq &FREQ;
45021     +      %end;
45022     +      %if %bquote(&WHERE) ne %then %do;
45023     +            where &WHERE;
45024     +      %end;
45025     +   run;
45026     +   proc sort data=_tempclass;
45027     +      by VARIABLE;
45028     +   run;
45029     +   data &output;
45030     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
45031     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
45032     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
45033     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
45034     +      set _tempclass;
45035     +      format COUNT;
45036     +      keep VARIABLE COUNT PERCENT VALUE;
45037     +   run;
45038     +   proc means data=&output noprint;
45039     +      class VARIABLE;
45040     +      var COUNT;
45041     +      output out=&STAT N=NUMCAT;
45042     +   run;
45043     +   data &STAT;
45044     +      set &STAT;
45045     +      where _TYPE_=1;
45046     +      KEEP VARIABLE NUMCAT;
45047     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
45048     +      format NUMCAT 8.;
45049     +   run;
45050     +   proc datasets lib=work nolist;
45051     +      delete _tempclass;
45052     +   run;
45053     +   quit;
45055     +   %doend:
45056     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
45058      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
45059      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
45060      set EMWS1.Filter_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST(drop=Count Percent);
45061      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
45062      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45063      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
45064      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
45065      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45066      %class_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=EMWS1.Filter_CLASSDIST, METADATA=EMWS1.Filter_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 4 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:50 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 65.
NOTE: There were 4 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
45067     +%macro _vars;
45068     +IMP_EducationalDegree IMP_GeographicLiving IMP_HasChildren _WARN_
45069     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Trans_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   IMP_EducationalDegree IMP_GeographicLiving IMP_HasChildren _WARN_
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 11 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 11 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data EMWS1.Filter_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=EMWS1.Filter_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
45070      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
45071      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
45072      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
45073      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
45074      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45075      proc sort data=EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSDIST;
45076      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
45077      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45078      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
45079      merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
45080      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
45081      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
45082      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: There were 0 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
45083      data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
45084      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
45085      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
45086      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.FILTER_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
45087      %let EM_CODEBAR = *------------------------------------------------------------*;
45088      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
45089      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
45090     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
45091     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
45092     +   %let _em_nodeid = EM;
45093     +   %if %symexist(EM_NODEID) %then %do;
45094     +       %let _em_nodeid = &em_nodeid;
45095     +   %end;
45097     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
45098     +   %put &EM_CODEBAR;
45099     +   %put * &msgString;
45100     +   %put &EM_CODEBAR;
45102     +   /* Process metadata data set */
45103     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
45104     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
45105     +       %let FREQ=;
45106     +       %let _nobs=0;
45107     +       data _null;
45108     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
45109     +          if eof then call symput('_nobs', put(_N_, best.));
45110     +       run;
45111     +       %if "&_nobs" ne "0" %then %do;
45112     +           data _null_;
45113     +              file _mac;
45114     +              length _VARS $80; retain _vars;
45115     +              if _n_ =1 then put '%macro _vars;';
45116     +              set &metadata end=eof;
45117     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
45118     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
45119     +              else do;
45120     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
45121     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
45122     +                 else do;
45123     +                    put _Vars;
45124     +                    _vars = strip(NAME);
45125     +                 end;
45126     +              end;
45128     +              if eof then do;
45129     +                 put _Vars;
45130     +                 put '%mend _vars;';
45131     +              end;
45132     +           run;
45133     +       %end;
45134     +       %else %do;
45135     +           data _null_;
45136     +              file _mac;
45137     +              put '%macro _vars;';
45138     +              put '%mend _vars;';
45139     +           run;
45140     +       %end;
45141     +   %end;
45142     +   %else %do;
45143     +       data _null_;
45144     +          file _mac;
45145     +          put '%macro _vars;';
45146     +          put '%mend _vars;';
45147     +       run;
45148     +   %end;
45149     +   %inc _mac;
45150     +   filename _mac;
45152     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
45154     +   /* Check if FREQ variable is in the data set */
45155     +   %if &freq ne %then %do;
45156     +       data _null_;
45157     +          dsid = open("&data");
45158     +          if dsid>0 then do;
45159     +               if varnum(dsid, "&FREQ")<1 then
45160     +                  call symput('FREQ', '');
45161     +               dsid = close(dsid);
45162     +          end;
45163     +       run;
45164     +   %end;
45166     +   %if &bindata eq %then %do;
45167     +       %let bindata = _BOUNDS;
45168     +       proc datasets lib=work nolist mt=(DATA VIEW);
45169     +          delete _BOUNDS;
45170     +       run;
45171     +   %end;
45173     +   %global _EM_VARDISTOBS_MAX;
45174     +   %let _EM_VARDISTOBS_MAX = 1000000;
45176     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
45177     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
45178     +   %end;
45180     +   %if &computeStat = Y %then %do;
45181     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
45182     +          var %_Vars &vars;
45183     +          %if &FREQ ne %then %do;
45184     +              freq &FREQ;
45185     +          %end;
45186     +       run;
45187     +       proc sort data=&stat;
45188     +          by VARIABLE;
45189     +       run;
45191     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
45192     +           %let _library = WORK;
45193     +           %let _member  = &STAT;
45194     +      %end;
45195     +      %else %do;
45196     +          %let _library = %scan(&STAT, 1, .);
45197     +          %let _member  = %scan(&STAT, 2, .);
45198     +      %end;
45200     +      proc datasets library=&_library nolist;
45201     +         modify &_member;
45202     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
45203     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
45204     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
45205     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
45206     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
45207     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
45208     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
45209     +      run;
45210     +      quit;
45211     +   %end;
45213     +   %if &BIN ne N %then %do;
45214     +       %if %sysfunc(exist(&bindata))<1 %then %do;
45215     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
45216     +           %put &EM_CODEBAR;
45217     +           %put * &msgString;
45218     +           %put &EM_CODEBAR;
45219     +           filename fref catalog 'work.em.profileformat.source';
45221     +            %let _maxlevel = %eval(&numbars + 1);
45222     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
45223     +               class %_vars &vars;
45224     +            run;
45225     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
45226     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
45227     +            run;
45228     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
45229     +              by NAME;
45230     +           run;
45231     +           proc sort data=_CLASSOUT;
45232     +              by NAME;
45233     +          run;
45234     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
45235     +             var NRAW;
45236     +             by NAME;
45237     +          run;
45238     +          proc delete data=WORK._CLASSOUT;
45239     +          run;
45240     +          data _null_;
45241     +             dsid = open('_DISCRETEMID');
45242     +             if dsid then do;
45243     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
45244     +                dsid = close(dsid);
45245     +             end;
45246     +          run;
45247     +          data _DISCRETEMID;
45248     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
45249     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
45250     +             by VARIABLE;
45251     +             if _b then output;
45252     +          run;
45254     +          data _EMVARDIST / view=_EMVARDIST;
45255     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
45256     +          run;
45257     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
45258     +             var %_vars &vars;
45259     +             %if &FREQ ne %then %do;
45260     +                 freq &FREQ / notrunc;
45261     +             %end;
45262     +          run;
45263     +          proc datasets lib=WORK NOLIST;
45264     +             delete _EMVARDIST / mt=view;
45265     +          run;
45266     +          quit;
45267     +          %if %upcase(&minmax) = Y %then %do;
45268     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
45269     +                 where  _type_ in('P0', 'P100');
45270     +              run;
45271     +              data _MINMAXDATA(keep=Variable Value Pos);
45272     +                 set _MINMAXDATA;
45273     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
45274     +                 Value = min; Pos=1; output;
45275     +                 Value = max; Pos=3; output;
45276     +              run;
45277     +          %end;
45278     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
45279     +                                                             COL3=P95 COL4=MAX));
45280     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
45281     +          run;
45282     +          proc sort data=&bindata;
45283     +             by VARIABLE;
45284     +          run;
45286     +          %let new_numbars=%eval(&NUMBARS+12);
45287     +          data &bindata;
45288     +             set &bindata;
45289     +             length Format $12;
45290     +             array _midpoint{&new_NUMBARS};
45291     +             array _bounds{&new_NUMBARS};
45292     +             if (max - min)>1e-10 then do;
45293     +                step = abs(P95-P5)/&NUMBARS;
45294     +                lstep = abs(p5- min)/5;
45295     +                ustep = abs(max-p95)/5;
45296     +                /* No outlying values */;
45297     +                if lstep<=step and ustep<=step then do;
45298     +                   step = abs(MIN-MAX)/&NUMBARS;
45299     +                   START=MIN;
45300     +                   do i=1 to &numbars;
45301     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
45302     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
45303     +                   end;
45304     +                   %let new_numbars = &numbars;
45305     +                end;
45306     +                else do;
45307     +                   if lstep<=step then do;
45308     +                      step = abs(MIN-P95)/&NUMBARS;
45309     +                      /* Start Histogram at MIN value */
45310     +                      do i=1 to &NUMBARS;
45311     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
45312     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
45313     +                      end;
45314     +                      /* Make BINS with upper outliers width */
45315     +                      do i=1 to 5;
45316     +                         numbars = &numbars + i;
45317     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
45318     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
45319     +                      end;
45320     +                       %let new_numbars = %eval(&numbars+5);
45321     +                   end;
45322     +                   else do;
45323     +                      /* Make BINS with lower outliers width */
45324     +                      do i=1 to 5;
45325     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
45326     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
45327     +                      end;
45328     +                      if ustep<= step then do;
45329     +                         step = abs(P5-MAX)/&NUMBARS;
45330     +                         /* End Histogram at MAX value */
45331     +                         do i=1 to &NUMBARS;
45332     +                            numbars = i+5;
45333     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
45334     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
45335     +                         end;
45336     +                          %let new_numbars = %eval(&numbars+5);
45337     +                      end;
45338     +                      else do;
45339     +                         do i=1 to &NUMBARS;
45340     +                            numbars = i+5;
45341     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
45342     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
45343     +                         end;
45344     +                         /* Make BINS with upper outliers width */
45345     +                         do i=1 to 5;
45346     +                            numbars = &numbars+5+i;
45347     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
45348     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
45349     +                         end;
45350     +                         %let new_numbars = %eval(&numbars+10);
45351     +                      end;
45352     +                   end;
45353     +                end;
45354     +             end;
45355     +             else do;
45356     +                _bounds(1)   = MIN;
45357     +                _midpoint(1) = MIN;
45358     +             end;
45359     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
45360     +          run;
45361     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
45362     +              data &bindata;
45363     +                 merge &bindata _DISCRETEMID(in = _b);
45364     +                 by VARIABLE;
45365     +                 if _b then _DISCRETE=1;
45366     +                 else _DISCRETE=0;
45367     +              run;
45368     +          %end;
45370     +          data _null_;
45371     +             file fref;
45372     +             set &bindata end=eof;
45373     +             array _bounds{&NEW_NUMBARS};
45374     +             array _midpoint{&NEW_NUMBARS};
45375     +             if _n_=1 then
45376     +                put 'proc format;';
45378     +             put 'value ' Format;
45379     +             if _DISCRETE then do;
45380     +                 do i=1 to &numbars;
45381     +                    _MID = _midpoint{i};
45382     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
45383     +                       put _MID '="' _MID '"';
45384     +                 end;
45385     +                 put ';';
45386     +             end;
45387     +             else do;
45388     +                if min eq max then do;
45389     +                   put 'low - high ="' MIN '";';
45390     +                end;
45391     +                else do;
45392     +                   _LB  = MIN;
45393     +                   _MID = _midpoint{1};
45394     +                   _UB  = _bounds{1};
45395     +                   put 'LOW -' _UB '="' _MID '"';
45397     +                   do i=1 to &NEW_NUMBARS-1;
45398     +                      _LB  = _bounds{i};
45399     +                      j=i+1;
45400     +                      _MID = _midpoint{j};
45401     +                      _UB  = _bounds{j};
45402     +                      if (_UB ne .) and (_LB ne _UB) then do;
45403     +                         if _UB>=MAX then
45404     +                            put _LB '-HIGH="' _MID '"';
45405     +                         else
45406     +                            put _LB '-' _UB '="' _MID '"';
45407     +                      end;
45408     +                   end;
45409     +                end;
45410     +             end;
45411     +             put ';';
45412     +             if eof then put 'run;';
45413     +          run;
45415     +          %inc fref;
45417     +          filename fref;
45418     +      %end;
45420     +      data _binneddata / view=_binneddata;
45421     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
45423     +         %let dsid    =%sysfunc(open(&bindata));
45424     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
45425     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
45426     +         %let obs = %sysfunc(fetch(&dsid));
45428     +         %if (&obs=0) %then %do;
45429     +             format
45430     +         %end;
45432     +         %let _count = 0;
45433     +         %do %while(&obs=0);
45434     +             %let _count = %eval(&_count +1);
45435     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
45436     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
45437     +             %do;
45438     +                &_name &_fmtname..
45439     +             %end;
45440     +             %let obs = %sysfunc(fetch(&dsid));
45441     +         %end;
45442     +         %let dsid=%sysfunc(close(&dsid));
45443     +         ;
45444     +      run;
45445     +   %end;
45447     +    %if &bin ne N %then %do;
45448     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
45449     +    %end;
45450     +    %else %do;
45451     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
45452     +    %end;
45453     +      class %_vars &vars;
45454     +      %if &FREQ ne %then %do;
45455     +          freq &FREQ;
45456     +      %end;
45457     +   run;
45458     +   data &output;
45459     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
45460     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
45461     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
45462     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
45463     +      set _temptab;
45464     +      format VALUE 12.3 count;
45465     +      value = inputn(level, 'best12.');
45466     +      keep VARIABLE COUNT PERCENT VALUE;
45467     +   run;
45468     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
45469     +       data &output;
45470     +          set &output(in=_a) _MINMAXDATA;
45471     +          if _a then Pos=2;
45472     +       run;
45473     +       proc sort data=&output out=&output(drop=pos);
45474     +          by VARIABLE POS VALUE;
45475     +          where VALUE ne .;
45476     +       run;
45477     +   %end;
45478     +   proc datasets lib=work nolist mt=(DATA VIEW);
45479     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
45480     +   run;
45481     +   quit;
45483     +   %doend:
45484     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
45485      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
45486      %var_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=EMWS1.Filter_VARDIST, METADATA=EMWS1.Filter_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 15 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:50 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 7 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 74.
NOTE: There were 15 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
45487     +%macro _vars;
45488     +ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear
45489     +IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth
45490     +IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
45491     +IMP_REP_CustomerAge IMP_REP_FirstPolicyYear LOYALTY PremiumsinLOBHousehold
45492     +TOTAL_PREMIUM
45493     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Trans_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
IMP_REP_FirstPolicyYear LOYALTY PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 223 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.13 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 223 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 223 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 223 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 223 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 15 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 2 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Trans_TRAIN(keep
MPRINT(VAR_PROFILE):  =ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
IMP_REP_FirstPolicyYear LOYALTY PremiumsinLOBHousehold TOTAL_PREMIUM obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
IMP_REP_FirstPolicyYear LOYALTY PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
WARNING: At least one of the scale and location estimators of variable IMP_FirstPolicyYear can not be computed. Variable IMP_FirstPolicyYear will not be standardized.
WARNING: At least one of the scale and location estimators of variable LOYALTY can not be computed. Variable LOYALTY will not be standardized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 16 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 15 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 15 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 15 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      2 at 348:9
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 15 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: There were 2 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 15 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tuesday, December 29, 2015 05:25:51 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:51 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 307 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
45494     +proc format;
MPRINT(VAR_PROFILE):   proc format;
45495     +value F1_
45496     +LOW -0.0686759618 ="0.0343379809 "
45497     +0.0686759618 -0.1373519235 ="0.1030139426 "
45498     +0.1373519235 -0.2060278853 ="0.1716899044 "
45499     +0.2060278853 -0.2747038471 ="0.2403658662 "
45500     +0.2747038471 -0.3433798088 ="0.3090418279 "
45501     +0.3433798088 -0.4120557706 ="0.3777177897 "
45502     +0.4120557706 -0.4807317323 ="0.4463937515 "
45503     +0.4807317323 -0.5494076941 ="0.5150697132 "
45504     +0.5494076941 -0.6180836559 ="0.583745675 "
45505     +0.6180836559 -0.6867596176 ="0.6524216368 "
45506     +0.6867596176 -0.7554355794 ="0.7210975985 "
45507     +0.7554355794 -0.8241115412 ="0.7897735603 "
45508     +0.8241115412 -0.8927875029 ="0.8584495221 "
45509     +0.8927875029 -0.9614634647 ="0.9271254838 "
45510     +0.9614634647 -1.0301394265 ="0.9958014456 "
45511     +1.0301394265 -1.0988153882 ="1.0644774073 "
45512     +1.0988153882 -52.119052311 ="52.08471433 "
45513     +52.119052311 -103.13928923 ="103.10495125 "
45514     +103.13928923 -154.15952616 ="154.12518817 "
45515     +154.15952616 -205.17976308 ="205.1454251 "
45516     +205.17976308 -HIGH="256.16566202 "
45517     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0.0686759618 ="0.0343379809 " 0.0686759618 -0.1373519235 ="0.1030139426 " 0.1373519235 -0.2060278853 ="0.1716899044 " 0.2060278853 -0.2747038471 ="0.2403658662 " 0.2747038471 -0.3433798088 ="0.3090418279 "
0.3433798088 -0.4120557706 ="0.3777177897 " 0.4120557706 -0.4807317323 ="0.4463937515 " 0.4807317323 -0.5494076941 ="0.5150697132 " 0.5494076941 -0.6180836559 ="0.583745675 " 0.6180836559 -0.6867596176 ="0.6524216368 " 0.6867596176 -0.7554355794
="0.7210975985 " 0.7554355794 -0.8241115412 ="0.7897735603 " 0.8241115412 -0.8927875029 ="0.8584495221 " 0.8927875029 -0.9614634647 ="0.9271254838 " 0.9614634647 -1.0301394265 ="0.9958014456 " 1.0301394265 -1.0988153882 ="1.0644774073 " 1.0988153882
-52.119052311 ="52.08471433 " 52.119052311 -103.13928923 ="103.10495125 " 103.13928923 -154.15952616 ="154.12518817 " 154.15952616 -205.17976308 ="205.1454251 " 205.17976308 -HIGH="256.16566202 " ;
NOTE: Format F1_ has been output.
45518     +value F2_
45519     +LOW -18.75 ="16.875 "
45520     +18.75 -22.5 ="20.625 "
45521     +22.5 -26.25 ="24.375 "
45522     +26.25 -30 ="28.125 "
45523     +30 -33.75 ="31.875 "
45524     +33.75 -37.5 ="35.625 "
45525     +37.5 -41.25 ="39.375 "
45526     +41.25 -45 ="43.125 "
45527     +45 -48.75 ="46.875 "
45528     +48.75 -52.5 ="50.625 "
45529     +52.5 -56.25 ="54.375 "
45530     +56.25 -60 ="58.125 "
45531     +60 -63.75 ="61.875 "
45532     +63.75 -67.5 ="65.625 "
45533     +67.5 -71.25 ="69.375 "
45534     +71.25 -75 ="73.125 "
45535     +75 -257.6 ="255.725 "
45536     +257.6 -440.2 ="438.325 "
45537     +440.2 -622.8 ="620.925 "
45538     +622.8 -805.4 ="803.525 "
45539     +805.4 -HIGH="986.125 "
45540     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -18.75 ="16.875 " 18.75 -22.5 ="20.625 " 22.5 -26.25 ="24.375 " 26.25 -30 ="28.125 " 30 -33.75 ="31.875 " 33.75 -37.5 ="35.625 " 37.5 -41.25 ="39.375 " 41.25 -45 ="43.125 " 45 -48.75 ="46.875 " 48.75 -52.5 ="50.625 "
52.5 -56.25 ="54.375 " 56.25 -60 ="58.125 " 60 -63.75 ="61.875 " 63.75 -67.5 ="65.625 " 67.5 -71.25 ="69.375 " 71.25 -75 ="73.125 " 75 -257.6 ="255.725 " 257.6 -440.2 ="438.325 " 440.2 -622.8 ="620.925 " 622.8 -805.4 ="803.525 " 805.4 -HIGH="986.125 " ;
NOTE: Format F2_ has been output.
45541     +value F3_
45542     +LOW --132563.0532 ="-165657.3124 "
45543     +-132563.0532 --99445.6824 ="-132539.9416 "
45544     +-99445.6824 --66328.3116 ="-99422.57084 "
45545     +-66328.3116 --33210.9408 ="-66305.20004 "
45546     +-33210.9408 --93.57 ="-33187.82924 "
45547     +-93.57 --47.346875 ="-70.4584375 "
45548     +-47.346875 --1.12375 ="-24.2353125 "
45549     +-1.12375 -45.099375 ="21.9878125 "
45550     +45.099375 -91.3225 ="68.2109375 "
45551     +91.3225 -137.545625 ="114.4340625 "
45552     +137.545625 -183.76875 ="160.6571875 "
45553     +183.76875 -229.991875 ="206.8803125 "
45554     +229.991875 -276.215 ="253.1034375 "
45555     +276.215 -322.438125 ="299.3265625 "
45556     +322.438125 -368.66125 ="345.5496875 "
45557     +368.66125 -414.884375 ="391.7728125 "
45558     +414.884375 -461.1075 ="437.9959375 "
45559     +461.1075 -507.330625 ="484.2190625 "
45560     +507.330625 -553.55375 ="530.4421875 "
45561     +553.55375 -599.776875 ="576.6653125 "
45562     +599.776875 -646 ="622.8884375 "
45563     +646 -2891.978 ="2868.8664375 "
45564     +2891.978 -5137.956 ="5114.8444375 "
45565     +5137.956 -7383.934 ="7360.8224375 "
45566     +7383.934 -9629.912 ="9606.8004375 "
45567     +9629.912 -HIGH="11852.778438 "
45568     +;
MPRINT(VAR_PROFILE):   value F3_ LOW --132563.0532 ="-165657.3124 " -132563.0532 --99445.6824 ="-132539.9416 " -99445.6824 --66328.3116 ="-99422.57084 " -66328.3116 --33210.9408 ="-66305.20004 " -33210.9408 --93.57 ="-33187.82924 " -93.57 --47.346875
="-70.4584375 " -47.346875 --1.12375 ="-24.2353125 " -1.12375 -45.099375 ="21.9878125 " 45.099375 -91.3225 ="68.2109375 " 91.3225 -137.545625 ="114.4340625 " 137.545625 -183.76875 ="160.6571875 " 183.76875 -229.991875 ="206.8803125 " 229.991875 -276.215
="253.1034375 " 276.215 -322.438125 ="299.3265625 " 322.438125 -368.66125 ="345.5496875 " 368.66125 -414.884375 ="391.7728125 " 414.884375 -461.1075 ="437.9959375 " 461.1075 -507.330625 ="484.2190625 " 507.330625 -553.55375 ="530.4421875 " 553.55375
-599.776875 ="576.6653125 " 599.776875 -646 ="622.8884375 " 646 -2891.978 ="2868.8664375 " 2891.978 -5137.956 ="5114.8444375 " 5137.956 -7383.934 ="7360.8224375 " 7383.934 -9629.912 ="9606.8004375 " 9629.912 -HIGH="11852.778438 " ;
NOTE: Format F3_ has been output.
45569     +value F4_
45570     +LOW -1975.375 ="1974.6875 "
45571     +1975.375 -1976.75 ="1976.0625 "
45572     +1976.75 -1978.125 ="1977.4375 "
45573     +1978.125 -1979.5 ="1978.8125 "
45574     +1979.5 -1980.875 ="1980.1875 "
45575     +1980.875 -1982.25 ="1981.5625 "
45576     +1982.25 -1983.625 ="1982.9375 "
45577     +1983.625 -1985 ="1984.3125 "
45578     +1985 -1986.375 ="1985.6875 "
45579     +1986.375 -1987.75 ="1987.0625 "
45580     +1987.75 -1989.125 ="1988.4375 "
45581     +1989.125 -1990.5 ="1989.8125 "
45582     +1990.5 -1991.875 ="1991.1875 "
45583     +1991.875 -1993.25 ="1992.5625 "
45584     +1993.25 -1994.625 ="1993.9375 "
45585     +1994.625 -1996 ="1995.3125 "
45586     +1996 -12353.6 ="12352.9125 "
45587     +12353.6 -22711.2 ="22710.5125 "
45588     +22711.2 -33068.8 ="33068.1125 "
45589     +33068.8 -43426.4 ="43425.7125 "
45590     +43426.4 -HIGH="53783.3125 "
45591     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -1975.375 ="1974.6875 " 1975.375 -1976.75 ="1976.0625 " 1976.75 -1978.125 ="1977.4375 " 1978.125 -1979.5 ="1978.8125 " 1979.5 -1980.875 ="1980.1875 " 1980.875 -1982.25 ="1981.5625 " 1982.25 -1983.625 ="1982.9375 "
1983.625 -1985 ="1984.3125 " 1985 -1986.375 ="1985.6875 " 1986.375 -1987.75 ="1987.0625 " 1987.75 -1989.125 ="1988.4375 " 1989.125 -1990.5 ="1989.8125 " 1990.5 -1991.875 ="1991.1875 " 1991.875 -1993.25 ="1992.5625 " 1993.25 -1994.625 ="1993.9375 "
1994.625 -1996 ="1995.3125 " 1996 -12353.6 ="12352.9125 " 12353.6 -22711.2 ="22710.5125 " 22711.2 -33068.8 ="33068.1125 " 33068.8 -43426.4 ="43425.7125 " 43426.4 -HIGH="53783.3125 " ;
NOTE: Format F4_ has been output.
45592     +value F5_
45593     +;
MPRINT(VAR_PROFILE):   value F5_ ;
NOTE: Format F5_ has been output.
MPRINT(VAR_PROFILE):   ;
45594     +;
45595     +value F6_
45596     +LOW -1129.125 ="897.0625 "
45597     +1129.125 -1593.25 ="1361.1875 "
45598     +1593.25 -2057.375 ="1825.3125 "
45599     +2057.375 -2521.5 ="2289.4375 "
45600     +2521.5 -2985.625 ="2753.5625 "
45601     +2985.625 -3449.75 ="3217.6875 "
45602     +3449.75 -3913.875 ="3681.8125 "
45603     +3913.875 -4378 ="4145.9375 "
45604     +4378 -4842.125 ="4610.0625 "
45605     +4842.125 -5306.25 ="5074.1875 "
45606     +5306.25 -5770.375 ="5538.3125 "
45607     +5770.375 -6234.5 ="6002.4375 "
45608     +6234.5 -6698.625 ="6466.5625 "
45609     +6698.625 -7162.75 ="6930.6875 "
45610     +7162.75 -7626.875 ="7394.8125 "
45611     +7626.875 -8091 ="7858.9375 "
45612     +8091 -28558.752 ="28326.6895 "
45613     +28558.752 -49026.504 ="48794.4415 "
45614     +49026.504 -69494.256 ="69262.1935 "
45615     +69494.256 -89962.008 ="89729.9455 "
45616     +89962.008 -HIGH="110197.6975 "
45617     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -1129.125 ="897.0625 " 1129.125 -1593.25 ="1361.1875 " 1593.25 -2057.375 ="1825.3125 " 2057.375 -2521.5 ="2289.4375 " 2521.5 -2985.625 ="2753.5625 " 2985.625 -3449.75 ="3217.6875 " 3449.75 -3913.875 ="3681.8125 "
3913.875 -4378 ="4145.9375 " 4378 -4842.125 ="4610.0625 " 4842.125 -5306.25 ="5074.1875 " 5306.25 -5770.375 ="5538.3125 " 5770.375 -6234.5 ="6002.4375 " 6234.5 -6698.625 ="6466.5625 " 6698.625 -7162.75 ="6930.6875 " 7162.75 -7626.875 ="7394.8125 "
7626.875 -8091 ="7858.9375 " 8091 -28558.752 ="28326.6895 " 28558.752 -49026.504 ="48794.4415 " 49026.504 -69494.256 ="69262.1935 " 69494.256 -89962.008 ="89729.9455 " 89962.008 -HIGH="110197.6975 " ;
NOTE: Format F6_ has been output.
45618     +value F7_
45619     +LOW -16.60875 ="7.249375 "
45620     +16.60875 -35.3275 ="25.968125 "
45621     +35.3275 -54.04625 ="44.686875 "
45622     +54.04625 -72.765 ="63.405625 "
45623     +72.765 -91.48375 ="82.124375 "
45624     +91.48375 -110.2025 ="100.843125 "
45625     +110.2025 -128.92125 ="119.561875 "
45626     +128.92125 -147.64 ="138.280625 "
45627     +147.64 -166.35875 ="156.999375 "
45628     +166.35875 -185.0775 ="175.718125 "
45629     +185.0775 -203.79625 ="194.436875 "
45630     +203.79625 -222.515 ="213.155625 "
45631     +222.515 -241.23375 ="231.874375 "
45632     +241.23375 -259.9525 ="250.593125 "
45633     +259.9525 -278.67125 ="269.311875 "
45634     +278.67125 -297.39 ="288.030625 "
45635     +297.39 -5892.312 ="5882.952625 "
45636     +5892.312 -11487.234 ="11477.874625 "
45637     +11487.234 -17082.156 ="17072.796625 "
45638     +17082.156 -22677.078 ="22667.718625 "
45639     +22677.078 -HIGH="28262.640625 "
45640     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -16.60875 ="7.249375 " 16.60875 -35.3275 ="25.968125 " 35.3275 -54.04625 ="44.686875 " 54.04625 -72.765 ="63.405625 " 72.765 -91.48375 ="82.124375 " 91.48375 -110.2025 ="100.843125 " 110.2025 -128.92125 ="119.561875 "
128.92125 -147.64 ="138.280625 " 147.64 -166.35875 ="156.999375 " 166.35875 -185.0775 ="175.718125 " 185.0775 -203.79625 ="194.436875 " 203.79625 -222.515 ="213.155625 " 222.515 -241.23375 ="231.874375 " 241.23375 -259.9525 ="250.593125 " 259.9525
-278.67125 ="269.311875 " 278.67125 -297.39 ="288.030625 " 297.39 -5892.312 ="5882.952625 " 5892.312 -11487.234 ="11477.874625 " 11487.234 -17082.156 ="17072.796625 " 17082.156 -22677.078 ="22667.718625 " 22677.078 -HIGH="28262.640625 " ;
NOTE: Format F7_ has been output.
45641     +value F8_
45642     +LOW -2.154375 ="-2.4228125 "
45643     +2.154375 -11.30875 ="6.7315625 "
45644     +11.30875 -20.463125 ="15.8859375 "
45645     +20.463125 -29.6175 ="25.0403125 "
45646     +29.6175 -38.771875 ="34.1946875 "
45647     +38.771875 -47.92625 ="43.3490625 "
45648     +47.92625 -57.080625 ="52.5034375 "
45649     +57.080625 -66.235 ="61.6578125 "
45650     +66.235 -75.389375 ="70.8121875 "
45651     +75.389375 -84.54375 ="79.9665625 "
45652     +84.54375 -93.698125 ="89.1209375 "
45653     +93.698125 -102.8525 ="98.2753125 "
45654     +102.8525 -112.006875 ="107.4296875 "
45655     +112.006875 -121.16125 ="116.5840625 "
45656     +121.16125 -130.315625 ="125.7384375 "
45657     +130.315625 -139.47 ="134.8928125 "
45658     +139.47 -191.236 ="186.6588125 "
45659     +191.236 -243.002 ="238.4248125 "
45660     +243.002 -294.768 ="290.1908125 "
45661     +294.768 -346.534 ="341.9568125 "
45662     +346.534 -HIGH="393.7228125 "
45663     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -2.154375 ="-2.4228125 " 2.154375 -11.30875 ="6.7315625 " 11.30875 -20.463125 ="15.8859375 " 20.463125 -29.6175 ="25.0403125 " 29.6175 -38.771875 ="34.1946875 " 38.771875 -47.92625 ="43.3490625 " 47.92625 -57.080625
="52.5034375 " 57.080625 -66.235 ="61.6578125 " 66.235 -75.389375 ="70.8121875 " 75.389375 -84.54375 ="79.9665625 " 84.54375 -93.698125 ="89.1209375 " 93.698125 -102.8525 ="98.2753125 " 102.8525 -112.006875 ="107.4296875 " 112.006875 -121.16125
="116.5840625 " 121.16125 -130.315625 ="125.7384375 " 130.315625 -139.47 ="134.8928125 " 139.47 -191.236 ="186.6588125 " 191.236 -243.002 ="238.4248125 " 243.002 -294.768 ="290.1908125 " 294.768 -346.534 ="341.9568125 " 346.534 -HIGH="393.7228125 " ;
NOTE: Format F8_ has been output.
45664     +value F9_
45665     +LOW -28.354375 ="12.1221875 "
45666     +28.354375 -60.81875 ="44.5865625 "
45667     +60.81875 -93.283125 ="77.0509375 "
45668     +93.283125 -125.7475 ="109.5153125 "
45669     +125.7475 -158.211875 ="141.9796875 "
45670     +158.211875 -190.67625 ="174.4440625 "
45671     +190.67625 -223.140625 ="206.9084375 "
45672     +223.140625 -255.605 ="239.3728125 "
45673     +255.605 -288.069375 ="271.8371875 "
45674     +288.069375 -320.53375 ="304.3015625 "
45675     +320.53375 -352.998125 ="336.7659375 "
45676     +352.998125 -385.4625 ="369.2303125 "
45677     +385.4625 -417.926875 ="401.6946875 "
45678     +417.926875 -450.39125 ="434.1590625 "
45679     +450.39125 -482.855625 ="466.6234375 "
45680     +482.855625 -515.32 ="499.0878125 "
45681     +515.32 -2733.14 ="2716.9078125 "
45682     +2733.14 -4950.96 ="4934.7278125 "
45683     +4950.96 -7168.78 ="7152.5478125 "
45684     +7168.78 -9386.6 ="9370.3678125 "
45685     +9386.6 -HIGH="11588.187813 "
45686     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -28.354375 ="12.1221875 " 28.354375 -60.81875 ="44.5865625 " 60.81875 -93.283125 ="77.0509375 " 93.283125 -125.7475 ="109.5153125 " 125.7475 -158.211875 ="141.9796875 " 158.211875 -190.67625 ="174.4440625 " 190.67625
-223.140625 ="206.9084375 " 223.140625 -255.605 ="239.3728125 " 255.605 -288.069375 ="271.8371875 " 288.069375 -320.53375 ="304.3015625 " 320.53375 -352.998125 ="336.7659375 " 352.998125 -385.4625 ="369.2303125 " 385.4625 -417.926875 ="401.6946875 "
417.926875 -450.39125 ="434.1590625 " 450.39125 -482.855625 ="466.6234375 " 482.855625 -515.32 ="499.0878125 " 515.32 -2733.14 ="2716.9078125 " 2733.14 -4950.96 ="4934.7278125 " 4950.96 -7168.78 ="7152.5478125 " 7168.78 -9386.6 ="9370.3678125 " 9386.6
-HIGH="11588.187813 " ;
NOTE: Format F9_ has been output.
45687     +value F10_
45688     +LOW --2.71375 ="-7.356875 "
45689     +-2.71375 -6.5725 ="1.929375 "
45690     +6.5725 -15.85875 ="11.215625 "
45691     +15.85875 -25.145 ="20.501875 "
45692     +25.145 -34.43125 ="29.788125 "
45693     +34.43125 -43.7175 ="39.074375 "
45694     +43.7175 -53.00375 ="48.360625 "
45695     +53.00375 -62.29 ="57.646875 "
45696     +62.29 -71.57625 ="66.933125 "
45697     +71.57625 -80.8625 ="76.219375 "
45698     +80.8625 -90.14875 ="85.505625 "
45699     +90.14875 -99.435 ="94.791875 "
45700     +99.435 -108.72125 ="104.078125 "
45701     +108.72125 -118.0075 ="113.364375 "
45702     +118.0075 -127.29375 ="122.650625 "
45703     +127.29375 -136.58 ="131.936875 "
45704     +136.58 -507.004 ="502.360875 "
45705     +507.004 -877.428 ="872.784875 "
45706     +877.428 -1247.852 ="1243.208875 "
45707     +1247.852 -1618.276 ="1613.632875 "
45708     +1618.276 -HIGH="1984.056875 "
45709     +;
MPRINT(VAR_PROFILE):   value F10_ LOW --2.71375 ="-7.356875 " -2.71375 -6.5725 ="1.929375 " 6.5725 -15.85875 ="11.215625 " 15.85875 -25.145 ="20.501875 " 25.145 -34.43125 ="29.788125 " 34.43125 -43.7175 ="39.074375 " 43.7175 -53.00375 ="48.360625 "
53.00375 -62.29 ="57.646875 " 62.29 -71.57625 ="66.933125 " 71.57625 -80.8625 ="76.219375 " 80.8625 -90.14875 ="85.505625 " 90.14875 -99.435 ="94.791875 " 99.435 -108.72125 ="104.078125 " 108.72125 -118.0075 ="113.364375 " 118.0075 -127.29375 ="122.650625
" 127.29375 -136.58 ="131.936875 " 136.58 -507.004 ="502.360875 " 507.004 -877.428 ="872.784875 " 877.428 -1247.852 ="1243.208875 " 1247.852 -1618.276 ="1613.632875 " 1618.276 -HIGH="1984.056875 " ;
NOTE: Format F10_ has been output.
45710     +value F11_
45711     +LOW -19.125 ="17.0625 "
45712     +19.125 -23.25 ="21.1875 "
45713     +23.25 -27.375 ="25.3125 "
45714     +27.375 -31.5 ="29.4375 "
45715     +31.5 -35.625 ="33.5625 "
45716     +35.625 -39.75 ="37.6875 "
45717     +39.75 -43.875 ="41.8125 "
45718     +43.875 -48 ="45.9375 "
45719     +48 -52.125 ="50.0625 "
45720     +52.125 -56.25 ="54.1875 "
45721     +56.25 -60.375 ="58.3125 "
45722     +60.375 -64.5 ="62.4375 "
45723     +64.5 -68.625 ="66.5625 "
45724     +68.625 -72.75 ="70.6875 "
45725     +72.75 -76.875 ="74.8125 "
45726     +76.875 -HIGH="78.9375 "
45727     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -19.125 ="17.0625 " 19.125 -23.25 ="21.1875 " 23.25 -27.375 ="25.3125 " 27.375 -31.5 ="29.4375 " 31.5 -35.625 ="33.5625 " 35.625 -39.75 ="37.6875 " 39.75 -43.875 ="41.8125 " 43.875 -48 ="45.9375 " 48 -52.125 ="50.0625
" 52.125 -56.25 ="54.1875 " 56.25 -60.375 ="58.3125 " 60.375 -64.5 ="62.4375 " 64.5 -68.625 ="66.5625 " 68.625 -72.75 ="70.6875 " 72.75 -76.875 ="74.8125 " 76.875 -HIGH="78.9375 " ;
NOTE: Format F11_ has been output.
45728     +value F12_
45729     +LOW -1975.5 ="1974.75 "
45730     +1975.5 -1977 ="1976.25 "
45731     +1977 -1978.5 ="1977.75 "
45732     +1978.5 -1980 ="1979.25 "
45733     +1980 -1981.5 ="1980.75 "
45734     +1981.5 -1983 ="1982.25 "
45735     +1983 -1984.5 ="1983.75 "
45736     +1984.5 -1986 ="1985.25 "
45737     +1986 -1987.5 ="1986.75 "
45738     +1987.5 -1989 ="1988.25 "
45739     +1989 -1990.5 ="1989.75 "
45740     +1990.5 -1992 ="1991.25 "
45741     +1992 -1993.5 ="1992.75 "
45742     +1993.5 -1995 ="1994.25 "
45743     +1995 -1996.5 ="1995.75 "
45744     +1996.5 -HIGH="1997.25 "
45745     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -1975.5 ="1974.75 " 1975.5 -1977 ="1976.25 " 1977 -1978.5 ="1977.75 " 1978.5 -1980 ="1979.25 " 1980 -1981.5 ="1980.75 " 1981.5 -1983 ="1982.25 " 1983 -1984.5 ="1983.75 " 1984.5 -1986 ="1985.25 " 1986 -1987.5 ="1986.75
" 1987.5 -1989 ="1988.25 " 1989 -1990.5 ="1989.75 " 1990.5 -1992 ="1991.25 " 1992 -1993.5 ="1992.75 " 1993.5 -1995 ="1994.25 " 1995 -1996.5 ="1995.75 " 1996.5 -HIGH="1997.25 " ;
NOTE: Format F12_ has been output.
45746     +value F13_
45747     +;
MPRINT(VAR_PROFILE):   value F13_ ;
NOTE: Format F13_ has been output.
MPRINT(VAR_PROFILE):   ;
45748     +;
45749     +value F14_
45750     +LOW --26.83125 ="-50.915625 "
45751     +-26.83125 -21.3375 ="-2.746875 "
45752     +21.3375 -69.50625 ="45.421875 "
45753     +69.50625 -117.675 ="93.590625 "
45754     +117.675 -165.84375 ="141.759375 "
45755     +165.84375 -214.0125 ="189.928125 "
45756     +214.0125 -262.18125 ="238.096875 "
45757     +262.18125 -310.35 ="286.265625 "
45758     +310.35 -358.51875 ="334.434375 "
45759     +358.51875 -406.6875 ="382.603125 "
45760     +406.6875 -454.85625 ="430.771875 "
45761     +454.85625 -503.025 ="478.940625 "
45762     +503.025 -551.19375 ="527.109375 "
45763     +551.19375 -599.3625 ="575.278125 "
45764     +599.3625 -647.53125 ="623.446875 "
45765     +647.53125 -695.7 ="671.615625 "
45766     +695.7 -5566.32 ="5542.235625 "
45767     +5566.32 -10436.94 ="10412.855625 "
45768     +10436.94 -15307.56 ="15283.475625 "
45769     +15307.56 -20178.18 ="20154.095625 "
45770     +20178.18 -HIGH="25024.715625 "
45771     +;
MPRINT(VAR_PROFILE):   value F14_ LOW --26.83125 ="-50.915625 " -26.83125 -21.3375 ="-2.746875 " 21.3375 -69.50625 ="45.421875 " 69.50625 -117.675 ="93.590625 " 117.675 -165.84375 ="141.759375 " 165.84375 -214.0125 ="189.928125 " 214.0125 -262.18125
="238.096875 " 262.18125 -310.35 ="286.265625 " 310.35 -358.51875 ="334.434375 " 358.51875 -406.6875 ="382.603125 " 406.6875 -454.85625 ="430.771875 " 454.85625 -503.025 ="478.940625 " 503.025 -551.19375 ="527.109375 " 551.19375 -599.3625 ="575.278125 "
599.3625 -647.53125 ="623.446875 " 647.53125 -695.7 ="671.615625 " 695.7 -5566.32 ="5542.235625 " 5566.32 -10436.94 ="10412.855625 " 10436.94 -15307.56 ="15283.475625 " 15307.56 -20178.18 ="20154.095625 " 20178.18 -HIGH="25024.715625 " ;
NOTE: Format F14_ has been output.
45772     +value F15_
45773     +LOW -394.056 ="372.805 "
45774     +394.056 -433.932 ="412.681 "
45775     +433.932 -473.808 ="452.557 "
45776     +473.808 -513.684 ="492.433 "
45777     +513.684 -553.56 ="532.309 "
45778     +553.56 -590.81 ="572.185 "
45779     +590.81 -628.06 ="609.435 "
45780     +628.06 -665.31 ="646.685 "
45781     +665.31 -702.56 ="683.935 "
45782     +702.56 -739.81 ="721.185 "
45783     +739.81 -777.06 ="758.435 "
45784     +777.06 -814.31 ="795.685 "
45785     +814.31 -851.56 ="832.935 "
45786     +851.56 -888.81 ="870.185 "
45787     +888.81 -926.06 ="907.435 "
45788     +926.06 -963.31 ="944.685 "
45789     +963.31 -1000.56 ="981.935 "
45790     +1000.56 -1037.81 ="1019.185 "
45791     +1037.81 -1075.06 ="1056.435 "
45792     +1075.06 -1112.31 ="1093.685 "
45793     +1112.31 -1149.56 ="1130.935 "
45794     +1149.56 -6785.912 ="6767.287 "
45795     +6785.912 -12422.264 ="12403.639 "
45796     +12422.264 -18058.616 ="18039.991 "
45797     +18058.616 -23694.968 ="23676.343 "
45798     +23694.968 -HIGH="29312.695 "
45799     +;
MPRINT(VAR_PROFILE):   value F15_ LOW -394.056 ="372.805 " 394.056 -433.932 ="412.681 " 433.932 -473.808 ="452.557 " 473.808 -513.684 ="492.433 " 513.684 -553.56 ="532.309 " 553.56 -590.81 ="572.185 " 590.81 -628.06 ="609.435 " 628.06 -665.31 ="646.685 "
665.31 -702.56 ="683.935 " 702.56 -739.81 ="721.185 " 739.81 -777.06 ="758.435 " 777.06 -814.31 ="795.685 " 814.31 -851.56 ="832.935 " 851.56 -888.81 ="870.185 " 888.81 -926.06 ="907.435 " 926.06 -963.31 ="944.685 " 963.31 -1000.56 ="981.935 " 1000.56
-1037.81 ="1019.185 " 1037.81 -1075.06 ="1056.435 " 1075.06 -1112.31 ="1093.685 " 1112.31 -1149.56 ="1130.935 " 1149.56 -6785.912 ="6767.287 " 6785.912 -12422.264 ="12403.639 " 12422.264 -18058.616 ="18039.991 " 18058.616 -23694.968 ="23676.343 "
23694.968 -HIGH="29312.695 " ;
NOTE: Format F15_ has been output.
MPRINT(VAR_PROFILE):   run;
45800     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Trans_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format ClaimsRate F1_. CustomerAge F2_. CustomerMonetaryValue F3_. FirstPolicyYear F4_. IMP_FirstPolicyYear F5_. IMP_GrossMonthlySalary F6_. IMP_PremiumsinLOBHealth F7_. IMP_PremiumsinLOBLife F8_. IMP_PremiumsinLOBMotor F9_.
IMP_PremiumsinLOBWorkComp F10_. IMP_REP_CustomerAge F11_. IMP_REP_FirstPolicyYear F12_. LOYALTY F13_. PremiumsinLOBHousehold F14_. TOTAL_PREMIUM F15_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   ClaimsRate CustomerAge CustomerMonetaryValue FirstPolicyYear IMP_FirstPolicyYear IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBLife IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp IMP_REP_CustomerAge
IMP_REP_FirstPolicyYear LOYALTY PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 257 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 257 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS1.FILTER_VARDIST has 257 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 257 observations read from the data set EMWS1.FILTER_VARDIST.
NOTE: There were 30 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS1.FILTER_VARDIST has 287 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=EMWS1.Filter_VARDIST out=EMWS1.Filter_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 279 observations read from the data set EMWS1.FILTER_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS1.FILTER_VARDIST has 279 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
The SAS System
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    data WORK.M3WVIAZ2;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M3WVIAZ2 end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
45811      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
45812      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
45813      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45814      %macro DMDBClass;
45815
45816      %mend DMDBClass;
45817      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45818      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
45819      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45820      %macro DMDBVar;
45821          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
45822         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
45823         PremiumsinLOBHousehold TOTAL_PREMIUM
45824      %mend DMDBVar;
45825      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45826      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
45827      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45828      proc dmdb batch data=EMWS1.Trans_TRAIN
45829      varout=WORK._EMFILTERVAR
45830      maxlevel = 26
45831      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Trans_TRAIN varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   var
45832      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
45833      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK._EMFILTERVAR has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
45834      quit;
45835      *--- end code ---*;
 
45836      data WORK.M3WVIAZ2;
MPRINT(EM_DIAGRAM):    data WORK.M3WVIAZ2;
45837      set WORK.M3WVIAZ2;
MPRINT(EM_DIAGRAM):   set WORK.M3WVIAZ2;
45838      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
45839      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
45840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.M3WVIAZ2.
NOTE: The data set WORK.M3WVIAZ2 has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45841      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
45842      * Filter: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Filter: Input Variables Macro ;
45843      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45844      %macro EM_FILTERPCT;
45845          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
45846         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
45847         PremiumsinLOBHousehold TOTAL_PREMIUM
45848      %mend EM_FILTERPCT;
45849      data EM_Filter_PCT / view=EM_Filter_PCT;
MPRINT(EM_DIAGRAM):   data EM_Filter_PCT / view=EM_Filter_PCT;
45850      set
45850    ! EMWS1.Trans_TRAIN(keep=%EM_FILTERPCT );
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM );
45851      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_FILTER_PCT.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Method PERCENTS;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45852      *------------------------------------------------------------*;
45853      * Filter: Method PERCENTS;
45854      *------------------------------------------------------------*;
45855      proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   proc stdize data=EM_Filter_PCT outstat=WORK.FilterOUTSTAT out=_null_ pctlpts= 0.5 99.5;
MPRINT(EM_DIAGRAM):   var
45856      var %EM_FILTERPCT;
MPRINT(EM_FILTERPCT):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
45857      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.EM_FILTER_PCT.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set WORK.EM_FILTER_PCT.
NOTE: The data set WORK.FILTEROUTSTAT has 10 observations and 9 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
 
45858      %let _FilterIntervalNum= 0;
45859      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
45860      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45861      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45862      filename _X "C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALFILTERCODE.txt";
45863      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
45864      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
45865      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
45866      file _X;
MPRINT(EM_DIAGRAM):   file _X;
45867      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
45868      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
45869      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45870      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
45871      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
45872      end;
MPRINT(EM_DIAGRAM):   end;
45873      else do;
MPRINT(EM_DIAGRAM):   else do;
45874      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
45875      end;
MPRINT(EM_DIAGRAM):   end;
45876      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
45877      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
45878      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
45879      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
45880      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
45881      end;
MPRINT(EM_DIAGRAM):   end;
45882      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
45883      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
45884      end;
MPRINT(EM_DIAGRAM):   end;
45885      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
45886      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
45887      end;
MPRINT(EM_DIAGRAM):   end;
45888      end;
MPRINT(EM_DIAGRAM):   end;
45889      else do;
MPRINT(EM_DIAGRAM):   else do;
45890      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
45891      end;
MPRINT(EM_DIAGRAM):   end;
45892      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
45893      put string;
MPRINT(EM_DIAGRAM):   put string;
45894      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
45895      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=29Dec2015:17:25:52,
      Create Time=29Dec2015:17:25:52
 
NOTE: 8 records were written to the file _X.
      The minimum record length was 68.
      The maximum record length was 113.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45896      %let _FilterIntervalNum= 0;
45897      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
45898      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45899      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45900      filename _X "C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
45901      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
45902      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
45903      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
45904      file _X;
MPRINT(EM_DIAGRAM):   file _X;
45905      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
45906      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
45907      ;
MPRINT(EM_DIAGRAM):   ;
45908      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45909      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
45910      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
45911      end;
MPRINT(EM_DIAGRAM):   end;
45912      else do;
MPRINT(EM_DIAGRAM):   else do;
45913      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
45914      end;
MPRINT(EM_DIAGRAM):   end;
45915      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
45916      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
45917      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
45918      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
45919      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
45920      end;
MPRINT(EM_DIAGRAM):   end;
45921      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
45922      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
45923      end;
MPRINT(EM_DIAGRAM):   end;
45924      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
45925      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
45926      end;
MPRINT(EM_DIAGRAM):   end;
45927      end;
MPRINT(EM_DIAGRAM):   end;
45928      else do;
MPRINT(EM_DIAGRAM):   else do;
45929      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
45930      end;
MPRINT(EM_DIAGRAM):   end;
45931      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
45932      put string;
MPRINT(EM_DIAGRAM):   put string;
45933      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
45934      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=29Dec2015:17:25:52,
      Create Time=29Dec2015:17:25:52
 
NOTE: 8 records were written to the file _X.
      The minimum record length was 68.
      The maximum record length was 113.
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45935      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
45936      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
45937      if
45938      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
45939      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
45940      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
45941      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
45942      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
45943      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
45944      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
45945      and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
45946      ;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) ;
45947      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
45948      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
45949      set
45950      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
45951      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) ;
45952      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
45953      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The data set WORK.FILTERFILTERVAR has 8 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45954      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
45955      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45956      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 8 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45957      proc sort data=WORK.M15RH5FE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M15RH5FE;
45958      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M15RH5FE.
NOTE: The data set WORK.M15RH5FE has 19 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45960      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
45961      merge WORK.M15RH5FE WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M15RH5FE WORK.FilterFILTERVAR(in=_b);
45962      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45963      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
45964      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M15RH5FE.
NOTE: There were 8 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 8 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45965      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
45966      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
45967      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45968      %macro DMDBClass;
45969
45970      %mend DMDBClass;
45971      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45972      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
45973      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45974      %macro DMDBVar;
45975          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
45976         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
45977         PremiumsinLOBHousehold TOTAL_PREMIUM
45978      %mend DMDBVar;
45979      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45980      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
45981      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45982      proc dmdb batch data=EMWS1.Trans_TRAIN
45983      dmdbcat=WORK.Filter_DMDB
45984      varout=WORK.FILTER_VARSTATS
45985      maxlevel = 513
45986      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Trans_TRAIN dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
45987      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
45988      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
45989      quit;
45990      *--- end code ---*;
 
45991      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
45992      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
45993      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
45994      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
45995      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
45996      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
45997      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
45998      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
45999      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
46000      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
46001      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
46002      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
46003      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
46004      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
46005      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46006      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
46007      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 8 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:25:53" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 29, 2015
Time:                17:25:53
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O21_JR9G "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O21_JR9G new;
MPRINT(EM_DIAGRAM):   run;
46109      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
46110      by name;
MPRINT(EM_DIAGRAM):   by name;
46111      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46112      proc print data=EMWS1.Filter_INTERVAL(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Filter_INTERVAL(obs=500) noobs label;
46113      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
46114      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterintervallimits_title,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Filter Limits for Interval Variables";
46115      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
46116      run;
 
NOTE: There were 8 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46117      title9;
MPRINT(EM_DIAGRAM):   title9;
46118      title10;
MPRINT(EM_DIAGRAM):   title10;
46119      data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
MPRINT(EM_DIAGRAM):    data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
46120      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
46121      if
46122      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
46123      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
46124      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
46125      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
46126      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
46127      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
46128      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
46129      and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
46130      then do;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) then do;
46131      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
46132      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
46133      end;
MPRINT(EM_DIAGRAM):   end;
46134      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
46135      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
46136      if M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER = 0;
46137      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_FILTERED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
46138      data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
MPRINT(EM_DIAGRAM):   data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
46139      set EMWS1.Trans_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN;
46140      if
46141      ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713))
46142      and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11))
46143      and ( IMP_GrossMonthlySalary eq . or (853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085))
46144      and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07))
46145      and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and (IMP_PremiumsinLOBMotor<=559.44))
46146      and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38))
46147      and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
46148      and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31))
46149      then do;
MPRINT(EM_DIAGRAM):   if ( ClaimsRate eq . or (0<=ClaimsRate) and (ClaimsRate<=1.3039270713)) and ( CustomerMonetaryValue eq . or (-250.93<=CustomerMonetaryValue) and (CustomerMonetaryValue<=1143.11)) and ( IMP_GrossMonthlySalary eq . or
(853<=IMP_GrossMonthlySalary) and (IMP_GrossMonthlySalary<=9085)) and ( IMP_PremiumsinLOBHealth eq . or (24.45<=IMP_PremiumsinLOBHealth) and (IMP_PremiumsinLOBHealth<=365.07)) and ( IMP_PremiumsinLOBMotor eq . or (18.78<=IMP_PremiumsinLOBMotor) and
(IMP_PremiumsinLOBMotor<=559.44)) and ( IMP_PremiumsinLOBWorkComp eq . or (-11<=IMP_PremiumsinLOBWorkComp) and (IMP_PremiumsinLOBWorkComp<=254.38)) and ( PremiumsinLOBHousehold eq . or (-70<=PremiumsinLOBHousehold) and (PremiumsinLOBHousehold<=1194.1))
and ( TOTAL_PREMIUM eq . or (512.65<=TOTAL_PREMIUM) and (TOTAL_PREMIUM<=1568.31)) then do;
46150      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
46151      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
46152      end;
MPRINT(EM_DIAGRAM):   end;
46153      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
46154      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
46155      if M_FILTER = 1;
MPRINT(EM_DIAGRAM):   if M_FILTER = 1;
46156      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_EXCLUDED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * createcountreport;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.Trans_TRAIN;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from WORK.DATA_FILTERED;
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
46157      data WORK.FilterCOUNT;
MPRINT(EM_DIAGRAM):    data WORK.FilterCOUNT;
46158      length DATAROLE $16;
MPRINT(EM_DIAGRAM):   length DATAROLE $16;
46159      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))" FILTERED = "%sysfunc(sasmsg(sashelp.dmine, rpt_filtered_vlabel, NOQUOTE))" EXCLUDED = "%sysfunc(sasmsg(sashelp.dmine, rpt_excluded_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" FILTERED = "Filtered" EXCLUDED = "Excluded";
46160      DATAROLE = 'TRAIN';
MPRINT(EM_DIAGRAM):   DATAROLE = 'TRAIN';
46161      DATA = 10296;
MPRINT(EM_DIAGRAM):   DATA = 10296;
46162      FILTERED = 9791;
MPRINT(EM_DIAGRAM):   FILTERED = 9791;
46163      EXCLUDED = 505;
MPRINT(EM_DIAGRAM):   EXCLUDED = 505;
46164      output;
MPRINT(EM_DIAGRAM):   output;
46165      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.FILTERCOUNT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46166      proc print data=WORK.FilterCOUNT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterCOUNT noobs label;
46167      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
46168      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
46169      run;
 
NOTE: There were 1 observations read from the data set WORK.FILTERCOUNT.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46170      title9;
MPRINT(EM_DIAGRAM):   title9;
46171      title10;
MPRINT(EM_DIAGRAM):   title10;
46172      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46173      * createstattable;
MPRINT(EM_DIAGRAM):   * createstattable;
46174      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46175      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
46176      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
46177      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
46178      %macro DMDBClass;
46179
46180      %mend DMDBClass;
46181      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
46182      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
46183      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
46184      %macro DMDBVar;
46185          ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary
46186         IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp
46187         PremiumsinLOBHousehold TOTAL_PREMIUM
46188      %mend DMDBVar;
46189      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46190      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
46191      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46192      proc dmdb batch data=WORK.DATA_FILTERED
46193      dmdbcat=WORK.Filter_DMDB
46194      varout=WORK.FILTER_VARSTATS
46195      maxlevel = 513
46196      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.DATA_FILTERED dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
46197      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate CustomerMonetaryValue IMP_GrossMonthlySalary IMP_PremiumsinLOBHealth IMP_PremiumsinLOBMotor IMP_PremiumsinLOBWorkComp PremiumsinLOBHousehold TOTAL_PREMIUM
MPRINT(EM_DIAGRAM):  ;
46198      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable IMP_FirstPolicyYear is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 9791   Memory used = 511K.
NOTE: There were 10296 observations read from the data set INSPROJF.A2ZINSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      10296 at 116672:24
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 9791 observations read from the data set WORK.DATA_FILTERED.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
46199      quit;
46200      *--- end code ---*;
 
46201      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
46202      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
46203      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
46204      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
46205      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
46206      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
46207      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
46208      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
46209      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
46210      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
46211      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
46212      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
46213      retain DATAROLE "TRAIN" type "FILTERED";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "FILTERED";
46214      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
46215      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 8 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46216      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
46217      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: There were 8 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: 8 observations added.
NOTE: The data set EMWS1.FILTER_STATS has 16 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46218      proc sort data=EMWS1.Filter_STATS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_STATS;
46219      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
46220      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 16 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
46221      proc transpose data=EMWS1.Filter_STATS out=EMWS1.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Filter_STATS out=EMWS1.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
46222      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
46223      id TYPE;
MPRINT(EM_DIAGRAM):   id TYPE;
46224      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 64 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
46225      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS1 nolist;
46226      modify Filter_STATS;
MPRINT(EM_DIAGRAM):   modify Filter_STATS;
46227      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" STATISTIC = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel, NOQUOTE))" FILTERED="Filtered" ORIGINAL = "%sysfunc(sasmsg(sashelp.dmine, rpt_original_vlabel,
46227    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable" STATISTIC = "Statistics" FILTERED= "Filtered" ORIGINAL = "Original";
MPRINT(EM_DIAGRAM):   run;
46228      run;
 
NOTE: MODIFY was successful for EMWS1.FILTER_STATS.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
46229      proc sort data=EMWS1.Filter_STATS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_STATS;
46230      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
46231      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set EMWS1.FILTER_STATS.
NOTE: The data set EMWS1.FILTER_STATS has 64 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
46232      %let _cn = %sysfunc(getoption(CENTER));
46233      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
46234      proc print data=EMWS1.Filter_STATS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Filter_STATS(obs=500) noobs label;
46235      var STATISTIC ORIGINAL
46236      FILTERED
46237      ;
MPRINT(EM_DIAGRAM):   var STATISTIC ORIGINAL FILTERED ;
46238      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
46239      where ORIGINAL ne .;
MPRINT(EM_DIAGRAM):   where ORIGINAL ne .;
46240      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterstat_title,    NOQUOTE, FILTERED))";
MPRINT(EM_DIAGRAM):   title9 "Statistics for Original and FILTERED Data";
46241      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
46242      run;
 
NOTE: There were 64 observations read from the data set EMWS1.FILTER_STATS.
      WHERE ORIGINAL not = .;
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46243      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
46244      title9;
MPRINT(EM_DIAGRAM):   title9;
46245      title10;
MPRINT(EM_DIAGRAM):   title10;
46246      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46247      * createhistogramtable;
MPRINT(EM_DIAGRAM):   * createhistogramtable;
46248      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46249      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
46250      set WORK.FilterDMDBC(where=(report='Y'));
MPRINT(EM_DIAGRAM):   set WORK.FilterDMDBC(where=(report='Y'));
46251      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE report='Y';
NOTE: The data set WORK.FILTERDMDBC has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46252      filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
46253      %inc vdist;
NOTE: %INCLUDE (level 1) file VDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
46254     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
46255     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
46256     +   %let _em_nodeid = EM;
46257     +   %if %symexist(EM_NODEID) %then %do;
46258     +       %let _em_nodeid = &em_nodeid;
46259     +   %end;
46261     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
46262     +   %put &EM_CODEBAR;
46263     +   %put * &msgString;
46264     +   %put &EM_CODEBAR;
46266     +   /* Process metadata data set */
46267     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
46268     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
46269     +       %let FREQ=;
46270     +       %let _nobs=0;
46271     +       data _null;
46272     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
46273     +          if eof then call symput('_nobs', put(_N_, best.));
46274     +       run;
46275     +       %if "&_nobs" ne "0" %then %do;
46276     +           data _null_;
46277     +              file _mac;
46278     +              length _VARS $80; retain _vars;
46279     +              if _n_ =1 then put '%macro _vars;';
46280     +              set &metadata end=eof;
46281     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
46282     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
46283     +              else do;
46284     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
46285     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
46286     +                 else do;
46287     +                    put _Vars;
46288     +                    _vars = strip(NAME);
46289     +                 end;
46290     +              end;
46292     +              if eof then do;
46293     +                 put _Vars;
46294     +                 put '%mend _vars;';
46295     +              end;
46296     +           run;
46297     +       %end;
46298     +       %else %do;
46299     +           data _null_;
46300     +              file _mac;
46301     +              put '%macro _vars;';
46302     +              put '%mend _vars;';
46303     +           run;
46304     +       %end;
46305     +   %end;
46306     +   %else %do;
46307     +       data _null_;
46308     +          file _mac;
46309     +          put '%macro _vars;';
46310     +          put '%mend _vars;';
46311     +       run;
46312     +   %end;
46313     +   %inc _mac;
46314     +   filename _mac;
46316     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
46318     +   /* Check if FREQ variable is in the data set */
46319     +   %if &freq ne %then %do;
46320     +       data _null_;
46321     +          dsid = open("&data");
46322     +          if dsid>0 then do;
46323     +               if varnum(dsid, "&FREQ")<1 then
46324     +                  call symput('FREQ', '');
46325     +               dsid = close(dsid);
46326     +          end;
46327     +       run;
46328     +   %end;
46330     +   %if &bindata eq %then %do;
46331     +       %let bindata = _BOUNDS;
46332     +       proc datasets lib=work nolist mt=(DATA VIEW);
46333     +          delete _BOUNDS;
46334     +       run;
46335     +   %end;
46337     +   %global _EM_VARDISTOBS_MAX;
46338     +   %let _EM_VARDISTOBS_MAX = 1000000;
46340     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
46341     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
46342     +   %end;
46344     +   %if &computeStat = Y %then %do;
46345     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
46346     +          var %_Vars &vars;
46347     +          %if &FREQ ne %then %do;
46348     +              freq &FREQ;
46349     +          %end;
46350     +       run;
46351     +       proc sort data=&stat;
46352     +          by VARIABLE;
46353     +       run;
46355     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
46356     +           %let _library = WORK;
46357     +           %let _member  = &STAT;
46358     +      %end;
46359     +      %else %do;
46360     +          %let _library = %scan(&STAT, 1, .);
46361     +          %let _member  = %scan(&STAT, 2, .);
46362     +      %end;
46364     +      proc datasets library=&_library nolist;
46365     +         modify &_member;
46366     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
46367     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
46368     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
46369     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
46370     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
46371     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
46372     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
46373     +      run;
46374     +      quit;
46375     +   %end;
46377     +   %if &BIN ne N %then %do;
46378     +       %if %sysfunc(exist(&bindata))<1 %then %do;
46379     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
46380     +           %put &EM_CODEBAR;
46381     +           %put * &msgString;
46382     +           %put &EM_CODEBAR;
46383     +           filename fref catalog 'work.em.profileformat.source';
46385     +            %let _maxlevel = %eval(&numbars + 1);
46386     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
46387     +               class %_vars &vars;
46388     +            run;
46389     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
46390     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
46391     +            run;
46392     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
46393     +              by NAME;
46394     +           run;
46395     +           proc sort data=_CLASSOUT;
46396     +              by NAME;
46397     +          run;
46398     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
46399     +             var NRAW;
46400     +             by NAME;
46401     +          run;
46402     +          proc delete data=WORK._CLASSOUT;
46403     +          run;
46404     +          data _null_;
46405     +             dsid = open('_DISCRETEMID');
46406     +             if dsid then do;
46407     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
46408     +                dsid = close(dsid);
46409     +             end;
46410     +          run;
46411     +          data _DISCRETEMID;
46412     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
46413     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
46414     +             by VARIABLE;
46415     +             if _b then output;
46416     +          run;
46418     +          data _EMVARDIST / view=_EMVARDIST;
46419     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
46420     +          run;
46421     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
46422     +             var %_vars &vars;
46423     +             %if &FREQ ne %then %do;
46424     +                 freq &FREQ / notrunc;
46425     +             %end;
46426     +          run;
46427     +          proc datasets lib=WORK NOLIST;
46428     +             delete _EMVARDIST / mt=view;
46429     +          run;
46430     +          quit;
46431     +          %if %upcase(&minmax) = Y %then %do;
46432     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
46433     +                 where  _type_ in('P0', 'P100');
46434     +              run;
46435     +              data _MINMAXDATA(keep=Variable Value Pos);
46436     +                 set _MINMAXDATA;
46437     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
46438     +                 Value = min; Pos=1; output;
46439     +                 Value = max; Pos=3; output;
46440     +              run;
46441     +          %end;
46442     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
46443     +                                                             COL3=P95 COL4=MAX));
46444     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
46445     +          run;
46446     +          proc sort data=&bindata;
46447     +             by VARIABLE;
46448     +          run;
46450     +          %let new_numbars=%eval(&NUMBARS+12);
46451     +          data &bindata;
46452     +             set &bindata;
46453     +             length Format $12;
46454     +             array _midpoint{&new_NUMBARS};
46455     +             array _bounds{&new_NUMBARS};
46456     +             if (max - min)>1e-10 then do;
46457     +                step = abs(P95-P5)/&NUMBARS;
46458     +                lstep = abs(p5- min)/5;
46459     +                ustep = abs(max-p95)/5;
46460     +                /* No outlying values */;
46461     +                if lstep<=step and ustep<=step then do;
46462     +                   step = abs(MIN-MAX)/&NUMBARS;
46463     +                   START=MIN;
46464     +                   do i=1 to &numbars;
46465     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
46466     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
46467     +                   end;
46468     +                   %let new_numbars = &numbars;
46469     +                end;
46470     +                else do;
46471     +                   if lstep<=step then do;
46472     +                      step = abs(MIN-P95)/&NUMBARS;
46473     +                      /* Start Histogram at MIN value */
46474     +                      do i=1 to &NUMBARS;
46475     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
46476     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
46477     +                      end;
46478     +                      /* Make BINS with upper outliers width */
46479     +                      do i=1 to 5;
46480     +                         numbars = &numbars + i;
46481     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
46482     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
46483     +                      end;
46484     +                       %let new_numbars = %eval(&numbars+5);
46485     +                   end;
46486     +                   else do;
46487     +                      /* Make BINS with lower outliers width */
46488     +                      do i=1 to 5;
46489     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
46490     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
46491     +                      end;
46492     +                      if ustep<= step then do;
46493     +                         step = abs(P5-MAX)/&NUMBARS;
46494     +                         /* End Histogram at MAX value */
46495     +                         do i=1 to &NUMBARS;
46496     +                            numbars = i+5;
46497     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
46498     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
46499     +                         end;
46500     +                          %let new_numbars = %eval(&numbars+5);
46501     +                      end;
46502     +                      else do;
46503     +                         do i=1 to &NUMBARS;
46504     +                            numbars = i+5;
46505     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
46506     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
46507     +                         end;
46508     +                         /* Make BINS with upper outliers width */
46509     +                         do i=1 to 5;
46510     +                            numbars = &numbars+5+i;
46511     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
46512     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
46513     +                         end;
46514     +                         %let new_numbars = %eval(&numbars+10);
46515     +                      end;
46516     +                   end;
46517     +                end;
46518     +             end;
46519     +             else do;
46520     +                _bounds(1)   = MIN;
46521     +                _midpoint(1) = MIN;
46522     +             end;
46523     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
46524     +          run;
46525     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
46526     +              data &bindata;
46527     +                 merge &bindata _DISCRETEMID(in = _b);
46528     +                 by VARIABLE;
46529     +                 if _b then _DISCRETE=1;
46530     +                 else _DISCRETE=0;
46531     +              run;
46532     +          %end;
46534     +          data _null_;
46535     +             file fref;
46536     +             set &bindata end=eof;
46537     +             array _bounds{&NEW_NUMBARS};
46538     +             array _midpoint{&NEW_NUMBARS};
46539     +             if _n_=1 then
46540     +                put 'proc format;';
46542     +             put 'value ' Format;
46543     +             if _DISCRETE then do;
46544     +                 do i=1 to &numbars;
46545     +                    _MID = _midpoint{i};
46546     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
46547     +                       put _MID '="' _MID '"';
46548     +                 end;
46549     +                 put ';';
46550     +             end;
46551     +             else do;
46552     +                if min eq max then do;
46553     +                   put 'low - high ="' MIN '";';
46554     +                end;
46555     +                else do;
46556     +                   _LB  = MIN;
46557     +                   _MID = _midpoint{1};
46558     +                   _UB  = _bounds{1};
46559     +                   put 'LOW -' _UB '="' _MID '"';
46561     +                   do i=1 to &NEW_NUMBARS-1;
46562     +                      _LB  = _bounds{i};
46563     +                      j=i+1;
46564     +                      _MID = _midpoint{j};
46565     +                      _UB  = _bounds{j};
46566     +                      if (_UB ne .) and (_LB ne _UB) then do;
46567     +                         if _UB>=MAX then
46568     +                            put _LB '-HIGH="' _MID '"';
46569     +                         else
46570     +                            put _LB '-' _UB '="' _MID '"';
46571     +                      end;
46572     +                   end;
46573     +                end;
46574     +             end;
46575     +             put ';';
46576     +             if eof then put 'run;';
46577     +          run;
46579     +          %inc fref;
46581     +          filename fref;
46582     +      %end;
46584     +      data _binneddata / view=_binneddata;
46585     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
46587     +         %let dsid    =%sysfunc(open(&bindata));
46588     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
46589     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
46590     +         %let obs = %sysfunc(fetch(&dsid));
46592     +         %if (&obs=0) %then %do;
46593     +             format
46594     +         %end;
46596     +         %let _count = 0;
46597     +         %do %while(&obs=0);
46598     +             %let _count = %eval(&_count +1);
46599     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
46600     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
46601     +             %do;
46602     +                &_name &_fmtname..
46603     +             %end;
46604     +             %let obs = %sysfunc(fetch(&dsid));
46605     +         %end;
46606     +         %let dsid=%sysfunc(close(&dsid));
46607     +         ;
46608     +      run;
46609     +   %end;
46611     +    %if &bin ne N %then %do;
46612     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
46613     +    %end;
46614     +    %else %do;
46615     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
46616     +    %end;
46617     +      class %_vars &vars;
46618     +      %if &FREQ ne %then %do;
46619     +          freq &FREQ;
46620     +      %end;
46621     +   run;
46622     +   data &output;
46623     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
46624     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
46625     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
46626     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
46627     +      set _temptab;
46628     +      format VALUE 12.3 count;
46629     +      value = inputn(level, 'best12.');
46630     +      keep VARIABLE COUNT PERCENT VALUE;
46631     +   run;
46632     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
46633     +       data &output;
46634     +          set &output(in=_a) _MINMAXDATA;
46635     +          if _a then Pos=2;
46636     +       run;
46637     +       proc sort data=&output out=&output(drop=pos);
46638     +          by VARIABLE POS VALUE;
46639     +          where VALUE ne .;
46640     +       run;
46641     +   %end;
46642     +   proc datasets lib=work nolist mt=(DATA VIEW);
46643     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
46644     +   run;
46645     +   quit;
46647     +   %doend:
46648     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
46649      filename vdist;
MPRINT(EM_DIAGRAM):   filename vdist;
NOTE: Fileref VDIST has been deassigned.
46650      %let em_nodeid = Filter;
46651      %var_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, FREQ=, BIN=Y, NUMBARS= 16);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:50 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
46652     +%macro _vars;
46653     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
46654      %var_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, STAT=_STAT, BIN=Y, BINDATA=_bindata, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:53 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
46655     +%macro _vars;
46656     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
46657      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46658      * Filter: Creating Bar Chart Table;
MPRINT(EM_DIAGRAM):   * Filter: Creating Bar Chart Table;
46659      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46660      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):   filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
46661      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
46662     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
46663     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
46664     +       %put *** Statistics for Class variables ***;
46665     +       %put >>> DATA= &data  OUTPUT= &output;
46666     +       %put >>> VAR= &vars;
46667     +       %put >>> WHERE=  &where;
46668     +       %put >>> FREQ=  &freq;
46669     +   %end;
46671     +      /* Process metadata data set */
46672     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
46673     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
46674     +       %let FREQ=;
46675     +       %let _nobs=0;
46676     +       data _null;
46677     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
46678     +          if eof then call symput('_nobs', put(_N_, best.));
46679     +       run;
46680     +       %if "&_nobs" ne "0" %then %do;
46681     +           data _null_;
46682     +              file _mac;
46683     +              length _VARS $80; retain _vars;
46684     +              if _n_ =1 then put '%macro _vars;';
46685     +              set &metadata end=eof;
46686     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
46687     +              if ROLE='FREQ' then call symput('FREQ', NAME);
46688     +              else do;
46689     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
46690     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
46691     +                 else do;
46692     +                    put _Vars;
46693     +                    _vars = strip(NAME);
46694     +                 end;
46695     +              end;
46696     +              if eof then do;
46697     +                 put _Vars;
46698     +                 put '%mend _vars;';
46699     +              end;
46700     +           run;
46701     +       %end;
46702     +       %else %do;
46703     +           data _null_;
46704     +              file _mac;
46705     +              put '%macro _vars;';
46706     +              put '%mend _vars;';
46707     +           run;
46708     +       %end;
46709     +   %end;
46710     +   %else %do;
46711     +       data _null_;
46712     +          file _mac;
46713     +          put '%macro _vars;';
46714     +          put '%mend _vars;';
46715     +       run;
46716     +   %end;
46717     +   %inc _mac;
46718     +   filename _mac;
46720     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
46722     +   /* Check if FREQ variable is in the data set */
46723     +   %if &freq ne %then %do;
46724     +       data _null_;
46725     +          dsid = open("&data");
46726     +          if dsid>0 then do;
46727     +               if varnum(dsid, "&FREQ")<1 then
46728     +                  call symput('FREQ', '');
46729     +               dsid = close(dsid);
46730     +          end;
46731     +       run;
46732     +   %end;
46734     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
46735     +      class %_Vars &vars;
46736     +      %if &FREQ ne %then %do;
46737     +          freq &FREQ;
46738     +      %end;
46739     +      %if %bquote(&WHERE) ne %then %do;
46740     +            where &WHERE;
46741     +      %end;
46742     +   run;
46743     +   proc sort data=_tempclass;
46744     +      by VARIABLE;
46745     +   run;
46746     +   data &output;
46747     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
46748     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
46749     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
46750     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
46751     +      set _tempclass;
46752     +      format COUNT;
46753     +      keep VARIABLE COUNT PERCENT VALUE;
46754     +   run;
46755     +   proc means data=&output noprint;
46756     +      class VARIABLE;
46757     +      var COUNT;
46758     +      output out=&STAT N=NUMCAT;
46759     +   run;
46760     +   data &STAT;
46761     +      set &STAT;
46762     +      where _TYPE_=1;
46763     +      KEEP VARIABLE NUMCAT;
46764     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
46765     +      format NUMCAT 8.;
46766     +   run;
46767     +   proc datasets lib=work nolist;
46768     +      delete _tempclass;
46769     +   run;
46770     +   quit;
46772     +   %doend:
46773     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
46775      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
46776      %let em_nodeid = Filter;
46777      %class_profile(DATA=EMWS1.Trans_TRAIN, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:53 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
46778     +%macro _vars;
46779     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
46780      %class_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tuesday, December 29, 2015 05:25:50 PM,
      Last Modified=Tuesday, December 29, 2015 05:25:53 PM,
      Filename=C:\Users\raquel\AppData\Local\Temp\SAS Temporary Files\_TD2744_RAQUEL5F3E_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
46781     +%macro _vars;
46782     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
46783      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46784      * Filter: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Filter: Computing metadata for TRAIN data;
46785      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Filter_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Filter_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Filter_TRAIN out=WORK.M35TG1QJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35TG1QJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M35TG1QJ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35TG1QJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M35TG1QJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2TN2NN0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OQ79Y7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TN2NN0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Filter_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Filter";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="M_FILTER" then do;
MPRINT(EM_DIAGRAM):   role ="REJECTED";
MPRINT(EM_DIAGRAM):   level = "BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 29, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:25:54" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 29, 2015
Time:                17:25:54
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2_3T7DY "\\Mac\Home\Documents\DataMining\DM-CustomerSegmentation-master\insurance_segmentation\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2_3T7DY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
